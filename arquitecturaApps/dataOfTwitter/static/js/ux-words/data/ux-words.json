{
    "articles": [
        {
            "title": "5 Mistakes to Avoid When Designing Micro-interactions",
            "date": "Wed Apr 27 2016 08:17:49 GMT-0400 (EDT)",
            "text": " Or, \"What I learned after taking a week off and watching thousands of micro-interaction animations until my eyeballs fell out.\"(by the way, if you want to receive my articles and tutorial videos straight to your email, click here to get added to my list)First of all, let's get synced up. What is a micro-interaction anyway?In doing my due diligence for this post, I came across this handy definition by Carrie Cousins, who seems like a cool person. She says -Well ok then. I don't know about you but I found that invigorating. Enjoy with relish.Before we get into the ‘5 mistakes,' I want to mention that the following UI animations I am about to rip into are all from extremely talented designers. I have huge respect for them and their work. They are kind enough to offer their portfolios and ‘work in progress' pieces publically for us to enjoy and learn from. I've known quite a few designers to be elitist assholes when critiquing work. That has never been my style. If I come across as mean, just know that I find design seriousness highly entertaining. I am not attacking anyone. I am amusing myself, and hopefully you, dear reader.You strapped in? Let's do this thing.As a designer, your ego is a delicate flower in need of frequent watering and praise. Designing high quality micro-interactions means sending your ego out for a mani-pedi while you get the real work done.Here, Sergey Valiukh (who is is a genius with type, layout, color, and animation), hoses some micro interactions. Animation is the perfect place to kick the tires on an idea and see if it works. That's what he did and it doesn't.Let's break down the play by play -Conclusion: there is a ton of value in producing animations like this. You get to see what works, what doesn't work, where to trim the fat, and where to get your ego out of the way, and create clean, usable experiences. This is not to say you can't have fun and add delightful details, just be aware that your delightful detail may in fact be fat in disguise.Key concept - RestraintIn user experiences, narrative is important for a variety of reasons. Partly this has to do with expectation, continuity and how these things impact cognitive load. Partly it has to do with how our minds organize and make sense of information. It also has to do with how we build mental models of things so we can use them. Basically, narrative is important.In this example, Srikant Shetty (who is a very strong animator and designer) does a terrific job of mangling narrative. Follow me below for the play by play.The first thing you might notice is how bizarre this narrative is. We expect the text to appear inline. Instead, the line isn't really a line. It's actually some sort of hidden bigger shape with just its head poking out. By tapping on its head, we've enraged it and now it has come out of hiding, presumably to defend its territory (at which point our input appears and we can type away). Like I said, bizarre.The narrative we would expect as we input form data is interrupted. Our expectation is broken. Rather than continuing our task and flow, we are now forced to stop and deal with the unexpected, updating our mental model, and taking us away from our intended result.This is what can happen when designers ‘get creative.' Rather than focusing on preserving the core narrative of the interaction, they go big, sacrificing the narrative for a cool effect or technique. In effect, they make the interaction ‘mushy' to borrow a term from Pasquale.Great micro-interactions emply clean narrative and flow. Contrast the above with either of the following -In both of these instances, the narrative flow is clean and tight. While the example on the left has an element of play in the line bounce, it functions as a delightful detail, rather than a fundamental of the interaction model itself.Key concept - NarrativeSurprisingly, this is something that really caught my eye. Almost every single successful micro interaction I came across consisted of a single movement or unified motion. The unsuccessful ones stood out by the complexity of their movement.In this example, Romain Passelande (who has an insanely cool Dribbble portfolio) does a thorough job of harshing my mellow. Let's check it out.Now if you aren't used to animation, you may not see what I see. I see two separate movements that can be combined into a single movement, but aren't. There are two distinct actions going on -Rather than having these separate actions happen together, Romain had them happen separately (the lines transform and then the icon rotates - not cool). If you're still not seeing it, maybe some side by side examples will help -Here, the animations on the left and right violate this ‘single movement' principle. The animation in the middle contains a single unified movement, and makes me happy. It should also make you happy. The movement in the middle animation is clean, definitive and efficient.Key concept - Single MovementAs someone who studies the finer nuances of UI animation, one issue that keeps coming up is that designers have a difficult time separating the motion from the static design. This is understandable and partly a function of the seamless nature of a good micro-interaction: it's hard to spot in realtime. A bad micro-interaction sticks out like a sore thumb.In the following chart, I've boiled down the finer details of my theories on design and animation. Feel free to print it out and hang it by your desk for reference.In general, you want to be aiming for the area with the dot and the arrow next to it. I made the dot pink so you could find it quickly if you happen to be in the middle of a project and short on time.Let's take this out of the world of theory and into the real world. In the following example, you're going to practice separating the design from the animationHere, Sam Thibault, a very talented designer at Handsome (Sam has crazy good design and animation chops) got super excited one day and decided to create an awesome animation on top of some not so cool design.Now, you may be thinking to yourself, \"Stop picking on Sam, this looks fresh.\" And it does. Like I said, Sam is a talented guy. What makes this such a great reference is the treatment of the ‘add to cart' button.In this example, there is no animation solution that would save this design from itself. The fault lies in the design, not in the execution of the design over time, which essentially is what a micro-interaction is - design over time.Here, the ‘add to cart' button incomprehensibly transforms, changes shape and fills the image gutter. Not only is this unnecessary, but due to the scale of this critical UI element, now the user is burdened with additional cognitive load.In film production, it has been said that problems on set are problems that originated in the script. A bad script equals a bad shoot. A bad design equals a bad micro-interaction.Key concept - Animation will not save youWayne Gretzky said that. Apparently, he was pretty good at whacking a plastic disc into a small net while dancing around on ice skates while avoiding punches being thrown by grown men, also dancing around on ice skates. Which if you think about it, is a fairly apt description of what it's like being a UX designer trying to design micro interactions: you've got a lot on your plate.Because designers largely aren't used to designing 300-400 millisecond animations, it's easy to lose control of the details and stop seeing them as what they are - opportunities. It all amounts to a complicated juggling act and it's easy to start dropping balls, to further mix our metaphor.In this example from Ivan Bjelajac, I spot 5 missed ‘detail' opportunities.Let's check it out.Contrast that with these examples of ruthless attention to detail. One cannot imagine these micro-interactions being any cleaner in narrative and execution, no stone unturned, no opportunity missed. Wayne Gretzky would be proud. If he cared at all about user experiences, which I highly doubt.Key concept - Details are opportunitiesI am here to tell you that even with no animation experience it is possible to design and build beautiful, clean micro-interactions. Focusing on following key concepts -Avoiding the five mistakes is no guarantee you will end up with something awesome, but it's a step in the right direction.To view more examples of micro-interactions, complete with my annotations and critiques, you can view my super awesome ‘Micro-interactions' Pinterest board.Special thanksBig thank you to Sergey, Srikant, Romain, Sam, and Ivan. You guys rock. I appreciate your work and the opportunity to learn from you.Extra big thank you to Alex Chang for poignant feedback, Lindsey Gjording for reviewing early drafts, and Valentina Phearson for being a rockstar and helping me source and catalogue like a million UI Animation micro-interaction gifs. And of course to Kateryna Sitner, for being my muse and generously providing feedback every step of the way.If you want to receive my articles and UI Animation tutorial videos straight to your email, click here to get added to my list. Design action step - look for fat to trim. Are these animation details keeping the micro-interaction clean, or are they hosing the user experience, muddying the waters and adding to cognitive load?Design action step - Keep the narrative tight and clean.Design action step - make sure your micro-interactions occur as a single unified movement. If your micro-interaction contains several actions occurring at different places in time, stop doing that.Design action step - I hate to even say it, but make sure your design makes sense before you try to pimp it with animation.Design action step - Be ruthless in your attention to detail. Leave no stone unturned. Don't drop balls. Take the shot. 1. For the love of god, restrain yourself2. Don't sacrifice your narrative on the altar of catharsis3. If you can't do it in a single movement, don't do it at all4. The problem isn't the animation, the problem is the design5. You miss 100% of the shots you don't takeIn conclusion The most obvious thing you may notice is the ‘3d flip' on the photos. Completely unnecessary and possibly even illegal (just kidding, I wanted to make sure you were still paying attention). In the case of micro-interactions, anything that if removed would make a cleaner narrative is almost certainly a good idea.Secondly, you might notice that the feed view of the photo is cropping the image, which un-crops the photo in edit view. This is clearly unworkable.Thirdly, you will notice the top navigation icons take an insanely long time to transition on. They look great the first time but after that it's like watching paint dry. Micro interactions need to be swift, lasting at most 300-400 milliseconds, with clean, eased velocity curves.After you peel your eyes off that, you'll wander down to the bottom, where the two icons land at different times, implying a false narrative (unnecessary emphasis), and adding to cognitive load. The lines transformingThe icon rotating There is an opportunity to create a clean and elegant icon transformation in the menu/back button. Having the menu icon slide in from the top feels disjointed and inconsistent.The right arrow with yellow box - unnecessary rotation and scale effect. Having it persist feels strange. It should transition with the content.The paragraph content text fades on and off unnecessarily during the transition. It should persist.The title wipe from left to right - would be cleaner and more elegant by playing it off the content wipe rather than having it fade on and sliding.Hero image crop - when in the banner view, it would be nice to see the image reframe in a way that supports context, not just randomly landing in the least interesting way (nitpicking here). RestraintNarrativeSingle movementAnimation will not save youDetails are opportunities"
        },
        {
            "title": "7 Problems Growing Design Teams Face",
            "date": "Tue Jun 21 2016 09:01:04 GMT-0400 (EDT)",
            "text": " Design is hard-that's what I hear from design leaders at every company I visit. As the VP of Design Education at InVision, I study how design works and breaks in businesses. After nearly a decade of leading product teams I know first hand that design is indeed hard, even at a company that values and invests in it.What makes it so difficult? There are organizational challenges, people challenges, and process challenges. Each seems monolithic in its own right, but when you stack them up they feel daunting.I once thought that the challenges I faced as a design leader were unique to my situation, but I know now after interviewing many design leaders they're common to almost every team. I find it comforting to know I'm not the only one who has struggled, and not because misery loves company (though it does). If these problems are common, then chances are we can find solutions.Design leaders far and wide are struggling to find solutions to these 7 problems:Agile has become the law of the land and it has redrawn team lines on many an org chart. Designers are finding themselves embedded in cross-functional teams with engineers and product owners. It's a great opportunity to learn from others with different perspectives, but it often leaves designers craving the feedback and camaraderie of other designers that's needed to improve their craft. In isolation, many designers feel their growth has stagnated as has their career. Designers disenchanted with their work can find themselves searching for greener pastures where their creativity can be more freely expressed.Outnumbered as they often are in cross-functional teams, designers acquiesce to engineers who encourage smaller design iterations and a simpler approach. Do we really need that animated transition? Does it add much value? It's difficult to champion the necessity of small details when you're the lone designer. Many simply give in and get back to work. Exceptional design is almost impossible to achieve when corners are continuously cut.I see a few strategies emerging as companies recognize the challenges of cross-functional product teams. Some companies like Spotify and Envato are experimenting with design guilds which bring designers from many teams together for regular design reviews and discussion of design strategy and style. This approach helps designers get the feedback they need to grow, but still doesn't address the awkward power dynamic of being the only designer in a product team.Slack pairs designers on projects so they get the feedback they need to work through ideas quickly and thoroughly.Other companies are simply moving designers back to a dedicated design team where creative exploration and design vision come more easily. The pitfall here is that design and engineering aren't afforded as much opportunity to collaborate and learn from each other. Perhaps there's a middle ground? I've seen success from temporary product teams in which designers and engineers tackle a big project together then return home to their respective teams. It lets these differing cultures build rapport without totally assimilating as they're forced to do in a cross-functional team.The jury is still out on how we'll solve the problems of team structure. We need to experiment more and compare notes.As teams divide to specialize on domains or areas of a product, the shared vision for the product can get lost. Designers feel the loss of a product vision most acutely as they need a North Star to guide their design systems.Design leadership is needed to define vision that extends past the incremental improvements of sprints. Some design teams create large boards that show design style or tell the story of how their product will fit into the lives of their customers. Others create short videos to illustrate to all how the product will fit into the customer's lifestyle.Airbnb worked with Pixar illustrators to create storyboards that showed how their products would fit into the lives of their customers. Their storyboard gave everyone a vision of the product experience they wanted but still gives each team the freedom to solve the problems as they see fit.Product roadmaps also guide teams, but they only express what to do and when. They don't tell a company why. Vision-whether presented through a video, storyboard, or some other means-gives purpose and clarity to our work. Without it teams often lose sight of their mission.As a company grows and acquires other companies, product UIs quickly become a hodgepodge of styles creating a clunky user experience. Inconsistent UIs bloat code, are difficult to maintain, and make new product ideation inefficient.Large enterprises like IBM, Atlassian, Salesforce and Westpac are starting to invest in design systems that not only standardize UI with a library of patterns for designers and developers to follow, they're also adding user personas and broad design principles to their systems.Design systems work best when they're managed by a dedicated team. There is a new type of team emerging around design systems: Design System Ops. Spotify's design guilds regularly communicate with their design system team to keep their UIs and code efficient across platforms.Designers struggle to speak the language of business as a company scales. They have to interact with new executives and engineers and communicate the ideas behind their work and how it will help the business succeed. They can't get lost in the weeds talking about typefaces, they need to talk about empowering customers.Designers need to learn more about the business they serve and business in general. They need to get to know the people in charge and ask questions.Despite the impact design has on the success of a business, it's rare to see a designer in an executive position. There are many reasons for this, not least of which is that design leaders need to become adept at speaking the language of executives. The C-suite is dominated by talk of statistics and data, territory that can be uncomfortable for designers as our work is not always quantifiable. That doesn't mean it's not creating value, though.Designers need to be able to articulate the value of a great user experience and frame design in the context of business goals.When a business grows, more people need to come together to ship great things. Designers who succeed in large organizations create social capital by developing a rapport with colleagues across the organization. Product design in large organizations is not a solo activity. Take off your headphones. Get up and talk to people. Designers who don't make an effort to work across teams will inevitably be deselected from their organization. Count on it.Get in the habit of grabbing lunch with a developers. No need for an agenda - just get to know each other. Spend time with researchers who have their finger on the pulse of your customers, sales people who hear frequent requests, and customer service agents who know where users struggle the most. All have valuable context to offer. Each one influences the success of the product.As designers become connected to colleagues on other teams, not only will their designs be more informed, they'll also create inroads into their work, putting design on everyone's radar.In the early days of a startup everything that's shipped feels big and innovative. As the product matures and the customer base grows the company will be much more conservative in what it ships, valuing optimization and stability over innovation. Everything gets broken into small sprints that can feel incremental, not innovative. Many designers find this frustrating as the problems may seem less interesting.Designers need a safe place to explore new ideas. Teams can schedule 20% time to explore new concepts for existing products or for brand new ideas. Some companies establish a dedicated R&D team to fuel innovation, or plan creative retreats where a team can experiment.Companies that lose touch with experimentation will find barbarians at the door soon enough, ready to disrupt their business.Early on there are a select few people who create product strategy and the roadmap. But as a company scales there are more stakeholders involved in the process. Things slow down as more teams need to touch the product before shipping. Designers who were involved early on can become frustrated that they can't move as quickly as they'd like, and may find themselves looking for another company still in the early stages of development so they can tackle problems quickly once again.It's important to remember that speed isn't everything, though. Large companies may move slower, but often have far greater influence than scrappy startups. Shipping slower but reaching more people can be satisfying too.Does any of this resonate with you? If so, know that you're not alone. Every company I've talked to regardless of their market sector is wresting with the same issues. But seeing the patterns makes it easier for us to find solutions.How are you solving these problems in your organization? Are there other problems you're confronting? Let's spark an honest discussion in the comments of this article. There's so much we can learn from each other. 1. Isolation2. Lost Vision3. Inconsistent/Broken UX4. Speaking a New Language5. Building Social Capital6. Incremental Not Innovative7. Moving Slower Sound Familiar?"
        },
        {
            "title": "7 Rules Driving the Psychology Behind Great Product Design",
            "date": "Thu Jul 28 2016 10:33:36 GMT-0400 (EDT)",
            "text": " By Alex ObenauerImagine you are running. Maybe it's your morning jog, or maybe you're preparing for a marathon.You can feel the ground beneath your shoes with every step. You can feel the air as you breathe. You might be in pain, but you don't notice it. You are no longer motivated by arriving at some destination or goal - the end of the trail, or completing 5 miles - rather, the activity itself has become its own motivation. The worries and frustrations of every day life seem to slip away. You don't notice how much time passes. You're incredibly happy or peaceful during this experience, but you don't even notice that. It's just you, the path, and finding your limits. You're \"in the zone\".We've all experienced being \"in the zone,\" and maybe it wasn't while you were running, maybe it was a work on something you really enjoy. You were 10x happier, and 10x more productive than normal. You didn't even notice that hours passed. While researching happiness and productivity, Dr. Mihaly Csikszentmihalyi stumbled on this phenomon of being \"in the zone\" which he calls being in a state of flow.He figured out that to enter a state of flow, you had to be doing something that you're good at, but that was a little bit of a stretch; that offered a little challenge. By having the challenge match your skill - pushing you a little further each time - you could enter a state of flow, or optimal experience. It is here that people are most happy, and most productive.In this state, you lose track of time, and you lose track of external goals. You are doing the task for the sheer pleasure of doing it. It is an autotelic experience. It is intrinsically motivating. The task itself is the motivation; not the result of it. In this state, you can do 10x more. You are more productive and happy. This is optimal experience.You get \"in the zone\".That's what they're referring to in The Social Network when Justin Timberlake (playing Sean Parker) almost interrupts a developer and is stopped, because they're \"wired in\".You may be wondering: what does this have to do with product design?It has everything to do with product design. And not for you the designer, but for your users. First, why should we care? Why should we go so deep into figuring out how to design software that promotes optimal experience for our users? They're just \"apps\", aren't they?Software is the means through which we achieve often monumental accomplishments. Whether we're writing a book, building a company, or anything else, our greatness is achieved with various software applications often as the medium.It may just be text on a screen, but often what it means to you is much more significant. It's your conversations with those you love, those you work with, those you admire, and those you mentor. Sometimes, it's three little dots that tell you your loved one is safe. It's often the medium through which you learn to do what you do better. It's often the medium through which you create your life's work, and through which you publicize it to the world. It contains the content of our lives.Through software, we create and interact with the content of our lives. The better the software, the more enriched experience we can have with this content. This is actually what attracted me to software design in the first place. As software designers and developers, we have to remember that we're designing things for humans to use.Just like a car is built around a human - with a comfortable seat, and controls that were designed around the human body, our software should be equally ergonomic.Like a pen with a soft grip, or an ergonomic desk chair with adjustable lumbar support, our software should be built around the human.Further, the tools we use should not interrupt our work. If pens were like most software, they'd run out of ink or overflow on a daily basis. Your ergonomic chair would randomly change your lumbar support setting. You'd be convinced that the makers of the awful pen and the awful chair went to more effort just to make these things frustrating to use. One day, rotating the lumbar knob clockwise would do one thing, then the next day, the knob would just be gone, and the manufacturer would have a blog post boasting an \"innovative new interface\" that \"assumes the best setting for you\". Better, you'd have to dismiss the announcement before you could even sit down.Our goal has been to make software like the pen: unobtrusive, understandable, predictable. It capitalizes on what you already know about using writing instruments, but can improve the experience in different ways for different people.One of the most important ways we have to design around the human is by designing around the human's mind. This takes into account a healthy dose of psychology, which is what makes the principles and conditions of the psychology of flow so important for product design. Our software should enable us to enter a state of flow when interacting with the content of our lives.Software plays a key role in the psychology of flow, because it represents the interface through which we interact with so much of today's work. So we have to understand the conditions needed to enter a state of flow - or optimal experience - in order to design products that allow our users to have an optimal experience. Our software interface should promote the conditions needed to enter a state of flow for our users so that they can most freely interact with the contents of their lives, through our software, without being inhibited by its interface. Therefore, we use the conditions needed to enter a state of flow to direct our product design.Remember that flow requires a challenge, so it's important to note that it shouldn't be challenging to use software - we all know what that's like, and it definitely doesn't lead to flow. What we're working on should be challenging, not the tools themselves.Software should allow us to engage in challenging work using our skills without interrupting us. It's challenging to write a book, but it shouldn't be challenging to use text editing software. The content of our lives is what provides the challenge. The software tools we use should get out of our way to allow us to take that challenge head-on. To do this, it has to maximize on our existing skills, just like the pen, so that it feels invisible; we forget it's there. The user brings the challenge, the software should intuitively allow us to engage the challenge.Note: this is different for games, where the game itself does have to provide the challenge. You thought we'd never get here, did you? Oh, you just scrolled right down to here? Got it. Carry on, then. (But there is some pretty good stuff above, too - check it out after you read a few of the rules below and realize you'd like a little more background.)By the way - if you're enjoying this article, be sure to hop on my weekly newsletter! Reducing the semantic gap between the user and the interface decreases the cognitive burden placed on the user.To help a user get into a state of flow - or optimal experience, we must decrease the cognitive burden placed on a user when using our software.We did this with the original concept behind Mail Pilot: we wanted to bring the interface closer to the user's own semantics, reducing the cognitive or semantic gap, and further away from how IMAP actually works.Think of it like using a CRM instead of an excel spreadsheet. That CRM has a database on the back-end which would be most easily represented as a simple spreadsheet, but there's a lot of glue code in between its database and its interface to make it more intuitive for your use case.Imagine a spectrum with the person (and how they think) on the far left, and the database or protocol (how the computer thinks) on the far right. Most email clients sit far on the right, exposing the basic functionality from the underlying protocol.With Mail Pilot, we wanted to move the interface much further to the left; more closely matching how people think about and want to use their email. This does mean there needs to be a lot of glue code in between the interface and how its underlying protocol actually works, but it also means that we dramatically reduce the semantic gap between the user's psychology and how the interface looks and works.So we strived to allow users to see and interact with their data the way they think about it. That's why unread / read became incomplete / complete, and why we brought reminders to the inbox back in 2012.By decreasing the cognitive burden placed on the user, we end up with a happier user, spending less time, using more powerful tools, more easily.Consider ThisCan your product more closely match how your user thinks about and wants to interact with the information in it? Hint: the answer is yes. The trick is to first empathetically understand your user's psychology. How do they think about the information contained in your product? How do they naturally want to interact with it? If you get a lot of one-off feature requests for strange things that you don't think fit in the intended workflow, ask users why they are requesting those features. You'll probably find a gap between how they want to interact with their information and how your product works. Infer a lot, otherwise tasks become mundaneAn easy way to lose flow is to be bored or apathetic. When a user has to do a lot of work to get a small result, the work at hand becomes mundane and redundant. They no longer face the challenge of their work, they're stuck doing data entry.Figure out as much as possible from as few interactions as possible.For example, in Mail Pilot, we had a feature where you could set a reminder for an email to come back in the future. On an ordinary interface, this could take 5 taps: open the message, hit a button to set a reminder, select the month, select the day, hit okay. With our mobile app, we needed to require fewer interactions, otherwise people wouldn't use it while trying to quickly triage their inbox.We managed to get it down to one interaction. You would simply slide a message further to the right to set a reminder in an increasing number of days (releasing on the number you wanted). See here:It became one of our user's most loved and most used features.Before, users would almost never set a reminder on the mobile - it was too cumbersome - so they would wait until they were on the desktop. What a pain! Once we shipped this \"scrubbing\" interface, setting a reminder was the second-most used organization on the mobile (after completing a message).This is also the foundation of what makes Throttle so successful. The basic premise sounds cumbersome: every time you sign up for something new online, Throttle generates a unique, random email address for you to use. This way you can control who sends you email in an airtight way, find out who tries to sell or steal your address, and stop giving out your address online. But it sounds like an intensely cumbersome system to use, even if you do get the stuff out of your inbox that you want to receive but that doesn't belong there.Here's the kicker though - the genius of it is how you interact with the system. The Throttle browser extension puts a button in all email form fields. To generate an address, all you do is click the button, which is already right in place where you need it - it's even faster than what you used to do (type your real email address). To read messages you've received, Throttle sends a single daily digest email to your inbox at the time you deem most productive. It effectively puts this intense system of hundreds of email addresses all managed for you, right at your fingertips in just two touch points, where you're already going to be anyway (the form online & your inbox). That's what makes it work so well. Users don't have to think about it, remember to check it it, or manage it.Consider ThisHow could your app do more for the user with less input? How could the key interactions with your app be closer to where the user already is when they need it? To enter a state of flow, you need to know what to do & how to do itThis is intuitive if you consider that procrastination, when not caused by a fear of failure, is usually caused by not knowing how to get started.So, we need a predictable, self-documenting interface. How? Here are two examples from our email client:First, the bar below each message featured all the buttons you could use to organize your message. But each button also had its keyboard shortcut on it. This was a minor UI tweak - it required no new functionality - but it was a fan-favorite feature when we launched it in beta. It made the efficiency of keyboard shortcuts - previously reserved only for the most die-hard power users - accessible to everyone.People that had never been keyboard shortcut people before were whizzing through their inboxes.If you've ever been stuck on a reply-all chain, you'll appreciate this. Nowhere in Mail Pilot did the words \"Reply All\" appear. Instead the buttons said \"Reply to [Name]\" and \"Reply to Everyone\" so you knew exactly what you were doing.We cannot stay in a state of flow if we are dealing with interruptions. Interruptions can be things like unnecessary notifications, sluggishness, or bugs, but they can also happen when users are simply unable to do the one thing they're trying to do. If they can't find the one button, all they want to do is bold some text and get on with their work, but they can't figure out how - that is a massive interruption.Consider ThisWhere does your product's interface need to be better self-documented and more predictable? How could you enable most users to leverage features you think of as being only for power users? Where are mistakes made in your app often, and how could the interface more clearly communicate to avoid these mistakes or confusions? In order to enter and stay in a state of flow, the user has to have an attainable goal, and always know their progress towards that goal.If you don't feel like there's a chance you can reach a goal, you won't engage in it.We encounter this regularly in the inbox:There's not a chance you're reaching this goal - reading 13,000 unread emails. So you simply won't engage in it.Instead, in Mail Pilot, we never showed a \"total unread\" number. Instead, we showed how many emails you received that day, and we grouped the inbox by day. This way, you had a clear and reachable goal: read the 7 messages you've received today. And maybe once you're done with that, you might do the 10 you received yesterday.Much more achievable.Consider ThisAre you giving your users an unclear or unattainable goal? How could you break it up? Do your users always know their progress toward their goals? How could their progress be better communicated? Users need freedom from distractions and interruptionsA necessary ingredient for staying in a state of flow is freedom from distractions. Interruptions break us out of flow. So in our interfaces, we strive to reduce any clutter around the content of our users' lives so that our users can focus on the task at hand.Here's what we did in Mail Pilot. Notice on the left a regular inbox. A bunch of emails from companies, newsletters, notifications, and so on. But there is one email from a person - Aashish - continuing a conversation about Google OAuth. Mail Pilot figures out which emails were sent by computers, versus those sent by an actual human opening up a compose window and typing a message. It then collapses & deemphasizes the former (as seen on the right).This brought a totally new level of focus to the inbox. It was a little-known feature that was off by default, but it was a game-changer for those that chose to use it.This made our next product all the more compelling. Throttle keeps these kinds of messages from hitting your inbox at all. So instead of having to look through the highlighted emails, scrolling past those that were de-emphasized, you never received the latter at all. Not in your inbox, anyway - you could read them in your reading list online, or set up a single daily digest email with all of them in it, keeping things focused. Throttle brought this great feature to everyone - regardless of what email client they use.It then gives you a reading list that generates full previews of all messages received - making those mass mailing emails rich with images far easier to scan when you're looking to see if anything is of interest:This effectively turned yesterday's clutter into a far better experience, and more importantly, outside the inbox and away from the important conversations you have in it.Consider ThisHow can you reduce the clutter in your application? What disrupts your user's workflow? What does your user most care about? Can they easily scan for it? Waiting is the death of softwareEver clicked something and wondered if the app your were using notice or cared? Immediate feedback is necessary for entering and maintaining a state of flow.Here's a slick way we gave clear and immediate feedback in our app:When you set a reminder, instead of a button that says \"Okay\" or \"Set Reminder\" to confirm, the text of the button changes depending on what you have selected to say \"Remind Tomorrow\" or \"Remind in 1 week\".You know exactly what you're doing, you know that the app knows what you want, and you know what's going to happen when you click the button.Same with lists - if you typed a list that exists, the button says \"Move to List\". But if you type something that isn't a list yet, it says \"Create New List & Move\".Consider ThisDoes your app fail to give immediate feedback anywhere? Could it give feedback before any actions to improve clarity and confidence? You have to know where to go to flow.Knowing where you're going and how to get there is necessary to enter a state of flow or optimal experience.This is why you enter autopilot when driving home, lost in your own thoughts (flow - because you know where to go), but when you're driving somewhere new you have to turn the radio down as you look for your destination (distinctly not flow).The navigation structure - especially on mobile - is the foundation of any app. If this isn't right, nothing will be. It's the very first thing we design when we design a new app.Let me give you a deep dive to show you what I mean, with our email app.It's important to know that before designing anything, we had to learn a ton about how to bring our web app to the mobile. Just because we figured out how email should work better didn't mean we knew how people could best interact with that concept on the mobile.We learned that people triage on the mobile: they live almost entirely in the inbox, working to clear out the junk as it comes in. They do their heavy lifting on the desktop (organizing, writing long replies, etc.). They would only organize on the mobile with interactions that required 2 or fewer gestures.On the off occasion they left the inbox to reference something, they always wanted to quickly get back to the inbox.All of this is completely backwards to how the traditional mobile email client navigation system was designed - it was a quick remapping of how email worked on the desktop, brought to the mobile. A designer solely after aesthetic appeal would simply take this basic navigation system without giving it any research or thought, and make it look nicer.As we embarked on bringing our popular email client to the mobile, we looked at this traditional navigation structure found in the stock iOS email app:So you've got a list of accounts, leading to an inbox. But when you launch the app, you want to start in the inbox. Which means when you launch the app you already have a back button even though you haven't gone forward yet. Things are starting to break down a little.Now let's say you're in a message, maybe you're going to reply, but you need to check something in a message in another folder. You hit 3 back buttons to get to your list of accounts, then 4 to drill down to a message inside a folder. Now all you want is to go back to the inbox, that's another 5 taps.12 total interactions on your round-trip. \"Can't this be smarter?\" we thought. We know that the user lives in the inbox on mobile, and just wants to triage.I sketched out a ton of options. How could we design an intuitive navigation system that quickly gets you back into the inbox from anywhere? And how could we design it around the fact that you start in the inbox, but need to go a hierarchy level up or down at different times?After much deliberation, it was clear we needed to dust off the old z-axis. We needed to break this strictly linear notion from the traditional navigation structure so that (maybe counter-intuitively) we could make it simpler, faster to navigate, and more honest.I landed on the idea of having a \"backscreen\" behind the inbox, and having opened folders slide up as windows above the inbox. Dismissing them just meant sliding them back off of the screen, taking you back to the inbox.Here you can see it in action:Now getting back to the inbox is a breeze. It does take a little onboarding, but there are little cues in the UI to get you up to speed even if you skip the onboarding. The use case people had on the mobile was now much easier - you could get back to the inbox in one gesture from anywhere. Plus, you didn't launch the app and see a back button.This also extends to individual components of apps too. Here's a great example:In Throttle, we discovered that people were opening their reading lists, opening the first message, and hitting \"next\" until they had viewed all of the messages that were new (stopping when they recognized one they had already read before). We assumed they were scrolling through their reading lists, but they really just wanted to slide through each new message, and be done.So for the mobile we designed a \"What's New?\" tab:It played right into the use case our users had in their reading lists most often. It allowed them to swipe through each new message, and it only showed new messages. You reach the bottom of the stack when you've seen all of the new messages, so you wouldn't have to remember the last message you saw on your last visit to the reading list. This made the interaction they wanted to have much more natural.A way to think about a great navigation system is to see if it answers these three questions at all screens:Consider ThisDid you intentionally design your navigation system? Do you understand how your user's use case may be different on mobile versus desktop? Could your navigation system be less cumbersome - even if less conventional - given what you know about your users' goals in your app? Don't forget to hit the 💚 button below if you enjoyed this article, so others can see it too! Sweating all of these details is one of the key pieces for your app's success. Want to learn how to design products people will love? Hop on my newsletter - I send articles with actionable insights on product ideation and design, every Thursday morning.Just subscribe here at alexobenauer.com! 1. Match the User's Semantics 2. Require as Few Interactions as Possible 3. Design a Predictable, Self-documenting Interface 4. Provide Clear, Reachable Goals 5. Reduce Clutter 6. Give Immediate Feedback 7. Design an Intentional and Empathetic Navigation Structure Actionable Insights Learn to design products people will love with my weekly newsletter You can also sign up for this publication's weekly newsletter The Psychology of Flow The Importance of Getting Software Design Right Ergonomics of Software Using Flow to Direct UI Design The 7 Rules Where am I?Where can I go from here?What will I find when I get there? How do you inhibit or incubate optimal experience for the people that use your product?Do you help or burden the people who use your product to or from entering a flow state?"
        },
        {
            "title": "8 habits of awesome UX designers",
            "date": "Wed Feb 03 2016 09:53:50 GMT-0500 (EST)",
            "text": " One of the fables that floats around UX teams is that of the US space program and its quest for a pen that could be used in anti-gravity.\nThey reportedly spent million dollars developing a high-tech writing utensil with ink that remained solid until the flow of writing and a pressurized chamber that made it useful upside-down. The Russian cosmonauts, however, simply brought pencils.\nThough this story isn't wholly true, it shines light on the necessity of understanding the larger picture. The space pen did make it into orbit and was a privately-funded accomplishment in engineering.\nIn their own applications, both writing utensils were successful, but integrating UX design at the onset of project development mitigates the risk of over-complicating the solution.\nThis is just one of the lessons we can learn from UX Designers. Here are eight habits of UX designers:\nThey listen to users\nWithout users, it would only be experience - which is to say the essence of the UX practice is its user base. This is an obvious point to be made, but what do we mean when we say users inform design? We are really speaking about multiple factors - research external to the designer, shaping results, and discovering clear and definitive goals.The first part of the equation, and often ongoing process, is to go out and collect different types of data. There are multiple ways to gather information and research may include a number of individual perspectives as well as mass-market figures.\n\"We all want to create products that make people's lives easier and more enjoyable, products that delight people around us and ourselves. Creating great experiences starts with understanding your users, their behavior, motivations and goals.\" Anna Iurchenko writes in Remote User Research & Usability Methods on UXMag.\nThe key follow-up is to listen to users. Storyboards and personas are great ways to put captured results into perspective and unearth deeper motivations. Building a complete picture of multiple types of users brings emotional and behavioral factors to the table.\nWhen interviewing potential users, underlying feelings towards how they interact with a product or products are naturally exposed.The Android Team at Google created a very simple system to measure gut reactions of users. Examining their workflow, Mark Wilson wrote, \"It starts with a mindset, that every design decision they make affects user emotion in a positive or negative way.\"Testing features with users along the path to production also validates their needs and drives. When in development, observing your target audience first-hand is an indispensable resource and can unearth inclinations that might be the make or break of your app.\nThey recognize a trend versus pattern\nThe last few years have seen an emergence of open-source libraries categorizing processes, visuals, and templates. Inspiration for ideology and design can be found in abundance on the web.\nHowever, it can be difficult to discern a trend sneaking into mainstream design when it becomes ubiquitous. Overtime, popular trends have potential to morph into established patterns, but that isn't always the case.\nBrendon Cornwell gives us this lesson in Making and Breaking UX Best Practices on UXBooth, \"Pay attention to what's driving the trend - is it just the next thing, or are there user experience lessons being distilled through the trend? Understanding design trends allows for faster assessment during the creative process, and can help steer products away from becoming the next ‘one of many'.\"\nThey design for tasks, not screens\nIt's easy to conceptualize an app or piece of software in terms of volume of screens, but looking deeper is integral to the success of any product.\nNick Kellingley writes in One Size Fits All? on Interaction-Design.org, \"Task oriented design asks the question; what will the user do with this application or website on the specific device on which it will be used?\"\nAllowing tasks to drive design is especially crucial when, for example, UX Designers examine the transition from desktop to mobile. Mobile necessitates touch interaction and content on a reduced scale. It is impossible to simply \"shrink\" desktop to mobile and expect equal results and productivity.\nThey learn the rules before they break them\nLike any expert in their field, a great UX Designer fully understands not only the guiding principles of UX, but the medium which they are designing for.\nUX ideology is more prevalent now than ever with resources like Boxes and Arrows, Nielsen Norman and Smashing Magazine to cite a few.\nTo fully comprehend device functionality across various platforms, the best practice is to go straight to the source.\nDesigning an app for iPhone? The Apple Human Interface Guidelines are definitely the best place to begin, but learning by experiencing and personally testing as many apps as possible is eye-opening.\nRelying on a strong foundation of UX guidelines affords designers the ability to deviate when it is sometimes called for. Knowing the rules also means being able to comprehend the ramifications of breaking them. Though it is not wise to abandon all convention when innovating, new processes and ways of doing things are often the natural by-product of creation.\nThey consider all routes\nIt is virtually impossible to imagine every potential idea when building a product, but creating a bank of ideas early-on might prevent critical revisions.\nOf course, revolutionary ideas may spark anywhere in the design process, so the ability to iterate quickly is key.\nOf its Pattern Library system, the UX team at MailChimp has written, \"We believe iteration is a vital part of the design process. Being able to change fast requires both an efficient workflow and a well defined collection of reusable parts that can assemble new interfaces quickly, without accruing new technical or design debt.\"\nThey understand real life context\nWhat about stepping outside the screen? What is the desired total experience under which a user might interact with a product? Successful UX Designers think about the larger environment.\nCredit: Sweet Juniper\nUsers of any app or piece of software are not always engaged 100 percent. This is especially true of mobile. UX Designers do not expect a user to navigate the app in a windowless, sound-proof room! When designing, erring on the side of simplicity accommodates for distractions.\nKelsey Ruger, gives us these guidelines for designing in context: Make it natural and intuitive\nReduce cognitive load\nExpect interruption and partial attention\nDesign for task efficiency and completion, not screens They plan for failure\nThe old adage \"If it's too good to be true, then it probably is\" unequivocally applies to the user-centered design process.\nIn his timeless article on Iterative User Interface Design, Jacob Nielsen begins, \"It has long been recognized that user interfaces should be designed iteratively in almost all cases because it is virtually impossible to design a user interface that has no usability problems from the start.\"\nGreat UX Designers plan for systems to not work perfectly. Ironing-out wrinkles is informative and serves to strengthen projects, not hinder them.\nThey stay up to date\nTechnology moves faster than any other industry. UX Designers stay sharp by constantly reading, researching and exploring. In this way, UX Designers become integral users in their own field.\nEric Reis, author of The Lean Startup, was quoted in an interview saying, \"Design is the new basis of competition.\"\nWith more and more Fortune 500 companies prioritizing design, is it any wonder that most in the top rankings either partner with or have UX Designers in house?\nRead next: Beyond design trends: Timeless user interface techniques This post was brought to you by Adobe Experience Design CC, the all-in-one UX design tool. CreativeInsights"
        },
        {
            "title": "All Talk and No Buttons: The Conversational UI",
            "date": "Tue Feb 23 2016 10:00:00 GMT-0500 (EST)",
            "text": " We're witnessing an explosion of applications that no longer have a graphical user interface (GUI). They've actually been around for a while, but they've only recently started spreading into the mainstream. They are called bots, virtual assistants, invisible apps. They can run on Slack, WeChat, Facebook Messenger, plain SMS, or Amazon Echo. They can be entirely driven by artificial intelligence, or there can be a human behind the curtain. My own first encounter with a conversational interface was back in 1983. I was just a kid, and I went with some friends to see WarGames. Young hacker David Lightman (played by Matthew Broderick) dials every phone number in Sunnyvale, California, until he accidentally bumps into a military supercomputer designed to simulate World War III. We immediately realize that this computer is operating at a different level: it engages in conversation with Lightman, asks him how he feels, and offers to play some games. No specific commands to type-you just talk to this computer, and it gets you, and responds to you.Fast-forward 30 years. My teammates and I at Meekan set out to build a new tool for scheduling meetings. We thought, \"It's 2014! Why aren't calendars working for us?\" We wanted simply to be able to tell our calendar, \"I need to meet Jan for coffee sometime next week,\" and let the calendar worry about finding and booking the best possible time and place. First we sketched out a web page; then we built an Android app, then an iOS app, and finally an Outlook add-in. Each one was different from the next; each attacked the problem from a different angle. And, well, none of them was really very good.After building user interfaces for more than 15 years, for the first time I felt that the interface was seriously limiting what I was trying to do. Almost no one understood what we were attempting, and when they did, it seemed to be more difficult to do it our way than the old-school way. We could go on and crank out more and more versions, but it was time for a different approach. The range of possible actions, the innumerable ways users can describe what they need-it was just too big to depict with a set of buttons and controls. The interface was limiting us. We needed something with no interface. You could tell it about your meeting with Jan, and it would make it happen. And then it dawned on us: we're going to build a robot!I'm going to tell you all about it, but before I do, know this. If you're a designer or developer, you'll need to adjust your thinking a bit. Some of the most common GUI patterns and flows will not work anymore; others will appear slightly different. According to Oxford University, robots will replace almost half of the jobs in the US over the next 20 years, so someone is going to have to build these machines (I'm looking at you) and make sure we can communicate properly with them. I hope that sharing some of the hurdles we already jumped over will help create a smoother transition for other designers. After all, a lot about design is telling a good story, and building a robot is an even purer version of that. Think about it. You now have almost no control over the appearance of your application. You can't pick a layout or style, can't change the typography. You're usually hitching a ride on someone else's platform, so you have to respect their rules. And it gets worse! What if your platform is voice-controlled? It doesn't even have a visual side; your entire interface has to be perceived with the ears, not the eyes. On top of that, you could be competing for the same space with other conversations happening around you on the same channel. It's not an easy situation, and you're going to have to talk your way out of it: all of your features need to be reachable solely through words-so picking the right thing to say, and the tone of your dialogue with the user, is crucial. It's now your only way to convey what your application does, and how it does it. Web standards mandate a separation of content and style. But here, the whole style side gets thrown out the window. Your content is your style now. Stripped of your Photoshop skills, you'll need to reach down to the essence of the story you're telling. And developers? Rejoice! Your work is going to be pure logic. If you're the type of developer who hates fiddling with CSS, this might be the happiest day of your life.The first tool in your new toolbox is a text editor for writing the robot's script and behavior. When things get more complicated, you can use tools like Twine to figure out the twists and turns. Tools and libraries for coding and scaling bots are cropping up by the dozens as we speak-things like Wit.ai for handling language understanding, Beep Boop for hosting, and Botkit for integrating with the popular Slack platform. (As I write this, there is still no all-encompassing tool to handle the entire process from beginning to end. Sounds like the voice of opportunity to me.)But, let me say it again. The entire field of visual interface design-everything we know about placing controls, handling mouse and touch interaction, even picking colors-will be affected by the switch to conversational form, or will go away altogether. Store that in your brain's temp folder for a little while, then take a deep breath. Let's move on.Imagine a new user just installed your iOS app and has launched it for the first time. The home screen appears. It's probably rather empty, but it already has some familiar controls on it: an options menu, a settings button, a big button for starting something new. It's like a fruit stand. Everything is laid out in front of you: we got melons, we got some nice apples, take your pick. Compared to that, your first encounter with a robot is more like a confession booth. You depend on the voice from the other side of the door to confirm that you're not alone, and guide you toward what to do next.Your first contact with the user should be to introduce yourself. Remember, you're in a chat. You only get one or two lines, so keep it short and to the point. We'll talk more about this in a second, but remember that having no visible interface means one of two things to users:When we did our first tests, our users did just that. They would either just stare, or type something like \"Take me to the moon, Meekan.\" We were upset. \"Why aren't you asking him to schedule stuff for you, user?\"\"Really? He can do that?\"It's not obvious. So use introductions to define some expectations about the new robot's role on the team. Don't be afraid to glorify his mission, either. This robot handles your calendar! That way, users will be less disappointed when they find out he doesn't make sandwiches. Immediately follow this intro with a call to action. Avoid the deer-in-headlights part by suggesting something the user can try right now.Try to find something with a short path to victory. Your users just type this one thing, and they immediately get a magical treasure in return. After this, they will never want to return to their old life, where they had to do things without a robot, and they'll surely want to use the robot again and again! And tell all their friends about it! (And…there you go, you just covered retention and virality in one go. It's probably not going to be that easy, but I hope you get my point about first impressions.)When designing GUIs, we often talk about discoverability. If you want the user to know your app is capable of doing something, you just slap it on the screen somewhere. So if I'm new to Twitter, and I see a tweet for the first time, my options are set in front of me like so:Easy. I'll just hover my mouse over these little icons. Some of them (like stars or hearts) are pretty obvious, others might require some more investigation, but I know they're there. I look around the screen, I see my Notifications link, and it has a little red number there. I guess I received some notifications while I was away!But when talking to a robot, you're just staring into a void. It's the robot's job to seize every opportunity to suggest the next step and highlight less-familiar features. If the robot is initiating conversation, make sure he gives relevant, useful suggestions. Otherwise, you're just spamming. And of course, always make it easy for users to opt out.It's easy to assume our robot is operating inside a pure messaging or voice platform, but increasingly this is not the case: Amazon Echo is controlled by voice, but has a companion app. WeChat and Kik have built-in browsers. HipChat allows custom cards and a sidebar iframe. Facebook and Telegram have selection menus. Slackbot inserts deep links into messages (and I suspect this technology will soon be more widely available).With all the advantages of a conversational interface, some tasks (like multiple selections, document browsing, and map search) are better performed with a pointing device and buttons to click. There's no need to insist on a purely conversational interface if your platform gives you a more diverse toolbox. When the flow you present to your user gets narrowed down to a specific action, a simple button can work better than typing a whole line of text. These capabilities are changing rapidly, so be prepared to adapt quickly.As users become more familiar with chat robots, they will form expectations about how these things should work and behave. (By the way, you may have noticed that I'm referring to my robot as a \"he\". We deliberately assigned a gender to our robot to make it seem more human, easier to relate to. But making our assistant robot male also allowed our team to subvert the common stereotype of giving female names to robots in support roles.) The definitive book about conversational design has yet to be written. We'll see best practices for designing conversations form and break and form again. This is our chance as designers to influence what our relationship to these machines will look like. We shape our tools and thereafter they shape us.In the next part of this article, we'll dive deeper into basic GUI patterns and discuss the best way to replicate them in conversational form."
        },
        {
            "title": "Chatbots: Your Ultimate Prototyping Tool",
            "date": "Wed Sep 21 2016 18:15:08 GMT-0400 (EDT)",
            "text": " How chatbots can teach us to learn what people need when designing products and servicesBy David Boardman and Sera Koo Conversational UI is getting a lot of buzz out in the world, and for good reason. We are in an exciting moment as we observe existing technology, design zeitgeist, and user needs aligning around leaner, more immediate, and human ways to engage with digital services.SMS is going through a renaissance, and designers are looking at this medium and interaction model to create new services and experiences. The immediacy and accessibility of SMS make it an ideal channel for building services in a world where systems continue to converge and apps are no longer the medium for digital experiences. As technology becomes more complex, users will need even more simplicity to engage with digital experiences.Beyond the buzz, what conversational UI shows us is the idea that everything in design should be considered a conversation. All elements in an experience are exchanges in a conversation amongst people, a brand, a business, a service, and, increasingly, a machine-powered intelligence. In this sense, conversation is the primary design material for designers - and its general purpose is to impact or inspire people's behaviors and emotions.Innovation is not rocket science. On the contrary, innovation begins simply by talking to real people, in real contexts. By putting ourselves in their shoes, we begin to truly understand their needs, motivations, and desires.Chatbots are exciting, but we're also excited about what they unlock for us as a learning medium, not just as the next big thing. While these days there's a strong focus on chatbots and using conversations as end products, in our IDEO New York studio, we've been working for the past few years on using conversations as a prototyping tool to test assumptions, learn about a topic, and to inspire the design.Here, we share our experiences designing conversations to learn from real people, and to design real products.Below are three experiences prototyping with chatbots: to learn about user behaviors and mindset around health and fitness, to learn about culture and knowledge related to a health issue with local populations, and to test an early messaging platform to gain insights for the design of a messaging platform for social workers.How might we better understand the nuances of what our participants need?In 2014, together with a Japanese electronics manufacturer, IDEO designed a device and smartphone app that captures a woman's activities throughout the day in order to generate thoughtful, actionable insights about her individual fitness choices. While we were working on this product, we had to tackle a brief that was quite broad: what are the unmet fitness needs of American women, between age 35 and 54?To explore this opportunity, we crafted several prototyping sprints to better understand the needs of these women. At the time, the landscape of wearable devices was very heavily marketed towards men: data-heavy, competitive, and physically unappealing for women. The women we were addressing wanted meaningful content, were far more focused on competing with themselves, and wanted something more discreet. Once we landed on a product, we took a step back to learn whether or not the product was meeting those needs. Turned out our product was also too data-heavy.We decided to pivot in order to uncover what meaningful content looks like for these women. Is it a conversation? Is it one-directional? What type of tone or personality works best? What do they consider to be helpful or meaningful? Is content about being a sounding board or offering ways to push fitness?We wanted to test this out in real-time without building the real thing. Our constraints were clear - use only the information that we'd normally get from an app's on-boarding experience to craft parameters like gender, preferences around activities and metrics, and keep the mechanics simple so we could get to the meat of the problem and not get lost in the weeds.A software designer on the team built a custom tool leveraging Twilio's SMS API, and created an SMS platform that a team of people could use to manage and direct messages. The tool itself would send out messages from one source/brand. We recruited a panel of women, and during their workouts, a team member would send messages such as \"great workout, keep going\" or \"you've walked _____ steps today, add a 5 minute walk to reach 10,000.\"What was interesting about the prototype was uncovering unexpected learnings. Women who participated in the design research would project gender and personality to our bot based on their interactions with it. What participants assumed to be a pushy male coach as the bot was our IDEO female colleague sending messages in real-time while walking side by side with the participants.The responses from our users were also far more nuanced than we expected. Women wanted to share not only their activities, but moments in which they failed or were simply being human, such as the times in which they caved and went ahead and ate a chocolate bar. Those moments mattered just as much for telling a holistic fitness story. In other moments, women assigned different genders to the bot depending on the response. In moments of frustration, the bot was referred to as a \"he\". To these women, fitness wasn't purely about achieving a goal, but also the process and dialogue in getting there.Considerations and learnings How might we build a more effective service for connecting New Yorkers to public benefits and services?Milton was a bot we created to test out a text-driven call center - a kind of \"integrated-and-everywhere\" support meant to arm people with the knowledge they need to navigate the public benefit system, whenever they need it and wherever they are.The service would answer questions when possible, and direct clients to additional resources and other channels when appropriate. SMS felt like the obvious solution for the following reasons:Our team of four designers had limited knowledge in how to advise people going through the public benefit experience, so we hired two Single Stop case workers as advisors, created our custom bot, and set out on a two-week texting experiment to simulate an SMS call center experience. We weren't sure what kinds of questions or cases we'd receive, let alone what the expectations would be.Could we really support people remotely as they sought out a particular benefit or service? What should be the appropriate tone for people in crisis mode? Can we establish trust and rapport through a medium like SMS? And how easily is a problem resolved over text?The requirement for each of our participants was that they go through all of the steps necessary to apply for a benefit, and that they would text us their questions, concerns, and feelings throughout.During our two-week prototype, we stayed connected to our participants and even managed to get one to successfully apply for a benefit. We learned that people have different modes for conversation. Some were looking for logistical answers in which case an automated/impersonal response was fine. Others were looking for a sounding board and we discovered that a small, personable gesture of support can have a huge impact. And still others were trying to simply solve a problem and needed clear directives. We also learned the art of keeping the conversation open-ended - if you're intentional about \"leaving the door open,\" people are more willing to come back. And finally, through our prototype, we learned the vital lesson that support is just as much about the right timing as it is about the right resources.Considerations and learningsHow might we listen to and build empathy with the communities we want to help?In May 2016, IDEO embarked on a pro bono design sprint with a public health organization that was 90 days into the ongoing emergency response to the Zika virus in Puerto Rico. The organization needed a way to quickly evolve their hypotheses about engaging Puerto Ricans in protecting pregnant women from the virus.After an initial round of in-person interviews revealed that many in Puerto Rico lacked accurate health information about Zika and were skeptical about the gravity of the virus, the team sought to prototype engagement channels that could increase awareness of the virus' potential impact on the population. One of those prototypes was Zikabot, a chatbot service for Puerto Ricans to ask anonymous questions about Zika and receive accurate health information in return. To advertise it, we plastered signs on the side of a car that was re-branded as Zikamobile, and handed out about 150 cards in a mall. Users texted their questions to the Zikabot, while on the back-end a team of subject matter experts and IDEOers answered as the bot, in certain cases debating internally on appropriate answers around the inquiries.The questions people texted confirmed the team's insight that many people in Puerto Rico lacked basic knowledge about the Zika virus. Furthermore, the team quickly learned that tone was vitally important. When some users expressed distrust in the formally worded responses they received, the team was able to immediately adjust their writing style to test a more conversational approach. Finally, it became apparent that the anonymity of the chatbot emboldened users to ask far more personal and revealing questions than were asked during the in person interviews. \"Why is the Zika virus in Puerto Rico?\" \"How is it possible that the same mosquito can spread three different viruses?\" \"Does Zika affect pets?\" \"I've had a lot of intercourse lately - what should I do?\"Overall, the Zikabot service proved a useful tool for the health organization to distribute accurate information about the virus in a resonant way, as well as to keep their finger on the pulse of a population from which they felt largely disconnected. However, uncovering the ways in which people might want to be spoken to in this kind of conversation was just as meaningful.More broadly, during our time on the ground, it became clear that when people were given all the facts about the virus, it dramatically changed how they viewed Zika and its impact on public health. Our team learned that these communities crave the why as well as the what. We found that agile, iterative, human-centered design methods consistently won over the Puerto Ricans we met, and made them want to join the fight against the Zika virus.Considerations and learnings During the past years the interaction design and design research teams at IDEO New York worked closely to find opportunities to engage with real people early on in the process to test value propositions and the desirability for digital products and services. As part of this collaboration, we built ad-hoc tools that helped us designing conversations with users, and engage with them in real-life contexts, to unlock empathy, and to individuate opportunities for the design process.In this article we covered the experiences we made through custom-made SMS chatbots - Milton, Walkbot, and Zikabot - and we dove into our considerations and learnings for each one of those. With Milton we prototyped a communication service for social workers. With Walkbot we engage with women engaging with fitness to test language, and messaging. Finally, with Zikabot we immersed ourselves and our partners in a local context to learn more about the level of preparedness and shared knowledge around the issue of Zika and its risks. This insight helped us iterate all messaging and content to a more accessible and straightforward language with the intention to demystify misconceptions and rumors regarding Zika.Although these three contexts are radically different from each other, for all of them we went though a set of principles that we followed when we planned and ran these chatbot-based prototypes.Start with a question.A prototype is a question, embodied. What are you trying to learn? Who are you learning from? What's the ask of your users?Establish a set of parameters.Test your assumptions. It's not about getting it perfect and figured out, but setting up just enough to get the conversation going.Build an initial content library.When we say content, we mean: think about the tone, the types of content, when and how you exchange content, the frequency. Is it manual or automated?Hack existing tools.There's no need to build the real thing from the get-go or reinvent the wheel.Iterate in real-time.The beauty of SMS is that you can quickly adapt in real-time to build on your learnings.Be mindful.Even though you are working on an early prototype, the interactions might occur with real people that might not be completely aware of your intentions. Be explicit about the context, and make sure that your actions are in line with the ethics of field research.Let go.Let the conversations evolve naturally, and be open to learn about the unexpected.Look back, look forward.Once done with your prototype, look back at the stories, anecdotes, and insights you gathered through your chatbot, to inspire the design of the service, content, or product. So at this point you might ask yourself: how can I get started with my own chatbot to prototype and learn? There are two ways to get started. There are several services that can help you setting up an SMS-based platform with little effort. Alternatively, you can create your own conversation bot following the instructions we shared for Stanley, the SMS-based platform that we have been using for the stories we shared in this article.You can find the source code, and the instructions to setup Stanley here:For some more examples on projects using bots for design research, you can read an article on IDEO Labs by some of our friends and colleagues:The Little Book of Design Research Ethics we made at IDEO aims to provide practical guidance for user research. The book is a guide on how to seek and share insights about people's lives in an ethical way. ThanksTo Amy Wang for the illustrations; to Anna Silverstein, Jackie Cooksey, Peter Olson for helping with this story; and to everyone at IDEO and our partners involved in the projects that were mentioned in this article.Follow David Boardman and Sera Koo on Twitter. Walkbot: Prototyping Content and Engagement Milton: Prototyping a Service and ProductZikabot: Prototyping a Service Chatbots to learn from people, and to design real products Meet Stanley Designing ConversationsStories of three chatbots Learn by doing.The best way to understand what a conversation needs to be is by starting the conversation, and figuring out tone of voice, pacing, and interactions - as the dialogue unfolds.Conversations are about people.Making conversations feel more personal is possible with only a few data points. It implies being intentional and creative around what we know around the interlocutor, and progressively build and evolve from there.Bots are personas, whether or not it's intended. Every participant will project an identity of the bot, its gender and personality - whether or not it has been created intentionally by the design team.Be willing to pivot from happy accidents.Bots allow for a nuanced interaction that might bring surprising elements to your product. Be ready to shift, in case you uncover an unexpected direction that seem promising for your goals. It's immediate and accessible.It's responsive and meets people where they are.It can be automated and human.It's once removed, allowing for anonymity.It's asynchronous, which allows for graceful stops and easy exits.Its lower-touch interactions can be more frequent, and more frequent means more data. 24/7 is not a requirement. You have a lot more permission than you realize and can design for that with automated responses that communicate hours, waiting time, and set expectations with users around your service.Treat people like people. People are smart, sophisticated beings: treat them with respect, responsibility, and honesty.Talk like a real person.Design the SMS service like a real conversation - simple things like starting the dialogue with a friendly \"hello\" and ending it with a proper goodbye, establish respectable boundaries, and have a clear follow-up.Adapt for different modes of engagement.People have different modes for conversation and the service should adapt to that. Being accountable to real people means taking on real responsibility.This prototype had considerable implications in terms of ethics and impact. We had to put extra awareness and intention in making sure that the service was reliable, protected, and that the messages were truthful and validated scientifically.SMS can be a safe space for tough topics.Have a clear objective, especially with sensitive topics."
        },
        {
            "title": "Crafting The First Mile Of Product",
            "date": "Tue Jun 21 2016 13:44:49 GMT-0400 (EDT)",
            "text": " As leaders become immersed in their products, they become more focused on the users they have and less on those they don't.The natural tendency to gravitate towards your best customers handicaps your ability to build and sustain increasingly inclusive products.If you want to build a product that millions (or hundreds of millions) of people can use, you must defy this tendency to prioritize the core product at the expense of the \"first mile.\"In a world of moving fast and pushing out a \"minimum viable product,\" the first mile of a product's user experience is almost always an afterthought. The welcome/tour, the onboarding, the explanatory copy, the empty states, and the defaults of your product make up the first mile. Ironically, these crucial components of initial engagement that make up the \"top of your funnel\" for engaging new users are typically addressed in haste as a product is launched. In some teams, I have even seen these pieces outsourced or delegated to a single engineer or designer to figure out on her own.To make matters worse, the first mile of a product experience is increasingly neglected over time despite becoming more important over time. As your product reaches beyond early adopters, the first mile will need to be even simpler and account for vastly different groups of \"newest users.\" For example, products built before the mobile-first era need to evolve for a generation of people that are mobile-only. Products built before the advent of Facebook Connect and now the \"address book graph\" must account for the new standard for finding your friends.And products built for a tech-savvy group of early adopters must simplify to go mainstream and accommodate a broader population. It's an important reminder: New users are not the same over time. Successful products span across demographics, generations, and nationalities. Consider Snapchat, over four years after initial launch, is now growing fast in the \"Age 35+\" demographic. Whatever your first mile is now, it must not only get consistently better but also must consistently change.A failed first mile cripples a new product right out of the gate. Your product may get lots of downloads or sign-ups, but very few customers get on-boarded and primed to the point where they know three things: (1) why they're there, (2) what they can accomplish, (3) and what to do next (note: users don't need to know how to use your product at the beginning, they just need to know what to do next!). Once a new user knows these three things, they have reached \"The Zone.\" Fantastic businesses are built when the majority of users that express interest in a product are able to get on-boarded and into The Zone.Big and established products are not immune to this problem. Consider Twitter - a product that engaged millions of people but struggled to optimize the first mile over time. As the core product improved, the first mile failed to get enough new users into The Zone - and growth stalled. Recent simplifications, an emphasis on accessible formats like live video, and a renewed focus on those who have yet to engage with Twitter make me optimistic.What must you keep in mind as you design a first mile user experience that gets your users to The Zone (and yields deep engagement over time)?Optimize For The First 15 Seconds Of Laziness, Vanity, & SelfishnessHow do you build a product that engages a user quickly enough to get them to The Zone and keep them over time? I explored, in a previous post, why ALL USERS are lazy, vain, and selfish in their first 15 seconds of using a new product or service. But the short version is that everyone you meet - and everyone that visits your website or uses your products - has an entirely different mindset in the first mile. In the first 15 seconds, your visitors are lazy in the sense that they have no extra time to invest in something they don't know. They are vain in that they want to look good quickly using your product. And they're selfish in that, despite the big picture potential and purpose of what your service stands for, they want to know what will immediately benefit them.Don't think your prospective customers are above this. Nobody is. We all need to be pulled beyond our primal tendencies. How?DO>SHOW>EXPLAINThe most challenging products must EXPLAIN how something should be done (think Adobe Photoshop, where users must be find training on YouTube or elsewhere to engage - even initially-with the product). Having to explain your product is the least effective way to engage new users (and explains why products like Photoshop struggle to attract non-Pros). One step better than explaining is SHOWING. The advent of tool-tips (instant guides in the UI that walk you around the product in a series of steps) or mini-animations that demonstrate how something is done everytime you experience a new part of the product for the first time. But the absolute best hook in the first mile of a user experience is DOING things proactively for the user. The best example of this is templates that make users feel successful from the start, as well as presumptuous defaults that present options users are most likely to want.ACCOMODATE EGO ANALYTICSThink about your usage of Instagram. Are you more likely to use the product when your friends post great content, or immediately after you post great content? If you're like most people, you feel the greatest impulse to jump back into a social product (whether it is for work, or for personal use) after you've just posted something for others to see. Why? Because your ego is on the line.The trick here is to recognize the role that ego (and underlying vanity and selfishness) plays in the first mile of user experience, and to capitalize on it. The ego analytics of your product are the efforts you take to bring such insights to the surface. In Instagram, it is the pop-up indicator with the number of hearts that shows up a few seconds after you open the app (and the feed dedicated to such ego-gratifying activity). In Periscope it is the constant stream of incessant (and unlimited) hearts you receive from your audience while broadcasting.PROVIDE IMMEDIATE NOVELTY OR UTILITYIn all successful networks (and most other tools) I have seen, an immediate novelty or utility precedes the larger promised benefits.Before there was a true network-effect on Pinterest that enabled people to discover new interests, users gained immediate benefit from the utility of making collections for their own reference. I remember how many early users requested the \"Private Board\" feature immediately after launch; Pinterest was clearly delivering personal utility before it was the amped up discovery platform it is today. Similarly, in the early days of Behance, the immediate utility was presenting your portfolio online. If we didn't execute this well, nobody would have stuck around long enough to experience the benefits of the networking and marketplace components.Another great example is Slack, which engaged some of its earliest users with the novelty of funny loading messages and tools for sharing animated GIFS among colleagues. These examples of early novelties and utilities are all \"hooks\" for a successful first mile.But providing these quick utilities and novelties for your users is not enough. You must present them up front and merchandise them effectively. Doing so relies on design teams bringing these capabilities up a level (even if they're not core to the long-term value of the product), and whoever writes the copy (which is why I have always believed that marketing copy should be born by the product team - or at the very least, a collaboration). Copy is undeniably a core part of the product experience.NAIL YOUR DEFAULTS & EMPTY STATESThe users of your product don't want to make choices, especially when they are in the first mile. The default options you provide, like which tab they land on and pre-populating fields with suggested selections, make all the difference in pulling new users through the first mile. I like how Dave Morin describes it, \"the devil's in the default.\" So true. Similarly, you'll want to make sure your empty states are engaging and informative. Product designers tend to design their products with the lens of an active user, someone who has already engaged enough to not have an empty experience. But the reality is that new users land without any history in your product, and what they typically see is sad. If the feed is empty, find something else to show that helps educate and entertain.BE MORE ACCOMMODATING, LESS RETRAININGIn the early days of Behance and our pursuit to build a network for creative professionals, we got a little too creative ourselves. We created our own terminology for things that should have been kept simple. We used the term \"Realms\" for the creative fields that early users would use to classify their work (and it should have been a hint to me when my Spanish co-founder could barely pronounce it!). And we called groups \"Circles\" (this was 2007, well before Google notoriously popularized the term). We learned the hard way that new products are hard enough to figure out, and we should make as many things as familiar as possible. Again, life and new products are hard enough. When you can use a familiar term instead of being original, do so. Never opt for a solution that is more creative but less effective.The best (and most widely adopted) products are mostly accommodating with familiar patterns and rarely \"retraining\" with something that is entirely new. Only force new behaviors that power a unique value (think Snapchat opening to the Camera while competitive products opened to the feed, etc…).DON'T CREATE THE FIRST MILE LAST (& DON'T STOP CHANGING IT)The first mile of your customer's experience using your product cannot be the last mile of your experience building the product. The first mile requires your study and continuous scrutiny before and after launch. Avoid the tendency to design your \"tour,\" on-boarding flow, and \"empty states\" right before launch. The first mile of a user's experience is the top of your funnel for new users and needs to be the most thought-out part of your product, not an after-thought.For any product with aggressive growth aspirations, I'd argue that 30%+ of your energy should always be allocated to the first mile of your product. Even if your user experience for new users is performing well, don't forget that new types of new users are the real source of growth. Without constantly reconsidering your assumptions for what new users need, you'll fail to accommodate the cohorts that bring your product mainstream.Finally, recognize that the rest of your product experience beyond the first mile must also be grounded by the fact that (if you're growing) the majority of your users are new (or renewed, when you start to reengage inactive users). It's a paradox of success: As you focus more on power users, you stop engaging new users. The sad reality (and the opportunity for start-ups) is that most established products take their large userbases for granted and fail to maintain simplicity over time.As you go down the rabbit hole of user experiences and new features for power users (which are often the users that pay the bills, hence their gravitational pull), do so with a bias towards always improving your First Mile. The First Mile: Haphazardly Conceived & Helplessly NeglectedFirst Mile Failure vs. Reaching \"The Zone\"Crafting A Fantastic First MileDefy The Product Lifecycle "
        },
        {
            "title": "Defining Product Design: A Dispatch from Airbnb's Design Chief",
            "text": " My fellow designers, we find ourselves in an accidental profession.Take Airbnb's design team. It includes a former librarian, mechanic, life insurance agent, therapist and modern dancer. Driven by creative pursuits, their paths eventually led them to design. I'm thankful that happened, but I can't help but think how many other brilliant, potential designers have veered away from the profession. I know this happens often - it's why we go through incredible lengths to find designers.This might be surprising coming from Airbnb, known by many for its design-centric culture and two RISD-educated co-founders, but it's true - and not alone. I've spoken to design leaders at Apple, Google, Facebook and other companies with growing design organizations, and they're all familiar with this phenomenon. It seems there are not enough designers to meet the demand. Early-stage companies especially feel the pain. Every week, I hear from startups or mid-sized companies that have immense promise, but that struggle to find designers.Even if it's a top of the funnel problem, it's unreasonable to ask companies to wait for designers to surface in due course - and not an option for many startups with limited runway. The kid hacking video games and sharing his modifications on the internet? The science major who by chance made a stellar promotional poster for his buddy's band? The talented illustrator who learned Photoshop to do a side gig for her founder friend? I may not have found my way if my mom hadn't been an artist who believed design could be a profession. There are so many paths that can lead to design and so many variations of the role. Without a clearer route to the funnel, we'll keep relying on serendipity to find the next generation of designers.Before companies can create a receptive environment for design professionals - and a more defined career path industry-wide - it may be helpful to identify some of the main challenges holding our profession back:Weak marketing - and education - around design roles. Outside of design, some have knowledge of UI and UX, but, by and large, design doesn't enjoy the same broad understanding as its product-oriented counterparts. Increasingly, there's more of a grasp of brand and marketing design, but product design - and specifically interaction design - is not well-defined or understood. For a field that's accountable for defining the experience of interactive digital products and platforms - products that are an increasingly big part of everyone's daily lives - there should be more fluency outside the function. A broader understanding will help get design out of its echo chamber and into the greater narrative of a company-building.Nonstandard organizational structure. Relative to engineering and product management, which typically have clear reporting paths, many companies organize their design teams in a myriad of different ways. Some follow an agency model, where designers float from project to project to support the entire organization. It's an easy default for companies, because they can graft in the design function at any time. Others structure the function to help define the entire product from start to finish, with a design leader reporting alongside engineering and product into the same executive. There are also companies that have the design team reporting into Product. Or Engineering. Or Marketing. As a design community, the sooner we can structure design in a coherent and relatively uniform way, the easier it will be to foster design cultures and career paths within and between companies.Fewer mainstream role models. Engineers have Bill Gates, Mark Zuckerberg and Marissa Mayer. PMs have Sundar Pichai, Reid Hoffman and Kevin Systrom. When considering designers who are founders, chief executives or leaders, I'd bet that very few outside the design world can drum up a name beyond Jony Ive or Yves Béhar, if even those. And those are both industrial designers! Would they cite Joe Gebbia and Brian Chesky as designers - or just founders? Recognition for recognition's sake is not the goal, but it is an indicator of the maturity of the function and the visibility that comes at the top of the ladder for a profession. Just as a tech ecosystem flourishes with more exits, a function becomes more expansive as it produces role models and aspirational leaders.The challenge facing the design function has less to do with how roles are compensated and more with how a company positions the function within the organization. By and large, we've found our way in the dark. The need and demand is there, but the path in and through is less clear, bringing us back to the pipeline problem. If the top of the funnel takes time to fill, here are proactive steps that companies can take to attract design talent and ways design leaders can better guide us forward:At some tech companies - Airbnb included - the engineering, product and design teams are hitched and commonly referred to as EPD. By design, each function is involved and aligned from a product's inception to its launch. For example, a working group for a new feature, product marketing or user feedback will involve at least one member from each of the three teams. This coalition not only assembles the key builders of the product, but, as a byproduct, it also formalizes the professional pathways that a person who wants to create a product can consider.The team should resemble a three-legged stool, in which each leg represents one of the three areas that helps build a product. If it's done from the start (Figure A), each function can grow in parallel and proper ratio (Figure B) as the broader organization scales.The companies that I've seen do this well from the beginning have done one or both of the following: Hire and unleash a design lead from the get-go. A great startup example of this strategy is Pocket, which has achieved impressive growth with a lean team. When it started, founder Nate Weiner had the engineering and design expertise, but lacked the design acumen. So his first hire was Nikki Will who later became Head of Design. Weiner credits Will for bringing in the expertise that helped create a truly great product from the beginning. Grow design's headcount in step with engineering and product hires. Designers are often hired to \"work on the visuals\" after a product has passed through several stages of development. This sequencing may not only complicate UI/UX decisions for the product, but the chemistry of the teams building product. Weaving in a designer into an established founding team can make decision-making feel disjointed. Instead, hire designers alongside engineers and PMs. You may never need as many designers as engineers, but you can fix a ratio early on - I suggest a 1:6 to 1:8 as a rule of thumb. Every product, team and company will have specific needs that require adjusting this ratio, but this baseline should help set a good direction, especially as a team scales.Without those strategies from the onset, you're bound to create an unstable stool down the line, which, in this case, is a shaky product. That might be because no design role was developed at the onset (Figure C) or was added on after the product - and the engineering and product management teams - has already matured and grown (Figure D).The best way to avoid a wobbly seat (or product) is to build each stool with three legs from the get-go. What that means in practice is to assign (if there's a founder who can wear the hat early on) or hire design, engineering and product heads who report into the same person or at least peers. For Airbnb, the leads in these three areas are all peers and report directly into one of the founders. This infrastructure has gone a long way to keep design from being a reactive entity during product development.The EPD leadership is not the only place where each function is in lock-step. The same three-pronged cohort is recreated across every project, with co-equal, designated engineering, product and design leads working together. This cross-disciplinary coordination was in action as we developed our Smart Pricing feature, which predicts what a booked price can be on any given day and automatically adjusts prices for hosts. We needed to convey to hosts when it was live and delivering personalized pricing for their listings. Instead of using a simple loader, we designed a motion graphic that recreated the feeling of an active calculation. Design pushed this facet forward, which made the feature more understood by users and, in turn, led to valuable user feedback - uncovered by our researchers - that led to refining the feature even further. This type of equal access and authority on a multidisciplinary team allows for astonishingly synchronized and speedy product development that can scale as a company grows.For the design team at Airbnb, we take a few steps to make it clear how designers can navigate the company and represent how we hope design careers can evolve for the function at large:The challenge for individual contributors (ICs) - especially when they're designers - is that they can hit a ceiling as they grow more senior, while their managerial counterparts often do not. Broadly speaking, this has less to do with their ability, performance or impact and more with the fact that their skill set becomes siloed and less transferable, if unattended. At Airbnb, a few steps help counteract this effect: Level titles across teams. Peers across functions - whether that is in engineering, product, design, marketing or sales - have the same title. They use the same career structure, from the most junior level to the most senior executive in each group. Promote ICs to the highest level without making them managers. Management is not a promotion, but a separate track. ICs can continue to advance upward in their careers without any dotted lines leading up to them.Taken together, these guidelines can improve the following for designers: Retention. In craft-based disciplines like design or engineering, you can allow people to continue to hone their core competency, rather than manage the development of others. Many people leave when this transition is forced, and there should be checkpoints for individual contributors who want to try on management. Concurrent cohort growth. By allowing ICs to work on high-priority projects and make bigger decisions, they can keep advancing with their engineering and product counterparts, rather than be left to work on projects that don't flex their full skill set. They can continue to build, bond and grow with their cross-functional peers. Mobility. Level titles and on-the-job exposure facilitates more opportunities for expertise by osmosis - or the diffusion of knowledge - across functions. As a designer becomes more senior, she picks up more and different expertise from her engineering and product counterparts. With a greater working knowledge, designers have the option to move to \"other legs of the stool\" based on past projects, interest level and skill set.I admit that I still find it difficult to move away from Photoshop. It's second nature, just as a pencil or an architect's table were once tools that designers saw as an extension of their hand. The same muscle memory builds around the software we choose - some of which we've been using for two decades and hack on to keep relevant and useful.Granted, we have our experimenters, but it should be someone's role to try and integrate new design tools. That's why, at Airbnb, we invest in a design ops team, similar to devops, to help the design team move faster at scale. This team ensures that design tools fit cohesively with those used by engineers, PMs and all other functions across the organization. For example, to help bridge engineering and visual design, Design Ops created a plugin for Sketch and a working process that automatically makes the latest master Sketch files available to any designer. That way there's no confusion around which designs are the most current. Taken together, these incremental improvements not only help to sync our cross-functional teams, but also free up designers to focus on their craft and creativity.Even if you can't spring for a separate design ops team, take smaller steps to integrate tools and make structural adjustments to make life easier. Build up to this level of integration with the basics. Standardize your conventions as much as possible so people reinforce the same language as they use it. This applies to developing a design system as well as more mundane practices like agreeing on how to name files, where to store them and how to manage versions. Everyone sticking to a convention is far more important than finding the perfect convention.That type of integration and discipline laid the groundwork for establishing our design language system (DLS), which is not only a language of iconic visual choices and patterns but a system where designers and developers build together. One of the DLS's key goals is for designers and developers to define new components together and once named, those components are built across iOS, Android, Reactive Native and web. So while the components are built in different environments by developers, they are called the same name and have the same core behaviors for everyone across the company.When these systems are linked, a company can start to cement a shared vocabulary across all disciplines. This not only improves communication but also increases others' exposure to the design process throughout the company. Some of our homegrown efforts, like our native component browser and Airshots, permits any Airbnb employee to access thousands of screen permutations instantly. Any of my colleagues can see any screen from any version of our app in any language on any device that we support. With this broad visibility and use, we are more aware of our process so as to keep the system sound. As designers, that might mean removing layers of abstraction between designs and the final product to reduce congestion and confusion. This type of housekeeping helps everyone focus on their contribution to building a great product.Ultimately, the latency in testing out tools starts early. The students who we see emerging from design school haven't experimented enough in this area. If schools have a hard time keeping up with teaching new tools, graduates hit walls when they join startups. Designers already prefer not to change their toolset; design schools would do a service to their students by exposing them to a wider range of design tools, if only to prime an appetite for variety and flexibility.Designers can learn a lot from engineers, who refresh their tools and languages rapidly. They do so quickly, because they need to move speedily to ship code in competitive markets. There are companies with thousands of engineers that move like a school of fish on a shared code base and can adjust relative to their neighbor. We, as designers, haven't yet achieved that level of synchronization with tools, but it starts with experimentation with what's out there and not being afraid to build if you don't find what you need.Ironically, broadening our tools will be just the forcing function we need to standardize how we communicate about our work. Common language across the industry could go a long way to formalizing a design profession. For example, there's wireframing and prototyping, but less consistency when they're modified, such as high fidelity wireframing or low fidelity prototypes. The same goes with mocks, comps, modules, components, elements and dozens of other terms that get redefined from company to company.Compare this to the standards of typography, where designers can speak about legibility and kerning with great confidence that what's being referenced is being understood precisely. Without a level of uniformity, designers won't have mobility throughout their own industry without an extra amount of learning and unlearning that'll have to happen upon each job switch. A standard terminology can help advance our profession without restricting it. At Airbnb, aside from standardizing the way we build interfaces, we make the language we use to build and refer to those systems uniform. Looking ahead, we hope that how we've started to talk about product design internally will also have currency outside of Airbnb. We welcome a future where the Googles, Facebooks and Ideos of the world convene to build a library of terms that could set the industry standard. We've started sharing elements of our design philosophy in hopes of prompting such a conversation and collaboration.Perhaps because design is visual, there's a tendency to get soft and romantic about it. We often get caught up in our hues and fonts, animations and illustrations that we forget there can be a firm backbone that would give our profession better posture. The film industry has conferences during which new tools are presented - whether it is about updates to production processes or hardware upgrades. The design conferences that I choose to attend are those that not only discuss the inspiration and creative process but also dive into the craft- the processes and tools that help designers act on them.Design can strive for sober standards without undermining the freedom it needs to create. My type of designer gets a twinkle in her eye for systems as much as storyboarding. She makes an effort to gain fluency with her engineering and product counterpoints, even in areas that may seemingly not apply to the design process. We should care as much about how somebody mines their creativity as how they use production designers to cut graphics into vector files so that they can be used in iOS and save a few bytes of storage. Fewer designers than I'd hope find those types of best practices and technical know-how interesting, but they should, for the sake of their company and our profession.There are mechanics behind the magic. The future of design relies on both."
        },
        {
            "title": "Design Is Mainly About Empathy",
            "date": "Wed Jul 20 2016 10:15:36 GMT-0400 (EDT)",
            "text": " It's really interesting when a professional tries to explain their complex work to a layperson. Here's a good example - watch theoretical physicist Richard Feynman talk about magnets:The interviewer asks Feynman if he could please explain the invisible tug of one magnet on another, which edges him into what I like to imagine is the intellectual class's version of anger:We all feel like idiots now, Feynman. Nice work. He could have satisfied the interviewer with a tidy explanation about magnetic theory, but he wasn't willing to round the corners of his deep domain knowledge to soften it for a layperson. He responded as a practicing physicist, not an educator.What happens when a good educator tackles the same question?That passage answers a lot of questions, and now we all have goosebumps from those Universe Thoughts. It isn't very technical, but it manages to communicate complex information. It's not overwhelming or belittling.That's an educator practicing empathy. The magnet video person wanted to empower their audience to understand the information. Software product designers can take a lot of cues from great educators, because both groups work with information. Let's consider a user looking for information on jousting. We know three things:Between the magnetized alloy and a user on a couch watching jousting videos is…a bunch of abstraction. So it's the job of a good product designer to hold all three models of the information in her mind, and build a bridge between them. She covers the gaps between her users and the machine, so her users don't have to bother. As Alan Cooper puts it:Let's take a closer look at those three methods. Alan Cooper tackles all three in the seminal About Face: The Essentials of Interaction Design.The first one is the user's mental model. Cooper writes that a lot of people think \"electricity flows like water from the wall into the appliances through the little black tube of the electrical cord\" when they plug in their vacuum or computer.Of course, the electricity doesn't flow like water at all. In the real world, electricity's implementation model is much more complex. But a simpler view of electricity works just fine for most of us. It's informative enough to help us understand, for example, that we need to cram a cord into an outlet to charge our computer.Finally, the represented model is the way the thing ends up looking to the user. This is the part the designer spends their time working on, and the part that people will actually touch.Here's the secret for the designer, again from Cooper:Bravo! For a designer, that might mean spending more time talking to users, and less time digging through the API. It might mean that early design phases are better spent researching user psychology instead of tinkering with typography.The user's mental model, faulty though it may be, is our guiding light. If we don't invest effort in understanding that model, it's going to be really hard to know if our work is successful. Design is mainly about empathy.Example time. Animation is a great tool for practicing user empathy. Animation is a user interface pattern for aligning a user's mental model with the product's represented model. The notifications menu in iOS 9 isn't physically tucked up underneath the top of the device on a curtain roll, and everyone knows that. But users have mental models of tugging on objects in their world from the near the top to reveal a new temporary state.The thing that's special about the represented model-Cooper helped me see this-is that it's the only part a designer can control. We can't control the implementation model, because a good engineer will use abstractions in the codebase to make it maintainable and safe. And we can't control our user's mental model, since it's shaped by their culture and dozens of other unknowable factors.As designers, we have the power to manipulate representations. Design is the process of making our users feel awesome by representing the software in a way that meets them where they are. The user has a way of thinking about the information they want. Example: \"I heard about jousting and it sounds weird so I think I'll watch some jousting videos.\"The information our user needs actually exists a certain way in the world. Example: A database of video information with some metadata are magnetized regions of alloy on a hard drive on a server somewhere in North Carolina.A product designer has represented the information to the user with some degree of abstraction. Example: A web page at a certain URL shows a place to type a search query, a loading indicator, some branding, a sorted list of results with previews, and a plenty of enticing buttons to click on in case your jousting interest flickers out and Christina Aguilera on Jimmy Kimmel could help you pass the time instead."
        },
        {
            "title": "Design and the Self",
            "date": "Wed Aug 10 2016 23:40:02 GMT-0400 (EDT)",
            "text": " Everywhere we go, we are surrounded by bad design - from airplane seats that distort our posture to aesthetically inelegant cars. Landscapes that were once green and blue are now paved over. Our surroundings are full of missed opportunities to introduce delight and joy into people's lives.Poorly designed things slow us down and make us sad - like the ugly building in your neighborhood that makes you wince every time you see it, or the TV remote control with too many buttons, or the software that just won't work. These objects and experiences are outcomes of miscommunication, greed, lack of empathy, and lack of focus. Bad design is especially depressing given the price imposed on this planet. Sometimes it seems like we are filling the world with junk.As the technology industry matures, we have witnessed greater interest and investment in design. Companies now embrace the notion that design can be a competitive advantage that differentiates them from the competition. Our understanding of what \"design\" means has increasingly deepened over the years, moving beyond aesthetics and towards problem solving skills. For the last couple of decades in the software industry we claim a product is \"well-designed\" when a product is considered useful, usable, and desirable. We can do better than that. We need to do better than that.What do I mean? Before we get too deep, let me give you some context by taking a step back to review for a moment the different levels at which design can be understood.The most basic understanding of what design is typically relates to aesthetics. Universal principles of beauty, such as the Golden Ratio, Rule of Thirds, or principles of proximity, alignment, contrast, and repetition, inform our innate sense of whether something is beautiful or not. At this level of understanding of design, we think of design as the outward appearance of an object, such as whether a car looks fast, or expensive, or muscly.But design is not just what an object looks like but also how it works. We consider an object well-designed not only when it is beautiful but also useful and easy to use. Good design makes our lives easier, saves us time, and reduces cognitive load, which in turn reduces stress in our lives and preserves willpower and goodwill towards others. In this sense, good design is like a refrigerator - when it works, no one notices, but when it doesn't, it sure stinks.When a company consistently delivers an aesthetic and functional quality, design becomes the brand. It becomes the vehicle by which companies create an emotional connection to their customers. Consumers choose to associate themselves with certain brands because the brands embody and represent values and ideals that appeal to them.Towards the late 90s, successful design meant orchestrating memorable events for customers, and that memory itself became the product - the \"experience\". Take American Girl dolls, for example. It's not just enough to buy a doll. In the experience economy, now you can design your own doll, customize it to look like you, give her a spa day, get her hair extensions. It's not just about buying a doll but creating an entire experience around acquiring and owning this doll. Design goes beyond the product and brand and encompasses the entire customer experience.The term \"design thinking\" was popularized by IDEO and Stanford University over the last 10 years. Design thinking refers to a set of cognitive processes directed toward problem solving. Different stages of the design thinking process includes defining the problem, building empathy for users, generating many ideas, prototyping possible solutions, gathering feedback, and iterating. With this understanding of design, design is about solving problems.Design is a term that refers to what something or some service looks like, how it behaves, the emotions evoked when people interact with it, the experience one has when one interacts with it, and way of thinking and acting to solve problems. It is also a manifestation of the Self.What do we mean by the Self? A quick Google search comes up with this definition: \"a person's essential being that distinguishes them from others, especially considered as the object of introspection or reflexive action.\"Any creative endeavor is an expression of the human spirit. When we create something, we create an outward expression of who we are, and the values and virtues that we have internalized. What we make embodies our values and virtues, and becomes a tangible expression of our Self.Take fashion design, for example. In the early 1900s, stylish clothes were complicated and very expensive. They were designed to portray women as delicate and passive, and were highly impractical for anything other than to sit around and entertain guests in the drawing room. The clothes signaled an aspiration.Coco Chanel grew up poor, skinny, and orphaned during this era. But she believed she was as good as the rich girls who spurned her. With her spunk and flair, she grew up to be a confident, capable woman, energetic, focused, and engaged with the world.Chanel had a different vision of existence for women, and the clothes she designed represented a different ideal from what fashionable clothes of the day were about. Her little black dress, introduced in 1926, embodied virtues that she valued in herself, and reflect a woman who was energetic, competent, and engaged with the world, just like herself. Chanel's clothes focused on quality and were not about following the latest trends. Sure enough, Chanel's designs have endured over decades and are still relevant now.Take a look at these products designed under the direction of Dieter Rams for Braun. The products, like Rams himself, are humble, modest, and hard-working. Even though these were created in the middle of the last century, these products have inspired the design many of our beloved technology gadgets today, a testament to the endurance and purity of Rams's vision.Being simple may make us feel vulnerable, but simplicity is really an achievement - it follows from deep introspection about what really matters, a result of hard-won clarity and focus. These acts reflect virtues such as nonstriving, nonattachment, and overcoming fear. Well designed products, like their makers, are imbued with modesty: they don't try to attract your attention for no reason. They are happy to sit in the background and do the work.Many of us have seen what the opposite of this looks like. How many of you have been asked to save the design of a product when larger fundamental problems make your endeavors feel like putting lipstick on a pig?Have you ever witnessed a company that was afraid to turn away easy revenue opportunities that didn't make sense for the product? That is an outcome of greed.Or how about the development team that keeps adding features just because they can? That is an outcome of attachment, or striving.Or maybe the company that won't make the hard decision to kill a middling product because they don't want to make current users angry? That is an outcome of fear.Fear, greed, and attachment are just a few examples of afflictions of the Self that can plague any company. They dilute the purity of the true intention behind what is being made. For any organization or individual making a product or a service, the clarity and simplicity of the design depends crucially on their ability to confront these issues in order to better align with their intention.The story of Steve Jobs returning to Apple in 1997 famously illustrates this point. When Jobs returned to Apple, he simplified the product offering by streamlining the product portfolio, cutting the product line from 350 products to 10 products. He maintained that what really mattered was not what they did do but what they didn't do. Instead of producing so many products, Jobs focused on a few machines that were meticulously perfected.Jobs had a clear intention, a commitment to quality over quantity. Many executives may make the same claim, but are reluctant to actually make tough choices. Consider how emotionally hard it can be to cut products that have already been designed and manufactured and to eliminate jobs for 3000 employees. Jobs wasn't afraid of making a tough choice that would make him unpopular. He was willing to risk his popularity with others in the pursuit of upholding his vision which he believed would save the business and serve users better. He transcended any feelings of greed, attachment, and fear that might accompany such a decision.When we are fearful, greedy, or attached, our actions get manifested in the design as complexity and clutter. The more able we are to transcend our beliefs about our Self, the better we can create a great design that clearly expresses our intention. What we create reflects our inner state.As much as what we make embodies our Self, we pass on our attributes, vision, and intent to others when they consume what we make. Design is the culmination of intention, values, and principles manifested in tangible form and passed on to another. Design has the power to shape how we think and feel.Adam Galinsky, a professor at Columbia University, studied the impact clothes can have on how we think about ourselves and our performance. Participants were given the Stroop test, where they are shown names of various colors printed in a different color, and are asked to name the color that they see. This is a pretty tricky test, because our natural tendency is to read the name of the color rather than the color we perceive. But those who wore white lab coats performed significantly better on this test than those who wore their ordinary clothes.What's also interesting is that this happened when the participants were told they were wearing \"white lab coats\". In another variation of this experiment, participants were told they were wearing \"a painter's coat\". Same coat, but now it's called a painter's coat. This time, they did not experience the same gains in performance on the Stroop test. Why? Because they said they were projecting a certain image of the kind of person who would wear such a coat, like a creative artist, who doesn't care about accuracy and performance.These participants were primed to project a certain image about the white garment by being told what it was, which in turn affected how they performed. In regular everyday life, we are not usually told what the psychological qualities are of the objects we use. But when something is designed with a clear intention, that intention is more effectively channeled through that creation and conveyed to the recipient of that design.Let's go back to Coco Chanel. In Chanel's little black dress, women could be efficient, organized, serious, and in control, yet while still being graceful and hip. When a woman wears a Chanel dress, she embodies the virtues Chanel imbued in her designs, whether or not she knows anything about who Coco Chanel was.Consider the Braun watch. On the surface, the watch looks like a bland, ordinary watch. But on a deeper level, it hints at psychological or even spiritual ideals of purity, simplicity, and harmony. The watch does more than tells us what time it is. It gently nudges us towards the ideals it conveys and represents. It makes us want to be on time.Contrast the Braun watch with the G-Shock watch by Casio. The watch conveys a focus on durability, even under the duress of water and shock. The wearer of this watch is making a statement that says he is sporty, tough, and rugged.Or this watch, called the Slow Watch. This watch has a 24-hour face, as opposed to 12 hours. The density of the numbers on the watch means that it's utterly impossible to distinguish between 3:41 pm vs. 3:42 pm. The wearer of this watch does not intend to have his day scheduled down to the minute, but rather to live in larger increments of time, like 15 minutes. The slow founders assert on their website, \"Slow is not a speed. It is a mindset that most of us somehow lost. Let's make time to bring slow back into our life. Be slow…\" The founders of Slow value the slow life, and by wearing the watch they designed, the wearer is able to live the slow life too.We may not always be consciously aware or able to describe how objects make us feel, but we do sense a spirit or an energy that emanates from the objects we use and the experiences we engage with.The Eames lounge chair by Charles and Ray Eames, designed in the mid-century, is reminiscent of a bygone era. Its masculine structure offers a supportive \"man-cave\" in a chair, beckoning the owner to sit, relax, and unwind after a busy day, maybe read the paper or watch TV until dinner is ready.The Wishbone chair by Hans Wegner communicates a set of important values: straightforwardness, honesty, and elegance. It is sturdy without being hefty and heavy. It is humble and casual, but dignified. Its welcoming, unimposing design welcomes us to sit on it, and as we do, we become a bit more like it.Various religions implicitly understand this relationship between design and its impact on the human spirit. From the ornate and ostentatious to the streamlined and simple, places of worship have been designed for centuries to evoke a certain set of virtues and ideals, and maybe bring people a little closer to God. Whether you are religious or not, you cannot help but pause and appreciate the beauty of these places of worship and prayer, bringing you a little closer to serenity and equanimity.A well designed object or space can bring out the best in us. Conversely, a poorly designed object can represent the worst sides of human nature - greed, insensitivity, the desire to prevail no matter what the cost. As much as beauty promises goodness, ugliness evokes despair, suffering, and immorality.Ian Fleming, author of the James Bond series, implicitly understood this. One of his most notorious villains, Goldfinger, was named after a real person named Erno Goldfinger. Erno Goldfinger was an architect who was known for making giant, hulking, austere concrete buildings which were characteristic of the Brutalist architectural movement.This architectural trend, popular in the 1950s and 60s, was known for its use of cheap concrete building materials and became popular after World War II because it provided a sense of security in areas that had been devastated during bombings. Brutalism was also associated with a socialist utopian ideology, which prevailed in European communist countries from the mid-1960s to the late 1980s. The foreboding style conjure images of totalitarianism, violence, force, and stark utility. The severe exteriors of these buildings appear unimaginative and bland. To Fleming, the ugliness of Brutalist architecture was personified as evil, embodied in his fictional evil villain Goldfinger.When positive ideals are manifested in objects and products we use, those objects and products play a sort of positive psychological or spiritual role in our lives. Well designed products are manifestations of mindfulness, virtues like patience, resilience, iteration, focus, empathy, nonattachment, all at play. When we use these products regularly, they give us a chance to get closer to our better selves. When they are contained in physical things, psychological qualities that are otherwise often intermittent in our thoughts and conduct become more stable and constant. An inner evolution takes place, which is why we form an emotional connection to well designed things. Well designed objects help us grow into our better selves and serve as ever present reminders of what we could be.The ability for design to influence how we think and feel goes beyond physical objects and spaces and extends into ephemeral experiences like service design and digital product design.For example, with Google, Larry and Sergey aimed to build powerful technology that helps people find information efficiently. They invented algorithms that made it possible to find information easily, but it didn't just stop there. They committed billions of dollars of capital outlay to create infrastructure to make web search as fast as possible. They championed company objectives, called OKRs, centered around reducing latency (the time it takes to get a response back from a search query). They also did this by bringing to life a set of values around efficiency and scale through the streamlined interface. Everything done at Google was prioritized against creating a powerful, efficient tool. By using Google to search the web, or manage our email, documents and photos, we in turn feel powerful, efficient, and capable.Nutanix is an enterprise cloud company that makes data center infrastructure. The leadership champions virtues like \"empathy\" and \"frictionless\" throughout the company.Here are a few examples of how these virtues play out in the customer experience. Most customer support interfaces bury the ability to escalate cases because they are time consuming and costly. Nutanix puts this function at the very top, sending a message to its customer support representatives that no issue is too small, no customer too unimportant to be escalated.Another example is with upgrading the data center infrastructure software. Upgrading software for data centers is typically complicated and risk-prone especially when large clusters of machines need to be upgraded. Understanding this challenge, the company reduced all these activities to a one-click operation where the system administrator starts the process and Nutanix does the rest. You can see from enthusiastic tweets (e.g. #lovemyjob) how much their customers feel cared for - they can upgrade from their Tesla, or perform upgrades while barbecuing.What we become, so we make. What we make and consume, is what we become.We need good design in the world, not because we want to be extravagant or superfluous, not to get people to buy more stuff, but because good design helps us to be the best version of ourselves.In order to make well designed products, we need to transcend that which holds us back from making things great, like fear, greed, attachment, ego. When we understand and embody the virtues we want to express through the design, we become oriented towards wholesome action, and that gets expressed in what we design. This, in turn, affects how others think and feel, so they can embody those virtues as well. It is the greatest gift we can possibly share as designers.Many thanks to Fred Chung, Albert Poon, and Satish Ramachandran for their feedback.Update: The original post included a photo of the Fiat Multipla, to illustrate an \"aesthetically inelegant car\". It won Top Gear's \"Ugliest Car\" award in 1999. Despite its hideous look which was at times described as looking like a \"psychotic cartoon duck\", it does have its fans and by non-aesthetic measures is considered a well-designed car. Based on readers' comments I decided to remove the image of the Multipla because the debate over whether it is well-designed or not was detracting from the overall point of the essay. Design = FormDesign = FunctionDesign = BrandDesign = ExperienceDesign Thinking = Problem solvingDesign = Self "
        },
        {
            "title": "Design for Humanity",
            "date": "Fri Apr 08 2016 22:08:39 GMT-0400 (EDT)",
            "text": " In 1950, the American psychologist Harry Harlow conducted an experiment that separated infant monkeys from their mothers just a few hours after birth. Each monkey was isolated in a cage and given two dummy mothers. One mother was constructed of metal wire and held a milk bottle; another was covered in synthetic fur and designed to resemble a real monkey, but it provided no sustenance.Instinctually, Harlow assumed the infants would gravitate towards the metal mother because it provided a basic need: nourishment.Much to his surprise, the infants preferred the animate mother despite her lack of milk. In fact, when the two mothers were placed side by side, the infants would suck milk from the metal mother and cling to the more realistic looking dummy.Despite receiving all of the physical nourishment they required, the infant monkeys displayed much higher levels of anxiety and aggression as they matured. The obvious conclusion is that most creatures have immediate physical needs - be it sustenance or shelter - but there is a large emotional component that needs to be nourished as well.Harlow's monkeys preferred the animate mother because they were not just seeking milk, they were desperate for an emotional bond.Function lies at the core of every manufactured object, be it a door knob or a chair. We design objects to solve problems, to fulfill needs; whether it's something we take for granted, like our effortless passage into another room, or a comfortable place to sit.That said, there has been conflict tugging at the core of our design principles since Louis Sullivan popularized \"Form follows function\" at the dawn of the 20th century. Function may be the fundamental concern for many designers, but how strictly to cling to this maxim? Some, including Austrian architect Adolf Loos, would go so far as to call ornamentation a crime.To flesh this out, let us consider an object that is primarily functional: the La-Z-Boy reclining chair, deliberately built for comfort and relaxation. All of its features are geared towards function, from its puffy cushioning to the side-mounted handle that allows us to recline for a nap. Some might say that its design is so explicitly functional that it is, for lack of a better word, ugly.On the opposite end of the spectrum is Picasso's Chair, a contradictory piece of seating that's impossible to sit on, unless you've been sculpted to fit into its jaunty, uneven lap. Picasso sketched his prototype on paper before folding it into existence, much like an origami swan. Its function is purely aesthetic; its form toys with the relationship between the 2nd and 3rd dimension in a playful way. In short, Chair's experimental design has very little to do with utility.Form and function are universal concepts that every junior designer considers when developing new work. But there is a third, more subtle factor at play in design; one that many designers may relate to subconsciously but rarely express as a priority in their design thinking: feeling.While Picasso's chair does touch us emotionally, its pursuit is primarily intellectual, pushing us to consider the meaning of aesthetics, perspective, and form itself.Contrast this with The Waterproof Garden Chair by Bert Loeschner.This piece and others in his series encourage viewers to empathize with the common chair by anthropomorphizing it. A garden chair that was once hidden out of sight on a back patio suddenly becomes an old friend who looks neglected and lonely, and you find yourself apologizing because you've left him alone in the rain for the last 10 years.Not every object that deeply considers feeling is so explicit. There are those rare sublime objects that manage to blend function, form, and feeling in a truly holistic sense. Hans Wegner's Shell Chair immediately comes to mind: a piece of design that is not only beautiful and highly functional, its pleasant lines and smiling undercarriage encourage us to feel something, be it calm, comfort - even joy.The first time you meet someone, your first thought isn't \"How do they function?\" it's \"How do they make me feel?\" And when you're asked about that person later, you describe their personality: \"She's relaxed, smart, witty. She makes me laugh.\"It may seem peculiar to apply the same attributes to inanimate objects, but if we take a moment to think about our belongings, we all have a handful of items that aren't particularly useful or pleasing to the eye. Why have we kept them? Because we've formed a connection, and they're meaningful in some way: the birthday gift from our best friend, the movie ticket stub from the first date with our significant other. These connections effect us subconsciously, breathing life into otherwise inanimate objects.These emotional bonds (or lack thereof), are the invisible currency of contemporary life - something that advertising agencies are especially adept at tapping into. A 30 second spot for Trident isn't concerned with form (the gum itself) or function (elimination of bad breath), they're selling you an emotional experience (a kiss on your first date). If the ad works, it's because they've transformed an innocuous grey sugar cube into an emotional connection with an attractive woman.It's no surprise that The Volkswagen Beetle, released in 1938 and produced until 2003, is the best selling design in automotive history. Referred to as \"the people's car\", its friendly round contours are punctuated with a pair of headlights that resemble cartoon-like eyes and a smiling bumper. The vehicle has such an affable design that Disney based a live-action film on the car: a thinking, self-driving Beetle called Herbie the Love Bug.According to car design researcher Sam Livingtone, our attraction to the Beetle's human features is deeply rooted: \"Consumers are reading to some extent the face of the car as the face of a person and therefore will infer from it an attitude, be it aggressive, benign or friendly. Even if people don't consciously read the face of a car, they certainly do it subconsciously.\"An interactive essay exploring the past, present, and future of anthropomorphic design....This is an interactive + evolving essay. Please get in touch if you have thoughts regarding new content, modifications to current content, or anything else! Form, Function, FeelingMan & Machine1: You're here!2: Apple, The Original Human3: Conversational User Interfaces4: A Smarter Future5: Emotional Machines6: Computers Cry Too7: The Day You Become a CyborgHi, I'm Daniel. I've founded a few companies including Piccsy (acq. 2014) and EveryGuyed (acq. 2011). I am currently open to new career and consulting opportunities. Get in touch via email.This article was co-authored by Shaun Roncken.Thanks to Gordon Hui for contributing. Design for HumanityThanks for Reading"
        },
        {
            "title": "Digital Product Design Principles",
            "date": "Tue Jan 05 2016 13:41:15 GMT-0500 (EST)",
            "text": " I wrote down twelve design principles for our team at Degreed to help us make design decisions. I tried to make them practical and clear and hopefully they are useful for anyone who is working on digital products. If you have any questions or feedback, let me know on Twitter: @WdeB.Digital design always solves a problem, otherwise it would be pixel art. Understanding the problem thoroughly is essential to design successful solutions. When discussing the product and design internally, always define the problem first before proposing solutions. Thoroughly research the problem before coming up with suitable solutions.Simplicity is the key to great user experiences. Create fewer features, but make them great instead of just good. Show fewer elements, use simplistic styling to reduce cognitive load. Dare to say ‘No' to prevent the core functionalities from being lost in the noise.Good design helps the company achieve its business goals. A design is successful when conversion and engagement are getting measurably better. Insights into product performance is key, they should be easily accessible for everyone in the company to make everyone understand which problems are worth to be solved.Be consistent with layouts, design elements, typography and interaction to reduce the cognitive load for the user. Use the style guide as a box of legos where you can take the pre-defined building blocks to create consistent user experiences. We are not designing screens or features, we are designing a platform agnostic service with a consistent user experience.Guide the user by focusing screens, views or actions on one primary task. Be ruthless with the prioritization, make the choices stupidly simple. Limit distraction. All elements and styling that are not helping the user focus on the primary task can be considered as visual clutter and a huge distraction for the user. Be aware that everything in the interface has to be processed by the user's brain, the less there is to process the lower the cognitive load is.User input takes a lot of effort and time. Always strive for the least amount of user input to reach a goal. Every input that is required from the user increases the friction that the user experiences and increases the chance on giving up.Words can both clarify and confuse users. Choose the language your users are using. Choose clarity and be concise. Descriptive and helpful is the primary aim, adding personality secondary. Don't sound like a system, we are all humans.Don't be afraid to make decisions for the user. Offering less choice and options will give the user a more confident feeling, because there is less to worry about. Be aware of the paradox of choice; offering a lot of choice will make the user feel overwhelmed because he/she needs to asses each and every option if it meets his/her goal.There are many ways to create visual hierarchy in a design, position, size, color, space. Determine a strict visual hierarchy in every design. Don't let elements, actions or features compete for attention.The easiest way to accomplish visual balance is to align elements and structure designs with a clear grid. It guides us in the right direction when placing elements and determine dimensions, and it makes it easier for the user to process the interface.Never chase the ‘wow-effect'. Product design succeeds when it solves the problem or need of our users in the best possible way. Design the product effective & delightful. The reaction we are after from our users is \"Of course, that is obvious\".No design is ever finished or done. Don't be afraid of throwing away work, features or designs, good design is always evolving and grows with the business. Design with change in mind will allow us to quickly adapt to new learnings and insights. Every feature or functionality that is introduced needs time to improve. Once something is launched, evaluating performance and iteration should be the focus. Thank you for making it to the bottom of this post. If you liked it, I would hugely appreciate it if you could recommend this story. If you are not following me yet on Twitter: 🐣 follow @WdeB. 1. Define the problem first2. Create more value by creating less3. Design performs4. Strive for consistency5. Focus the user on one primary action at a time6. Minimize user input7. Use your user's language8. Make decisions for the user9. Design with strong visual hierarchy10. Align elements11. Don't go for ‘WOW', go for ‘of course'12. Design for change "
        },
        {
            "title": "Don’t Defend Your Work",
            "date": "October 29, 2016",
            "text": " Summary: The impulse to defend one's work feels natural in design. But as we start to examine design reviews in the context of user-centered design, it becomes clear that defensiveness may not be the best response. Designers are much better off when they focus on collaborating with their stakeholders, listening to their feedback, and asking questions to get the deepest insights. Last week, I gave a speech in Budapest about the importance of humility and collaboration in design. After the talk, one of the audience members asked me, \"How can I stay humble and open-minded when I need to defend my work?\" To which I replied, \"Don't defend your work.\" My suggestion here is that designers actually shouldn't defend their work at all.Now, I realize that this goes against a lot of what we've been taught as designers. Most of us have literally spent semesters in school learning how to defend our work, we've listened to our greatest design idols talk about the importance of standing up to clients, and perhaps we've even read a couple \"self-help\" books on the topic. The ability to defend one's work is not only considered a critical competency in design, but it's one that we've been taught to never question. And yet, dare I say, we may have been blatantly (if not ironically) wrong all along.It's tough to run a productive and healthy design review from the defensive. In some cases, it can even have the unintended effect of regressing progress. But it's an easy trap to fall into. For how much I talk about humility and diplomacy, I really wasn't always good at it. I'm familiar with that feeling of being the young designer in the room, terrified to receive negative feedback or disappoint my stakeholders. I know what it's like to anticipate criticism, prepare responses ahead of time, and begin thinking of replies before others had even finished speaking. Because after all, that's what any good designer would have done: defended their work.But with time, I stopped doing that. I stopped defending and I started listening. I started asking questions and really trying to understand the feedback that I was receiving. I started to genuinely care and express concern for what my stakeholders were saying. You could say, I started to take my own advice and actually try to understand my audience (you do know that user-centered design includes your stakeholders too, right?). And therein lies my suggestion. Rather than defend their work, designers should listen, reflect, and ask questions. That's how you bring humility and open-mindedness into the feedback process. Don't get defensive; get curious. I made this shift not only because I felt that my design reviews were becoming unproductive and unnecessarily stressful, but because I had noticed that the entire process was breaking down in several ways. These issues weren't unique; in fact, they're quite inherent to defensive reviews, and they're precisely why a different approach is in order:The ability to listen to stakeholders and acknowledge their feedback is not just the quality of a good designer; it's the quality of a good leader. It's what empowers us to create truly thoughtful, well-informed designs that are not just personal expressions of creativity, but rather are products of healthy collaboration. And when it comes down to it, a lot of this rests on one's ability to conduct a good design review.This lends itself to the (perhaps inconvenient, but admittedly valid) idea that despite being celebrated in design, it is wholly unproductive to respond defensively to criticism. It not only wastes team resources and erodes relationships, but it shuts out one of the most important vehicles for improving a design: stakeholder feedback.Now, of course there are many different ways that one could attempt to solve this problem, but I would like to propose that the answer may be way simpler than we think, and it may have actually been there all along. We just weren't applying it in the right way.Some of the best design reviews that I've participated in were essentially run like user tests, but with stakeholders as the participants. That is to say, the designer took an open and collaborative approach, with a genuine desire to record feedback and probe for deeper insights, rather than to just get through the review with minimal changes being imposed on the design. They were able to do this because they operated with an understanding that UX doesn't just serve users; it also serves businesses, and thus stakeholders.When this kind of emphasis is placed on serving stakeholders, design reviews start to feel less like staged battles to defend or attack work and more like opportunities to collectively improve work. Opportunities to generate better outcomes for everyone involved. To do this, we really have to focus on fostering true collaboration, encouraging focused listening, and facilitating deep inquiry.First and foremost, the feedback process shouldn't be a one-sided exchange where stakeholders shout criticism and designers are just there to record it. True collaboration requires that both parties provide an equal amount of effort and input. As such, when a stakeholder criticizes a design, the designer should work with them to arrive at a solution together.In other words, feedback ideally shouldn't come in the form of mere criticism without an attempt to arrive at a constructive solution. \"Here's what I hate about the design, now you go figure out how to fix it\" isn't a constructive critique, and it isn't true collaboration. Rather, when a stakeholder offers critique, they should expect to follow-up on their criticism and work with the designer to produce a better solution. That's not to say that the stakeholder would literally be doing the work, but they should be able to explain themselves and really get to the bottom of their thoughts. Not only does this provide more context for the designer, but it also helps ensure that the feedback is substantial and pertinent. Key dependency: Stakeholders need to play by similar rules for this to work. They need to maintain an open mind, properly qualify their feedback with data or sound reasoning, and build empathy and trust with the designer. It's tough to collaborate with a stakeholder that doesn't understand or respect design. The designer should make a clear effort to listen to the feedback and understand what is being said. In the same way that user tests are recorded with considerable detail, stakeholder feedback should also be documented and used to steer design decisions (especially when supported by quantifiable data or business goals).Stakeholders from different parts of the business can provide access to perspectives that designers may otherwise not consider or be exposed to. For example, executive stakeholders will often view the design on a macro level, while individual contributors will offer a peek into their specific area of expertise. Both represent major opportunities to further inform the design. But perhaps most importantly, by listening to and recording feedback, the designer can build empathy and trust with their team. They can show that they really care. Key dependency: The designer must be empowered to make the final call on design decisions. They will be collecting information from countless stakeholders, users, and quantitative data sources. Through this, they're best positioned to determine how feedback and data should be applied. This also greatly decreases the need to defend a design, and instead opens up room for more feedback. The most critical step in all of this is to ask questions. It facilitates collaboration, demonstrates that the designer listened to and understood the feedback, and pushes the design review down a path of resolution. Rather than deflect criticism, the designer should ask questions that will either help them to fully understand the feedback offered or bring the stakeholder around to their point of view. This should be done as organically as possible, with a true desire to learn more about the presented point of view, rather than to only persuade stakeholders.Questions can be related to actual design recommendations, data or perspectives that were presented, or even concerns that the stakeholder shared. The goal is to really challenge the feedback, so as to understand what the stakeholder specifically wants, and to confirm that the feedback is well-founded. Key dependency: Stakeholders should expect to answer in-depth questions about their feedback and logic without getting upset. This can't be seen as an indictment of one's feedback or a personal attack, but rather as a fundamental part of the design review process. It's what the designer needs in order to do their job. Having taken this approach, the designer should now be able to not only understand what is being critiqued, but why it is being critiqued. And that's where the real value comes out. Depending on the type of critique that is given, we'll see one of two distinct outcomes:This is where we start to see why the best way to defend work is to not defend it at all. The design will either naturally defend itself (when feedback doesn't hold up to questioning) or welcome the opportunity for improvement (when valuable feedback is given). We never have to make a call on legitimacy, we never have to ignore critique, and we never have to sacrifice collaboration. We can simply focus on working with our stakeholders toward a better solution, resting assured that the outcome will ultimately be what's best for the design.In a certain way, this encourages that decisions be based more on the merit of the work itself, rather than the personal preferences or political motivations of the individuals in the room. It fosters better relationships with stakeholders, it affords designers more influence over their work, and it ensures that every opportunity is harnessed within the design. But most importantly, it's just how we should be approaching everything in design: by getting curious, not defensive. Legitimacy: Critique can be presented for many different reasons. Designers constantly have to ask themselves, \"is this the feedback that I should really be paying attention to, or is there something wrong here?\" Most of the time, the critique is perfectly legitimate, and the stakeholder has a genuine desire to help. But occasionally, that isn't the case. Be it due to the stakeholder having a lack of information, conflicting goals, or even a desire to gain political power, illegitimate critiques can really destroy design reviews and send projects in the wrong direction. But the truth is, when defending a piece of work, it's usually impossible to evaluate whether or not a critique is legitimate ahead of time. Instead, one must immediately make a judgment, and then start defending based on it. And that judgment is often wrong.Understanding: When defending a design, we forfeit the opportunity to dig deeper into the feedback and really understand what is being said. Instead, the focus is placed on defending what has already been made. This dismisses valuable feedback and limits the potential of the design. It leaves a lot on the table. Moreover, we end up abandoning trust and empathy at a time when they're actually critical. This kills cross-team relations. Nobody likes to work with a designer that doesn't listen to feedback, is easily upset by critique, or can't understand different points of view.Collaboration: A defensive response will put the designer and stakeholder in an odd position, where they end up defending their own points of view, rather than working together to actually improve the design. The team goes from having 100% of their resources focused on creating a solution, to instead having 50% arguing with the other 50%, which doesn't usually generate much of a positive outcome. You could say that this is an oversimplification (and it probably is), but the point remains: defensiveness often trades collaboration and progress in favor of argument and stagnation. Legitimate feedback: If the critique is legitimate, then by asking questions, the designer will have shown that they genuinely care and want to collaborate. They'll be able to work toward an improved solution. In some cases, they may even help the stakeholder realize that their critique was misguided, though that shouldn't be the goal. By not asking questions here, they would miss out on this valuable feedback and opportunity to improve.Illegitimate feedback: If the critique is illegitimate, it will be naturally revealed through the process of inquiry. Critique with no substance won't hold up to questioning. With this, the team can then move on to more relevant feedback, without ever having to attack or defend anyone's point of view. By not asking questions here, however, the designer could end up with terrible feedback and a design review that makes them look under-prepared."
        },
        {
            "title": "Figma VS Sketch",
            "date": "Fri Sep 30 2016 11:19:36 GMT-0400 (EDT)",
            "text": " With the limited time I had with it, I can already say with confidence that it's far more polished and production-ready than in my first experience with Adobe XD. It also has three invaluable features that set it apart: real-time collaboration, vector networks and version history. It can handle dozens of designers working on the same document, at the same time without breaking a sweat. Last but not least, this tool is really fast, easily handling 20+ Artboards in a single document.People will inevitably compare Figma to Sketch, so as a long-time user of Sketch, I'd like to share my experience, following a tradition that I started 3 years ago.I was skeptical at first because Figma is a browser-based user interface design tool, but now I'm convinced that there is a future in this area. Everything is extremely responsive, works as expected and the software is almost every bit as powerful as its native counterpart Sketch, minus features like Symbols, Overrides and Plugins. Every document and version exist on their server, making the task of iterating effortless and worry-free. You can still save your document as .fig to make it downloadable. Like this, you can share your Figma files with others.By default, Figma uses Google fonts (a free library of 800+ fonts), but you can also add your own by installing an add-on. They even included the hugely popular FontAwesome. I think this is an incredibly smart move, since collaborators won't need to download extra fonts when they jump in.For many teams, this is a game-changer. Being able to design with a fellow designer, engineer or client in real-time will save a ton of time in both execution and communication. Although not every project needs collaboration, it's good that the possibility is there.You can quickly work alone, then invite others whether they're signed up or not to edit or view-only your design in progress. The advantage of a browser-based tool is that the recipients won't need to install anything at all, or even own a Mac to participate. Figma works on Mac, Windows, Linux and on mobile devices (viewing only). I can't overstate how this will completely change team dynamics and allow true collaboration between designers and developers. Anyone can just come in and check all the specs: fonts, colors, sizes, distances, etc. Developers can benefit from inspecting the constraints and how the layouts adapt to multiple screens.The versioning is much more visual in Figma, allowing you to quickly compare between versions. It's a lot more pleasing to use than Sketch's macOS native versioning, which feels slow and over-the-top. While they both have Autosave and version history, their execution is completely different.In Sketch, it's slow to navigate between each version. Often times, designers disable this feature because it eats too much of their disk space.The comments feature is built-in. Team members can pin comments to your designs and you'll receive notifications when there are new comments or replies. Once you're done, you can click \"Resolve\" to hide the thread.In Sketch, you can add comments by downloading a plugin or use the excellent Zeplin for a more interactive solution that includes specs and assets delivery.Zeplin is also browser-based, so it works for Mac/Windows.Another Sketch plugin worth noting is Craft from InVision, which allows you to design with real data. You can quickly generate names and photos from presets, Websites or APIs.If you put Sketch together with Craft, InVision and Zeplin, the package suddenly becomes a lot more attractive for comments and prototyping.Vector Networks is groundbreaking. You can move the lines instead of the vector points, and all the connected points will automatically follow. That's because instead of having just a beginning and an end point, you can connect multiple vector lines in Figma, creating a web of vector points. It's incredibly intuitive once you start using it.Vector Networks introduced by Figma.Sure, it's still missing things like Scissors or Rotate Copies, but for most vectors, I believe that Figma is easier to use and Vector Networks can lead to interesting results.Figma was able to import Sketch files extremely accurately. Every Artboard, Groups and layers were left intact with their exact names, grouping and properties, including multiple borders, shadows and effects like Blending modes and Background Blur. Because of this, I'm inclined to say that using Figma as an extension of Sketch or vice versa is not a far off idea. You can basically import any existing Sketch work, resource or vector and start from there. The fact that they don't support Photoshop files (yet) speak volumes of the level of compatibility that it has with Sketch versus Photoshop.Strangely, I couldn't copy and paste vectors from Sketch to Figma, but I could drag and drop an SVG file directly into an open document.I was even able to import the extremely detailed vectors from Angle and got a fairly impressive result. Sure, the gradients and shadows aren't as good-looking (sometimes even missing), but all the shapes were there. This is a big deal because you can use virtually any Sketch UI Kit in Figma.You can download the desktop version, but don't expect a native experience. It's basically just a Web wrapper. Still, unlike the browser version, the keyboard shortcuts won't interfere with browser's. For example, CMD + 1-9 switches between browser tabs, but in the Desktop app, it switches between documents. You also get rid of the extra browser chrome.Adaptive layout is an indispensable feature for modern design tools. Designers have to deal with an increasing amount of device resolutions. It would be silly not to be able to adapt a design from the iPhone 7 to 7 Plus just by resizing the Artboard.In Figma, you set up the constraints by pinning against the borders, or setting the element to center. It's essentially like Sketch's Pin to corner and Resize object. I have to admit that Figma's version is more visual and intuitive to use while Sketch has more options like Float in place.Is Float in place any good? Yes, if you want the elements to keep the same proportional distance and size between each other.Handling dozens of Artboards is a breeze in Figma (but your fan may start kicking though). Those who complain about Sketch's performance may find better luck here. Seeing that it's browser-based, the entry point is much lower for practically anyone owning a desktop, laptop or mobile phone. As a matter of fact, those who long wished for Sketch to come out in Windows finally have their answer.The user interface is almost an exact replica of Sketch, down to the tiniest details like the names of the tools, keyboard shortcuts, the Artboards and Groups, or the Export tool. Don't get me wrong, this is a GOOD thing for users. It just means that Sketch has set such a powerful standard that both Adobe XD and Figma have no hesitation following.Sketch is like the \"iPhone\" of design tools, in that most new tools will copy its standards, add a few twists, but years down the line, they'll mature enough to be truly unique on their own. In the end, users win the most as they get more choices at the highest standard. In other words, they're no longer stuck with Photoshop for UI design, the same way they were stuck with dumb smart phones with clunky keyboards. Of course, I don't mean this as an insult to Figma or Adobe. They're smart to answer the modern designers' needs in a way that don't confuse them, making their transition as smoothly as possible. To be fair, a lot of these standards came from the Mac and Adobe's own Illustrator and Fireworks (RIP).I think the answer is a resounding yes. You don't need to learn a new tool, because it feels and works like Sketch. For me, switching between these tools felt completely natural.Both tools can reinforce each other, meaning that they can fulfill different needs as you switch between Mac and Windows, iOS and Android, home and office. I'd choose Figma for its real-time collaboration, multi-platform support (Windows, Mac, Linux) and Sketch for its platform maturity, true native experience, and its excellent plugins and resources. In term of features, I think both will eventually catch up to each other (Real-time Collaboration, Vector Networks, Comments versus Symbols, Overrides, Plugins).Figma is totally free until the end of the year, so give it a try. Browser VS NativeReal-time collaborationVersion HistoryComments SystemVector NetworksImport from SketchThere's a Desktop-ish appConstraintsPerformanceThe User InterfaceShould you use Figma?"
        },
        {
            "title": "Four Things Great Designers Care About",
            "date": "February 29, 2016",
            "text": " There are lots of debates and discussions about what makes a great designer. Should you be a jack-of-all-trades or specialize in one domain? Do you need to know how to code in HTML? What is a full-stack design unicorn, and how do I become one?Whether you're a seasoned professional or a new graduate, questions like these can be difficult and confusing. Luckily, there aren't any wrong answers, as each design role requires different skillsets. But while art directing an ad campaign may take different skills than designing an airport's check-in experience, all great designers care about four main things.We make things for people, and those people aren't us. Because we're making stuff for others, we need to care about and understand them.Behavioral science (e.g. psychology) is intellectual and teaches us how to conduct research, design experiments, and observe people. These tools are rooted in the scientific method and help us collect information about people in structured ways.Actors rehearse, painters sketch, and great designers prototypeEmpathy, on the other hand, is emotional. Feeling what others feel gives us deep insight into what they need. Empathetic design techniques are rooted in art and drama, and they inform our design intuition. For example, the fitness trainer Drew Manning gained weight for six months and then went through his own fitness program. The process opened his eyes to the emotional challenges his clients face, giving him a richer understanding of their experiences.Thankfully, we don't always need to actually become our users to feel what they feel. Our brains are wired for empathy, and there are to improve our empathy skills. For example, taking acting classes can help us open up to others' experiences. In addition, practicing mindfulness (yes, including meditation) actually increases the density of the areas of our brain associated with empathy.While caring about people motivates us to create, a sense of craft motivates us to create well. We give form to our ideas and iterate on them, while paying attention to every detail.The exact skills needed to perfect your craft differ, depending on where you work and what you make. An architect creates models to give form to a building's design, while a visual designer might create style tiles to give form to a brand identity. Meanwhile, an aircraft designer might test a 3D-printed model in a wind tunnel, and an interaction designer might test an interactive app mockup with users.But how do we prototype something non-tangible, like a health intervention strategy or a value proposition? Service designers, for example, role-play scenarios, create videos, and carry out concierge tests. Indeed, one of our designer super-powers is, to paraphrase Sabrina Pasterski, spotting elegance in the chaos. Craft then allows us to get that elegance out of our heads and into the world.Our passion to create often comes with an eye for detail, and behind every design detail lies a decision. But many of the decisions we make in life are arbitrary. Do I wear the blue shirt today or the black one? Should I walk on the left side of the street or the right? Those little decisions mostly have such a small impact on our lives that we don't really notice or mind either way.While we craft and design, however, our decisions have more impact. Dieter Rams' eighth principle of good design is \"Good design is thorough down to the last detail.\" Nothing is left to chance.We can help ourselves make choices mindfully by setting a clear vision for any project, which in turn drives our rationale. This starts with understanding the needs of the people for whom we create (we care about them, remember?) and our own objectives. We can articulate our vision with requirements, user stories, personas, and roadmaps. And, because we designers don't work in a vacuum, articulating our vision helps us communicate it to our teams and stakeholders.Once we have a clear vision of where we're going and how we want to get there, it can serve as input for things like experience principles and design guidelines. Following these heuristics keeps our decisions focused, and formalizing them helps different team members work toward the same vision. Indeed, true greatness can only happen when everyone involved buys into and is inspired by the broader vision.Another great thing about understanding why is that it helps us stay authentic. On a personal level, authenticity is about doing what we believe in. On a design level, it's about making sure the things we create actually do what they need to do.The key component to authenticity is honesty: be honest with yourself and honest with the people for whom you create. This honesty is about making choices, especially when it means giving something up. For example, on Black Friday in 2015, the outdoor gear retailer REI closed its doors and gave its employees paid vacation so they could go outside with friends and family. The company's choice sends a powerful message, especially because they gave up a piece of the $1.8 billion in Black Friday revenue.On a design level, honesty is making choices consistent with your vision and rationale, your why. For instance, the folks at Fairphone, an ethical smartphone maker, give up certain design luxuries in favor of their mission for fair electronics. They invest time and resources into designing a phone that's easy and cheap to repair. In doing so, they give up potential revenue from people replacing broken Fairphones, because the company wants to reduce e-waste. They also spend more than their competitors on making their products, because they source conflict-free minerals and work with ethical manufacturing partners. For Fairphone, meaning lies in the company's ethos, and that shines through every millimeter of their product and brand.Great designers care about People, Craft, Why, & Authenticity. We care about helping people by creating wonderful things, while understanding the meaning of those things and who we are. As long as we focus on the important stuff, the rest will fall into place.How do you feel about this list? Feel free to write an honest comment!Special thanks to @MariePerez for the structure and inspiration for this post.Looking for more info? Here are some great places to start:Emotional Design: Why We Love (or Hate) Everyday Things - Don Norman on the three levels on which we experience thingsMade to Stick: Why Some Ideas Survive and Others Die - Chip and Dan Heath on how to help other people remember what you sayWhat Makes a Great User Experience Designer - Whitney Hess on the same topic as this postTen Principles for Good Design - Dieter Rams' design principles, which still hold today Image of Ant-Man's Airplane by Stuart Rankin.Great Designers Should Know How To Format An Artical.Great designers learn how to spell."
        },
        {
            "title": "Get the most out of your research with storytelling",
            "text": " The job of research is to distill complex problems so that your team understand the what, the why, and the how of the problem at hand. Yet when presenting complex-yet-eye-opening data to colleagues, a tidy 10-page report can fail to elicit the right reaction. That's because when it comes to sharing research with your colleagues, presentation matters. The right presentation can transform something that sits on your colleague's desk collecting dust into insights your team can really empathize with. And one of the best ways to present strategic, complex, controversial, or high-volume data is to use storytelling. Stories are a people-friendly way of sharing and understanding complex data. If you're working with a team that has diverse skillsets and varying technical knowledge, storytelling is a powerful tool. By presenting your project as a story, you not only make your data easily comprehensible, but you immediately established common ground for your team to work together on. That means more participation and collaboration from the entire product team. If you want your team to actually remember your insights, stories will help. In fact, it's scientifically proven that stories are easier to remember than facts, meaning your presentation will have a lasting impact on the team. So how can you use data to tell the most impactful story?Firstly, you first need to understand what your key takeaway is. When the presentation is over, what insights should the audience be left with? This will be the anchor to your story. When you're sifting through a pile of key insights trying to find your anchor consider two things: the prominence of the insight in the data, and your audience. The best anchor will resonate the most with your audience and will either be:Once you've found your anchor, you can use the rest of your insights to thread together the presentation in a way that supports it. Looking through your insights can be intimidating. Often there will be many insights that can serve as anchors, and several ways to weave your story together.When you're starting to craft a story, using a process to develop it is key. Most people are eager to jump into creating a presentation so they can share their insights, dumping data into Keynote before knowing the story they're going to tell. This can actually slow you down, and complicate your storyline.A great trick to quickly nail down your storyline before you sweat the details of a digital presentation is to create your high-level presentation with Post-Its. Each Post-It serves as a slide. You don't have to have the final content decided at this point, but each Post-It should capture the main point of each slide. As you start to flesh out your story, move the Post-Its around to make sure the story you're telling makes the right point in a concise and coherent way. When you're happy, read through the headlines of each Post-It. If you're not getting hung up on the order the information is presented, your high-level presentation is done. Once the story makes sense, scan through and highlight anything particularly complex, anything that uses multiple pieces of data, and any place where your audience might get lost. Storyboarding your presentations first is a great way of making sure you're making the right point before we go on to sweat the details of a digital presentation.Visualizing insights, while intimidating to a lot of folks that deal with data, is the best part of the process once you get a handle on it. Firstly, decide what type of visual will be most impactful for you to use. An evolution warrants a timeline, a comparison can use a Venn diagram, whereas showing an opportunity space would need a two-by-two matrix.A timeline can easily show how something changes as time goes on.A Venn diagram can show a comparison between multiple objects.A two-by-two matrix can clearly show where the opportunity space is.Once you've picked out your visual, it's time to put pen to paper and start sketching (yes, real pen and real paper). As you're sketching there are a few things to keep in mind. It often takes me 2-3 quick sketches before I decide on the visual I want to use, but sketching them before I create them digitally saves me hours of time.As you're doing this, you will notice that even simple visuals have multiple pieces of information your team will need to understand. Even with a visual that makes sense, this can be a lot for someone to take in when it's the first time they're seeing the information. So once you've created a visual that matches your storyline, deconstruct it. Breaking your visual into multiple pieces will leave you with a visual that's crystal clear for your team to understand. Deconstructing your visual into individual elements can help you identify additional pieces of information your team will need to understand the larger insight. With a solid diagram sketched out in story form, you can move on to making your digital presentation. Start by creating your final visual first, making sure you leave room at the top of the slide to add a title. When you're happy with it, duplicate the slide and start to deconstruct the visual. This will ensure your visual is consistent in size, colour, and positioning from slide to slide. When your visual story is in place, it's time to add a title to each slide. Rather than simply describing the visual itself, add active titles. Active titles add all-important context as you move from slide to slide. With titles and diagrams finalised, the last step is to flesh out the presentation as you normally would. Active titles can support your story and bring visuals to life. It also means that anyone at your company can reference them at a later date. While it's less time-consuming to compile a report, telling a story transforms work from being interesting to observe to being impactful and actionable for the whole company. A story is something everyone can have lasting impact long after the presentation is over. If you're a researcher, data scientist, or even a marketer, telling a story with the insights you've uncovered can give your work the power to impact the entire company at any point in time."
        },
        {
            "title": "Getting Started with Wireframes",
            "date": "Mon Apr 18 2016 04:45:41 GMT-0400 (EDT)",
            "text": " Following up on my tutorial 5 steps for a successful website design that walks you through 5 essential steps of a website ‎design process to boost your productivity, I will thoroughly go into detail with the 3rd step: wireframes.This guide will cover what you need to know about wireframes, why and how you should use them in your workflow.Wireframes are invaluable in keeping everyone on the same page. Developers use wireframes to get a clear picture of the elements that they will need to code, architects present plans before building a house, business analysts use wireframes to visually support the business rules and interaction requirements, business stakeholders review wireframes to ensure that requirements and objectives are met through the design.Most successful designers wireframe their project in one way or another, whether by sketching it on a piece of paper or laying out detailed structures.In short, everyone uses wireframes. I do, and throughout this post I'll explain why you should do too. Some people think they're time consuming, why bother create more work? But in fact, it's the complete opposite. They actually save time.A wireframe is the blueprint of your website. The main purpose is to show the client how the website will be structured before designing. Remember, clients are usually busy running their own businesses. They want something clean and readable to quickly get up to speed on what they've missed.Let's suppose you didn't start with wireframes. Instead, you jumped into Photoshop and created a nice well designed homepage. The client liked it in general, but he didn't like how the \"about\" section is on the left side, he wants it on the right side. Also, he didn't like how the navigation bar - that you've been working on all weekend - looks like. You'd have to make the corrections, move every layer, one by one, which requires lots of work and time. Here's the problem, you started off on the wrong foot.By laying out a simple website structure, you can quickly change any element placement to meet your client's needs. You can clarify exactly what needs to be on the different pages of your website, even if it's a quick sketch on a scratch paper.Before going any further in details, let's get things straight. Wireframes, mockups and prototypes are often used interchangeably, yet they are not the same.Wireframes A wireframe is a low fidelity representation of a web page that shows the basic elements of the page. They are not interactive, and do not show much detail, but create a simple design that guides the project. Once it starts becoming interactive, it becomes a prototype.Prototype A prototype is a more detailed interactive representation of the final product. Prototyping means building a model of the website before you build the actual website. Prototyping allows you to test the final product before spending time or money on code.Mockups A mockup is a static design representation in which the corporate identity is applied through color, typography and visual style. Mockups are more easily understood than abstract wireframes while being quicker to create than prototypes.Here's a nice table that shows wireframe, prototype & mockup differentiation. (Source: www.quickfocus.com)Think about general elements when you plan every webpage: header, footer, sidebar and content areas. Then, think of additional elements: navigation bars, widgets, buttons. Once you have an idea of the elements, you can now start creating your wireframe.All elements in the wireframe are usually displayed and organised to consider the following:Content What will exactly be displayed in this page?StructureHow will the elements of this page be put together?Hierarchy How will these elements be displayed in positioning, labelling and size?FunctionalityHow will these elements work together?BehaviorHow does these elements interact with the user?The above graph shows the layered elements of a web page. (source: Jesse James Garret, The Elements of User Experience)Graphic elements Wireframes are not supposed to include design elements, as this will distract the purpose of the wireframes. This is why they should be created without the use of colour, graphs, or typography.Lorem ipsum text Dummy text should not be used in a wireframe. Instead, use real text for clarity.Actual design Wireframes shouldn't define the final look of the page. It should show how the site will work, not how the site will look like.So what types of wireframe should you build? Do you need a hand drawn sketch on a piece of paper? Or a somewhat more formal, cleaner plan? It all depends on the purpose of your wireframe.Basically, there are two types:Some people think a sketchy type of wireframe is somehow more attractive to the client, it shows them that this is an ongoing process, that they can criticize and freely manipulate the elements and placements.The digital type gives a more formal and sophisticated look. This one goes one step further by using some basic design elements through the wireframe. It's close to a level of mockups, where it shows the client a sense of what the website will look like, especially for the clients who might have a hard time imagining the finished product with a sketchy wireframe.There are dozens of techniques to create a wireframe ranging from simple sketches to a high fidelity almost finished wireframe.The tools you decide to use will depend on personal preference and project requirements. Some look for simple fast techniques, other prefer high fidelity mockups, even if it takes a little more time from the project scope.Every tool has its pros and cons, there is no \"best\" tool for wireframing. It's whatever you're comfortable using and whatever works for you.Illustrator is created for drawing, and inDesign is a program for page layout and documentation. So technically, these two combined together can make a great wireframe tool.Why both? First, illustrator doesn't support multiple pages and master pages, but inDesign does. Also, inDesign doesn't offer drawings and icon libraries, but illustrator does.Therefore, by using Illustrator for the majority of the screen illustrations, you can use InDesign to pull everything together and add behavior notes.Balsamiq Mockups specialises in creating sketchy wireframes. It's simple to use, intuitive and can get you up and running in no time.Although it's not free, it does have a free trial version.wireframe.cc is a very simple and minimal wireframing tool for websites and mobile apps. It also has a 7 day free trial.If HTML and CSS are in your skill list, then you can set up some code and link up your images. It's an inexpensive tool to wireframe your website and even offers a range of frameworks.Creating HTML wireframes may add time to your process from the time you begin wireframing to the point when you have client approval. However, it may well reduce additional communication and work after your wireframes are approved, since the blueprint has already been done.There are lots of other good wireframes tools on the web, such as: uxpin, OmniGraffle, MockFlow, etc…No matter which technique you choose to wireframe, you'll learn that wireframing is a crucial part for your design workflow. As long as you give your client a visual structure from the beginning, any discussion or misunderstandings that might happen during your project scope can be solved by referring back to the wireframe. You'll present a professional image to your client.Also, by starting with wireframes, you'll be much more confident when you actually open your photoshop file and start designing.In my next article, I will guide you through a tutorial for your next step: style tiles.Stay tuned! Originally published at www.codementor.io. Why should I use wireframes?What happens if I don't use wireframes?Wireframes vs. prototypes vs. mockupsWhat to include in a wireframeWhat not to include in a wireframeSketchyDigitalIllustrator and inDesignBalsamiqwireframe.ccHTML/CSS DefinitionUses of wireframesElements of a wireframeTypes of wireframesWireframe toolsConclusion "
        },
        {
            "title": "Good UX designers must be fighters, because compromised designs are not good designs.",
            "date": "Wed Feb 10 2016 23:35:43 GMT-0500 (EST)",
            "text": " Disclaimer: I'm a designer at Google. This article represents my own opinions and in no way is it affiliated with Google or the greater Alphabet Inc.I dream stuff up and turn those dreams into things you use every day. To do my job well, I have to fight with people. A lot. If I don't fight for what is right, my beautiful dreams turn into your worst nightmares. Because that's just how it goes.I don't consider myself to be a particularly talented designer. But I am successful. And people often ask me how I became successful doing what I do (maybe they are confused because my designs are largely unimpressive). I'll tell you what I tell them, and then I'll tell you how I do it.I'm a successful designer because I've built a career and a reputation, fighting like a dog with a bone to do what is right by customers. I don't drop the bone to make life easier for myself or my team. I don't lie to myself or to others, and I never tell decision makers what they want to hear just to get a promotion or so that I might be liked. I'll resign first, and I have done.It's strange… You'd think that digital products should be designed with the best interests of customers clearly set down as a foundation stone upon which all other product decisions are made. But this is rarely the case, at least in my experience, and I've been doing this for a while.UX designers and Product designers exist because (and I acknowledge I'm generalising here) engineers and developers largely tend to struggle with processing information from an alternate human perspective. In my experience, it's rare to find an engineer who can force themselves to forget what they know about their products or interfaces, to the extent that they can put themselves in the shoes of ‘the other.'You are a designer. And you can do this magic thing. This magic thing called empathy.You serve a faceless and nameless mistress. She is one that never has the opportunity to thank you for your hard work. She will never know your name, for she is everyone, and she is no one. She demands only one thing from you; That you fight for her… relentlessly. That you give her what she wants, at all costs.Organisations are inclined by default to mitigate the risks associated with product development by diversifying the number of people who are responsible for making decisions related to the product. This means multiple people are empowered to be involved in how your product looks, feels and behaves. Welcome to the team. But are these people loyal to your mistress? Do they know what she wants? Do they always put her first? Do they think about her, night and day?No. Not usually… It's not their job, it's your job.Teams are made up of people, and people are different. It's not always possible to be unified behind a single vision. In fact, it's almost always impossible because what each of us might want is ultimately dictated by factors related to our past, our personalities, and our uniqueness.Sure, you can try. But it almost never works. We have a name for it in design circles, it's affectionately called design by committee, and it is our kryptonite. Take a similarly feared phrase in engineering circles, Tech debt, and multiply it by infinity, take it to the depths of forever, and you barely have a glimpse of how feared design by committee is for designers.Booking.com is the global poster child for agile design and development and their website is a perfect example of design by committee. Each UX designer is able to dream up an experiment, and is given complete autonomy to change the entire interface at their own discretion. They are paired with an engineer who helps implement the design, and then they run an experiment for a couple of minutes. Globally. They literally A/B test planet Earth. Millions of users see the experiment. And millions don't. After a few minutes, if conversion goes up by a fraction, Booking.com keeps the change. If conversion goes down, they pull it and rollback. The engineering behind this machine is amazingly efficient, incredible even. And while it's impressive, it causes a problem that I believe will ultimately be their undoing: their product is ugly, difficult to use, and inconsistent.To convert to sale on booking.com users must re-learn the interface on a second by second basis while they attempt to traverse sections of the site that have been architected and designed by different people at different times. Interactions like these result in a high cognitive load on customers and cause significant ego depletion. (Ego depletion is a tangible and measurable cost on the brain caused by micro-decisions, subconscious and conscious. It actually affects blood sugar. Pretty scary.)In other words, when using the product, your mistress gets confused, and she does not like that. Not… one… bit…Because they don't owe their success to good design. Booking.com is successful, in my opinion, because of their sales and marketing distribution network. They are the cheapest, globally. They guarantee this by doing deals with hotels all over the planet. We all know they are the cheapest. And Booking.com spends a fortune on ads to make sure that we know they're the cheapest. So as a customer, I have a choice: Pay more and have a lovely designed and beautifully consistent experience, or pay less, and deal with the complex design by committee website that is Booking.com. I don't know about you, but I will pay less and deal with the mess. For now…But how long will it take for another company to come along with a beautiful and consistently designed product that offers me the same price or better? Not long at all…Airbnb has a beautiful and consistently designed conversion funnel. Also known as a website. I feel good when I interact with their product, and increasingly this results in a sale. Without even thinking, I'm able to book a place to stay, and I'm overwhelmed by large and beautiful photos, aspirational colour and typography. It's a pleasure to use Airbnb. Booking.com is a chore that feels like I'm doing my tax return.No. Great experiences cannot be designed by a group because great designs are almost always born from a singular and consistent vision. Sure the vision is iterated, augmented and improved progressively over time with the help of your team. But as the designer, you must be the gatekeeper of any decisions related to the interface. You must decide which pieces of information inform your design to the extent that you would consider making a change to it. And you must decide which pieces of information must be discarded because they do not fit the vision. You are the only person that can do this. And you will be the only person responsible if you fail. You're the babysitter. It's your fault if the kids trash the place and smother the walls in shit.I have a process that works for me and I'll list it here if you're interested. I hope it works for you.When someone suggests that you should change the design, or implement their idea, first:Make sure the other person feels heard, and make sure it's clear that you fully understand their suggestion or idea. So often the fight happens because they feel like you didn't listen. So take all the time you need to listen, and repeat back to them what you heard. Then ask for a day to process it, go through it thoroughly. Make sure you've considered the option fully.*If you can't take a day, take as much time as you can. You don't need to spend the whole day on it, do your other work, but you would be amazed how much this time apart will help to deflate the emotion that so often acts as a catalyst in situations like this. It also gives you time to consider something very important…There is every possibility that you're wrong, and Jimmy might be right, and maybe his idea would make the product better. If he's right, no problem. Change the design and make sure to give him the credit for the idea. But when you're sure it won't work and you've waited a day. It's time to deliver the news.If you don't have data from your own tests, find some elsewhere. Hit them with some statistics. Prove that you did your homework. Name a report or study that might back you up.No dice? They still want a fight?If you have the time, mock up the design and run a quick A/B corridor test. You don't even need real users. Try it on colleagues. It's important that you test with people outside of the team. The receptionist, a colleague from another department etc. Get at least 10 people to weigh in with their unbiased opinions. Take down the actual numbers and what each test participant said and put it all in a report titled:Validating Jimmy's design suggestion.Share the report with the whole team, and thank everyone for coming to you with suggestions and encourage them to keep coming up with ideas. This is a bit of reverse psychology, but essentially people may be less inclined to challenge you in the future, if the outcome to a challenge is delivered as a report that everyone gets to read. Hopefully they won't be too afraid to come to you with suggestions or ideas though, because you showed consideration and took the time to validate their idea. The other advantage of the report is that you can keep it on file for later, to bring to the surface anytime that your design thinking behind this decision is challenged. Following this process can also improve the team dynamic and build trust with developers. Especially if you are receptive and open to feedback that would actually improve your work. You all benefit if the product is awesome.But sometimes, it doesn't work, and you still have to fight.If you're being challenged by a decision maker, do your best to keep it quiet. Go into a meeting room with the person. It's crucial to keep the respect you've earned with the rest of the team intact. State your case. Don't be afraid to refer to gut instinct, and explain that you believe the most responsible course of action is to test and validate the design options. Explain that you are happy to take full responsibility and pivot if the tests prove that your design isn't working, but explain that you can't take responsibility for the failure of the product if your design thinking was compromised at this point in time because you were not able to do your job properly.Consider again that you might actually be wrong. There is a chance you are, all things are possible, and admitting that you made a mistake to yourself, and to others, is not weakness or failure. As a designer, it's actually a crucial skill.If you know you are right, and data proves that you are right, and you're still being forced to degrade the design at the expense of your mistress (your customers), it's time to consider how much value you can actually add to the project and the team if you are not being trusted to do your job properly. Also, bad designs stick to you like glue. How will you get another job a few years down the track, if you have to point to a heavily degraded design that you cannot be proud of?You can't pretend that everything is covered by NDA forever. In other words, it may be time to seriously consider looking for another project or team or job.If you are in a tight spot, and you're losing these fights, don't worry, it won't be this way forever. Design thinking is changing on a global scale. I've seen organisations laugh at my suggestions only to see them implemented years later, and years too late. As stated above, when you can't differentiate on price, all you have left is experience. Companies are starting to get it.As designers, this is our time to really make a difference. Don't give up!I hope these tips help you, and if they don't, and you hate me for telling the truth, I'm sorry :)www.andrewdoherty.comwww.linkedin.com/in/ajdoherty So, how to win the fight? But…Thank you… \"Thanks Jimmy, I'd like to take some time to go through this in more detail and to seriously consider your suggestion. I want to see how it will affect other aspects of the product as a whole. Can you give me a day* and I'll get back to you after my analysis?\" \"Jimmy, I wanted to first say thanks for your suggestion, I love it when people get involved in the design process… I can see where you're coming from with the idea, but I've given it a lot of thought and played with the design to try to make it work, but I don't agree it will solve the design problem in a way that is consistent across the entire product without impacting our users in a negative way. It's like solving a rubik's cube Jimmy. Your suggestion gets one side all sorted out, which is great, but it messes with the other 5 sides, and I have to solve the whole thing.\" \"Jimmy, here's some data that helped me make an informed decision about this. Here's a report you might find interesting. You can also check out this link, this link and this link and you'll see why I believe that my design solution is the right fit for this problem space and why your suggestion won't work in this instance.\" \"Thanks boss, I had concerns about this design decision too at first, so we did a quick round of testing to make sure we were on the right track. Jimmy helped me with it, he was great and his ideas really helped solidify the design thinking behind our final design solution.\" \"This is what I do Boss. I speak on behalf of our customers. I represent them in this room, in moments like this. Everyone is good at design in one way or another, we have really talented design thinkers on our team. Jimmy has some great ideas, but I'm here for conversations like this, where I must inform decision makers like yourself, with all due respect, that they are wrong. What our customers want, won't always be the same as what you want. Please, let me do my job, and trust me. I only want what is best for our customers. I think the best course of action is to validate with tests and get some hard data.\""
        },
        {
            "title": "Google's Immaterial Design",
            "date": "10.05.16",
            "text": " READ MORE\nHow Can Google Get Away With Making A Phone That Looks Just Like An iPhone?\nThe Brave New World Of Google's Industrial Design\nGoogle's Quest To Design A Typeface For Every Language On EarthIn 50 to 100 years, I firmly believe that your home could be made of Google.I know, that sounds weird. But it's also the ultimate manifestation of Material Design, the design principles Google revealed just two years ago. On the surface, Material Design was a new paradigm for interface design: UI carved out of real objects, casting shadows like real paper. But the philosophy and motivations ran deeper-the design team, at the time, told me that they imagined Material Design as a path to shape-shifting interfaces that could transform to add a room to your home or a screen to your wall. In this future, they suggested, Google could be the intersection of digital infrastructure and physical infrastructure. It wouldn't have to take over the world anymore because it literally would be the world.But Material Design wasn't even an afterthought at the company's hardware launch this week. Instead, Google recast itself as a distinctly intangible digital assistant with no face. And to support that vision, it introduced three new products, all with Google Assistant at their core. It's Google as an interaction, rather than an interface-a friend you bring along on a trip just because they're good with directions and can always find a decent bar, an omnipresent third wheel that's quick with a GIF.This shift shows us how the company's work in AI is leading its products away from screens and materials, and toward conversational interactions with machines themselves.To be clear, nothing has happened to Material Design. It's still the reference spec for Android app developers and Google's own interfaces. And having redesigned using these guidelines, Google products across the board look better and more resolved as a single brand.But the Google Assistant we saw on stage on October 4 is also its polar opposite. It's Immaterial Design, if you will. It's not typography or layout or animations. It's what Google calls \"Conversational Actions.\" Quite literally, these are conversations pre-scripted by Google (or third parties who can use its API). You say \"Okay Google, order me an Uber,\" and Uber has common questions and responses at the ready-\"Where should I pick you up?\" \"Where are you going?\" \"Do you need an Uber XL?\" With 70 billion points of data of its own, Google Assistant can answer all sorts of questions through a good old Google search, too. Ask how many planets are in the solar system, and it'll have an answer, just like the search bar of yore.There's an army of chatbots coming our way. These branded personalities are designed to become our friends and confidants, all while the brands behind them-whether Google, Amazon, or Apple-elbow to ensure that they're the AI you're screaming at every time you need to check the weather.By controlling the conversation, these companies could benefit by being able to subtly suggest-with the demeanor of a friend-what we buy, where we go, and who we trust. Well, maybe. It all depends on whether users actually buy into this vision of human-machine interaction, and it's not yet clear they will.The entire Valley is making a major assumption: that we'll want to talk to our products. Apple's wireless earbuds will stick Siri right into your ears. Google, too, is betting on this by providing us with spoken ubiquity through the Google Assistant. As hardware chief Rick Osterloh explained on stage during the unveil this week, the company is \"building hardware with Google Assistant at its core.\" Aside from the Pixel phone, which you talk to at any time by saying \"Okay Google\" or long pressing the home button, you can also install a Google Home speaker in every room of your house, creating a microphone/speaker system that will more or less follow you through your life. It's an aggressive trend line moving toward enabling vocal commands everywhere and anywhere.There's just one catch: When's the last time you talked to Siri? If you use Microsoft Windows, do you spend all day chatting with Cortana? I myself have lived with a Microsoft Kinect controlling my TV and Xbox for several years. I loved it at first! Yet now I talk only when I literally can't open an app any other way. Because as it turns out, that third wheel listening into a conversation is often at odds to that second wheel sitting by your side. (In other words, I'd often bark a command right as my wife started saying something else.)Google demoed the example of its Home speaker playing music at a party. What party have you ever been to that you can imagine shouting over, so a cloud-based service can hear you? Just because Google can stick conversational interfaces-and voice in particular-into every device on earth doesn't mean we'll choose to talk to them.The truth is, the situations where voice and chat interfaces don't work probably don't matter so much. Interface design no longer needs to be a zero sum game. New types of interfaces can take over the world without taking over our lives. The iPhone introduced touch screens to the masses, and yet, most of us still use trackpads and keyboards every day. Text messaging has cut into phone calls, but we still connect on voice and video chats. Novel interfaces may tip the scales in how we use software and services, but they don't cause mass extinctions overnight (unless, okay, your name was Blackberry). Heck, some people still fax!Just two years ago, Google's future as amorphous, programmable goo seemed imminent. But that doesn't mean Google can't be other things, too. Our future is not Material Design, or conversational design, or gestures, or computers that read our emotions, or touch screens, or anything else. It's all of these modalities, available all the time, in every single object worthy of a microchip.So I believe that in 100 years, your home will still be made of subtle, reactive material interfaces. But that home will also know how to listen and talk. Because Google will be the most powerful infrastructure company of all time when we can tell it to do absolutely anything."
        },
        {
            "title": "How To Make Your Not-So-Great Visual Design Better",
            "date": "Thu Aug 04 2016 14:07:02 GMT-0400 (EDT)",
            "text": " \"How do I get better at visual design?\"This question comes up a lot. I coach and mentor a lot of students on product design by tutoring for the Academy of Art in San Francisco, reviewing for AIGA's portfolio reviews, hosting interns at Facebook and so on.There's a bridge from a student's perspective to a professional's perspective. For most, it's guaranteed to be a blend of fear and excitement and curiosity, peppered with a lot of questions.\"What's going to happen when I get out?\"\"What kind of design jobs are out there?\"\"What might I be a good fit for?\"\"What if I don't get a job?\"\"WHAT IF THERE ARE NO JOBS?\"\"What can I do now to prepare?\" We recently hosted a critique at Facebook with a student from Cornell, Jon Lee. There's something that I really liked about Jon in our brief interaction: he's self-aware. He already knows that he's got room to improve in terms of visual design. He knows this because he's gotten feedback on this from potential employers, and he - like many other students on the brink of their careers - is curious how his skills will prepare him for a design role. He wants to know how he can get better.Being a solid product designer requires a broad skillset, and having visual chops is a big part of this role, particularly at Facebook. I'm excited that Jon is curious about these skills, and if I were able to pull him aside now, I'd ask Jon the same questions that I ask other students and give him a framework that hopefully will serve beyond this project.Here's a quick look at the designs Jon shared. At this point, he was just beginning to look at visual design.We often refer to visual design as craft and execution at Facebook. In order to evaluate the current state of Jon's work and encourage him towards well-crafted design, I need to ask questions. Inquiry should come before judgement, because it broadens the understanding of someone's intentionality. How do I get better at visual design?Having answers to these posed questions is an excellent place to start. Being a good designer-being a good visual designer - requires intentionality. That means that you're thinking through these questions and answering them as you're making design decisions, not only when someone asks you the question after the fact.The next thing to work on as you answer these questions with intentionality, is to ensure that intentionality is based on solid design principles and research and attention to detail, and yes, sometimes things like style and preference. This can be tricky, because not every designer has these sensibilities or well-founded opinions yet. And that's okay, because the path to improving this begins by understanding that your work isn't quite there yet.Ira Glass has fantastic perspective on this:If you have taste, and that taste tells you that you have room for improvement, you can improve your visual design. How?You observe design in the world and form opinions on what's good and what's not good. You solidify your opinions on foundational design principles.You look at established design systems like material design and Human Interface Guidelines.You practice.You browse websites and apps and Dribbble for excellent design work, and you don't copy them, but you ask yourself why is this working? You search for answers.And you practice.You show your work to people who have the sensibilities-the visual design skills-already, and you listen to the questions they have about your work. (In Jon's case, this is exactly what he did in our Facebook Design critique.) You think about your intentionality behind them, and you find your answers.And you ask yourself questions like the ones we just went through. Now, I could have given Jon reactions, things like \"your styles are all over the place\" or \"that green button feels out of place.\" I could have also prescribed solutions like \"left align all your filter categories and buttons\" or \"make the corner radius of your buttons smaller\" or \"choose a brighter brand color.\" But if Jon wants to get better, if you want to get better, it takes more than polishing a single project.Feedback and mentorship can be very similar; the best development usually comes from asking questions and guiding rather than being prescriptive.Improvement takes practice. The proven ability to execute again and again is what gets students that first design role, and once that first role is landed it's the self-awareness and the progress that point towards a trajectory of growth. What is your type hierarchy?What patterns are you using?How does this compare to existing or established patterns?What are your margins and padding rules?Are your icons clear?How consistent are your design choices?Does everything on the screen need to be there?How would you define your color palette?Is your spelling, grammar, and punctuation correct? Have you considered content strategy?How would this translate to another platform? Have you audited your type styles? I see two casings (Title Case and UPPERCASE), at least three different type sizes, two colors of type, centered and left aligned type.What styles belong with headers? Which ones for buttons? Which ones for body copy? For metadata? I see text buttons of two sizes, two button heights, two casings, and three colors, and I also see buttons with icons. I see two different list styles. One more clearly relates to existing discovery patterns (photo with business name, categories, and star rating) and one that looks like a wireframe (Recent Posts).What is the difference between buttons and lists? On the Profile page, cards, buttons and lists are using the same white background with grey outline pattern. Should they be different? If the selections are toggles, could they automatically toggle on? Are Cancel and Apply necessary?Is Back the same as Cancel? Would an X in the top right corner suffice?I see there's a Reset button without any filters applied. Is it necessary in this state? Could Apply replace Reset?Should the bottom nav stay put in this part of the experience?Do products in the same vertical have parallel patterns? Are any of these useful? I see minimal margins on the Nearby and Profile screens; Filter has much more generous margins.The \"y\" in Nearby in the bottom nav nearly touches the edge of the screen.What is your grid? I see a single seat icon and clusters of 3 and of 6. Is that a count of seats or an approximation or a range? Would there be a better way to represent this? Is this the equivalent of \"good for groups\"? Is there another way to show this?Why is there no iconic equivalent to the opposite of outlet? If something is not important, why would you have to indicate that lack of importance; wouldn't initial results include all available options?Does pie mean pie? Or desserts? Or food? Does the cup mean drinks? Could you assume that every food place serves drinks as well? Are there better groupings here? I see distance using a dropdown while other filtering choices are buttons.Some buttons contain icons and other contain text.One icon uses perspective, while the others don't. The wifi icon has the thickest lines; the outlet the thinnest. Some are pixelated; some are not. Some are black; some are grey. Most of the cards and buttons are using the same pattern: corner radius, outline, color fill, type. Are they too consistent? I see a divider above the search field and dividers under each Availability choice.I see one use of the color green.I see both icons and text in the nav. Are both necessary? The palette is pretty muted. It's warm in tone, excepting a brighter green button. Do you have rules around what to use where? I'm familiar with Nearby and Profile in the bottom nav; what does Add mean? Add what?\"Availability\" is misspelled.Is the word Availability necessary?How does the flow of the page \"read\" (be it through words or visuals)? Your page title is Filter, and your section headers are Distance, Seating Availability, Wifi Availability, Outlet Availability, and Food/Beverage Availability. How would you describe what you can do on this page to a friend? Are these constructed in the right hierarchy? Are they named correctly? If you designed this for an Android device or for desktop, would you make the same above decisions? What design decisions would you make differently?"
        },
        {
            "title": "How To Take Charge Of A UX Kickoff Meeting",
            "date": "April 14th, 2016",
            "text": " I once worked with a digital agency that didn't know how to hold a kickoff meeting. And they didn't even know that they didn't know. Weeks into every project, they'd simply find themselves frustrated over how they'd ended up in a position of following rather than leading.They would fight to get their good ideas out the door but end up on defense all the time when their clients came back screaming with arguments based on whim and vapor. The agency just couldn't figure out how to establish itself as the UX leader of its projects, despite being hired to play exactly that role. I'm not even sure they recognized what it meant to lead.Some think the notion comes off as a little too command-and-control and would prefer something more collaborative. This outlook is a common effect of dealing with bad leadership4. You get jaded. You get convinced that leadership is a problem. You want the world to be flat and to lack job titles.That's sweet. But it's a joke.Leadership is not a dirty word. It's not about ditching collaboration. It's not about commandeering the room and shelling out mandates. Leadership is a natural, normal human craving. For a group to succeed - for design to succeed - someone has to establish a vision, a goal, a destination, and help the team get there - inspire the team to get there.In-house teams often suffer unease over the idea of offending someone through so-called leadership. In fact, if your \"clients\" are internal, you might have an even harder time getting out in front of a project than a consultant. I understand that. You worry for your job. You worry about upsetting people you have to work with over and over for months, maybe years, to come.Let's make this better. Let's look at how to run a kickoff - how to get yourself into a positive position, where you can steer the ship, rather than crash it into the dock.The kickoff is where it can all go wrong. You haven't even started yet, and you're already stuffing yourself into a position to fight for every recommendation before you even make one.Literally everything that happens after the kickoff is contingent on what you do during it. For the wealth of information online about how to wireframe, prototype, code and run a usability test, much less is out there to tell a designer how to run a useful kickoff meeting. Even less focuses on the truth about them.Kickoffs are for far more than laying out a project. They're for putting yourself into a leadership position.Here's how you do it. First, the logistics, then the clincher.As I explained in my Field Guide to UX Strategy75, it starts with a project inquiry. Someone comes to you and says, \"We're launching an app,\" or, \"We're having trouble getting to the next level,\" or even something specific, like, \"We want to increase our sign-ups.\"You think you can help - it falls under the UX purview - but first you have to get a whole bunch of information. So, you set up a phone call or in-person meeting. You check out the current website or app, if there is one. You check out other websites like it. You go where Google takes you.Beyond that are the simple details of scheduling how and when you'll meet, whether by phone or video or in an office or coffee shop someplace. (This might be the first conversation you have with a client, or you might schedule a more formal session to meet with the whole team and start thinking through an approach to the project.)This is enough for now. The first thing you're going to do is ask a lot of questions that Google can't answer.This is the secondary purpose of the kickoff, right behind establishing your leadership position.Essential, yes - you can't design a thing without answering all of these questions. But you also can't design a thing without putting yourself in charge, and you can always ask questions another time.The gist is this: You need to know what they do, why they're doing it, what they've done, why they did it, what happened, what they hope will happen next, and who's around to do it.The reason for being.This bit, pending some research, will feed directly into your UX strategy, which in turn will feed into all of your design decisions. So, yeah, pretty important stuff.It's not even a question, actually. Just say it:So, tell me about Acme Widgets.This usually prompts a decent history of the company, as well as an introduction to the product they want to create or improve. Rarely, though, in the case of startups anyway, does it answer this:How do you make money?This is partly because not a lot of startups have the answer just yet. It's partly because they assume you'll know when a website is ad-supported. It's partly because, as staff, they think a lot about the currency their service deals in but know next to nothing about how to get more of it - which, let's face it, is why they called you.The answer to this question is a major factor in your future decisions. Asking this question not only gives you something to focus on, but lets the stakeholders know you're focused on the most important of their concerns.Don't let them get away with cursory explanations. You need to know how this product should fit into its users' lives. How it should compare to its competition. Is it different because it's cheaper? Or because it does a magic trick no one else has pulled off?This is the heart of a good user experience vision. The \"user\" part is just as vital as the business' goals.If they haven't specified already, you'll need to ask about the current status of the website or app.So, is this new section of the site up now? In the works? Are we starting from scratch?This is where you find out about one of the two biggest constraints of every project: time and money. In answering your question, the stakeholder will likely tell you they're three weeks behind, that they've just hired their second programmer after the previous one quit, and that they've been planning to launch at the end of the month (which rarely goes as planned).Nothing complicated about this one. But asking this question can help put you several steps ahead:What statistics and interviews and other research has been done already? What do you have now that I can review to get up to speed with everything you already know?Follow that up with questions like these:What approaches have you taken previously?What has worked?What hasn't?How did you make those decisions?How did they turn out?What do you think went wrong in that case?Not only will questions like these help to familiarize you with the full scope of the project and its history - likely revealing a whole bunch of politics and skills limitations you need to know about - but it means you can start out by making decisions no one has made before. You will not be recommending things they've already thought up. You're past that point.They've probably filled you in a bit already on where they'd like to get to, but getting there means being specific. If it's an improvement project, don't rest on answers like, \"We just want traffic. As much as we can get.\"Put numbers on it. You can increase a conversion rate by 5%. You can decrease the bounce rate by 10%. Increase sharing. Increase unique page views. Increase completion rates. Decrease completion time. Increase the number of tasks completed per visit. Increase visit frequency. All by some percentage.If you get specific about these numbers, then you can have a real conversation about what will be affected, as well as about the philosophical considerations. For example:Anything you do will have an effect, and the good can bring some bad along with it. Pay attention to all of the effects. Detailing what the company wants to achieve lets you sort out what unintended consequences might come up afterward, so that you can decide whether you really want that or not.The fewer the number of people involved, the speedier the communication will be. The fewer decision-makers in charge, the faster the decisions will be. It's time to find out who's on the team and who's an obstacle to it.For a typical UX project, you want as few decision-makers as possible. Ideally, it's whoever's in charge and maybe one other person. Determine who these people are and how you'll communicate most effectively.Here are other things you want to know (and take notes because you'll be talking to all of these people at some point, and each one can affect your decisions):Set the expectation right from the start that the UX decision-makers should be two to three people at most, including you (or a senior-level designer, like a vice-president of product design), and that this will speed communication along. Decide how you'll communicate, how frequently, when to have check-in calls and so on, so that everyone is comfortable.During the strategy definition phase, keep everyone else informed as needed, and not one bit more. You want their opinions and insights - that's what stakeholder interviews are for - but you do not want 10 people chiming in on every decision you make. There's no time for that, plus you'll risk design by committee.Establishing the decision-making crew will prime your clients and stakeholders to let you lead. Which brings me to my last point.This is the clincher, the primary purpose of the meeting, the part where you get to lay out how you'll proceed, how you'll get them through the process, what your part is, what their part is and what happens next. Basically, this tells them that you got this.The key is to leave no doubt here that the stakeholders are in capable hands. Your relationship will be collaborative, for sure, but you are leading this thing.What you say here depends entirely on how you've decided through the course of this conversation to approach the project. You know what's been researched, what they've tried, how you can learn more - generally, where things are at. By now, you should have a good idea how to arrange a stack of your favorite research and design activities to get to the answer you both need, and to a design you can be proud of later.It goes something like this. Adapt accordingly.Well, here's how I'd like to approach this. We already have a good amount of stats from existing users and some interviews with power users, so I'll start by getting familiar with all that.Then, we'll talk through which users might be good for additional information, and I'll set up interviews with them. From there, we'll talk again about any disconnects or similarities we see that could affect the overall vision of the product. I'll draft a version of a product vision statement, along with some design principles that I think will be important for making you competitive, and some success metrics we can use to track how the design is doing over time.Heads up. This next part is key.Next, I'll work on some initial wireframes and prototypes to get a direction going. I'll post each version of these in the project management app so that we can discuss and agree on them while I start on something else. These will be low-res at first to make sure we have it right before going further. I'll go over each one with you and explain each recommendation I make, but if you have questions beyond that, definitely let me know so that we can think through them together.See what happened there? You set the expectation that you'll be making recommendations, not taking orders. You made it clear that you'll be discussing and agreeing on ideas before anything gets refined.You are now in charge.This little difference in mindset is all it takes. From now on, demands can be fought off by referring to the kickoff meeting. And they can be prevented altogether by sticking to that last part: presenting and explaining your work, rather than letting the stakeholders view it and get back on the offense when you do something they don't like.Do this here and now - during the kickoff, when you have the best chance of establishing your leadership - and you'll be singing all the way through the project.You know what happens here, right? It's not a question. It's a statement.Here's what we'll do first. You send me the research you mentioned, so that I can look that over, and then I'll check in with you tomorrow with my responses to it and to coordinate the first round of user research.And just like that, you're in the lead.Read Robert Hoekman Jr's newest book, Experience Required6 (New Riders), about how to become a UX leader regardless of your role. Robert also recently authored the free Field Guide to UX Strategy75. The free ebook spans 7 chapters based on his 15+ years designing experiences for companies like Adobe, Automattic, Dodge, Intuit, Rackspace and others.(cc, jb, al, il) ↑ Back to top Tweet itShare on Facebook"
        },
        {
            "title": "How to apply a design thinking, HCD, UX or any creative process from scratch",
            "date": "Thu May 19 2016 16:33:24 GMT+0200 (CEST)",
            "text": " This how-to article aims at providing designers, creative thinkers or even project managers with a tool to set up, frame, organise, structure, run or manage design challenges, and projects: The Double Diamond revamped.In order to do so, I have come up with an own and a revamped version of the Double Diamond process. In case, you are familiar with the British Design Council's Double Diamond, IDEO's human centred design ideology or @d.school's Design Thinking process you might be familiar with the majority of approaches, steps and tools in the following paragraphs of this article.According to Don Norman, the human centred design process starts with a good understanding of people and the needs that the design is intended to meet. Various companies, organisations and educational institutions have taken on this challenge and have therefore come up with models in order to provide structure to the process of human centred design or design thinking.When you cook a chilli con carne for the first time, you might start off with a recipe that appeals to you. Once you have burned your tongue a couple of times, you either go easy on the spices, or you even spice it up as you can't get enough of the burning. Generally speaking, you tweak the original recipe to your own needs and taste.That's what I have done to the design process during my previous months trying to master Digital Experience Design at Hyper Island.As a starting point for my dish, I am using the Double Diamond process, originally released by the British Design Council. I like this framework for its structure, clarity and dynamic.The core question in almost any creative or design project is how to get from point A - \"Don't know\" or \"Could be\" - to point B - \"Do know\" or \"Should be\". This process might seem finite and straightforward at first sight.In reality, it is a never ending process, as creativity is the habit of continually doing things in new ways to make a positive difference to our life (Hyper Island, 2016).The Double Diamond is a structured design approach to tackle challenges in four phases:Phases of this process are either diverging or converging. During a diverging phase, you try to open up as much as possible without limiting yourself, whereas a converging phase focuses on condensing and narrowing your findings or ideas.If you google the Double Diamond you are bound to find various interpretations and also varying wordings. I am going to stick to the version above as its wording allows flexibility and agility in its application in my opinion. Or in other words, it is the most appealing recipe to me.The four phases of the Double Diamond may be simplified and merged into two main stages of the process.The following paragraphs provide you with a step-to-step approach for each phase.This phase is split into Discover/Research and Define/Synthesis.As a result, you ought to end up with a huge pile of unstructured research findings.In order to make sense of your findings, you want to synthesise your research by applying the following steps:As a result, you ought to come up with a revamped brief (final brief, HMW-question) that either clarifies or details the initial brief challenge or even contradicts it.This phase is split into Develop/Ideation and Deliver/Implementation.As you have deduced the actual question to solve or challenge, you start ideating.As a result, you ought to end up with one or a small number of ideas you want to later prototype and test, in order to find the best answer or solution to your initial question or problem.Once you have come up with potential solutions (set of ideas), you want to evaluate the final one and the way it needs to be implemented or executed. In order to so, you may apply an agile approach consisting of three steps:Aim for MVPs - minimum viable products/prototypes, that offer enough tangibility to find out whether they solve the initial problem or answers the initial question.As a result, you ought to be able to go \"out\" with your final proposal, product, answer or solution.Once you have done so you might go back to start and do it all over again because there are always things to be improved.Remember: Creativity is the habit of continually doing things in new ways to make a positive difference to our life (Hyper Island, 2016).This article or guide is by no means concluding and doesn't claim to be the one and only approach or way to do it.This revamped Double Diamond is just ONE and my personal approach. It's not the ONE AND ONLY approach and it is here to be challenged, questioned and iterated upon.Depending on your role and a project, the size of the diamonds may also vary. Meaning that there might be challenges or projects, in which you solely focus or emphasis on one part of the Double Diamond. Furthermore, this process is not linear. In reality, you need to be prepared to be agile and go back and forth at any point.This article also focuses on the general structure of the process rather than all the individual tools and methods that may be applied to it.In the end, it is a framework anyone may or may not apply. It has helped me and guided me through the design process.Nevertheless and at some point you will be stuck in the fog, and you will feel lost in the process. It's normal, deal with it and trust the process. Two follow-up posts to this article:A critical reflection and my process:An approach at mashing-up the Double Diamond with project management methods as multiply asked: The Double Diamond revamped Understanding people Chilli Con Carne and the Double Diamond Point of departure and basics Discover / Research Define / Synthesis Develop / Ideation Deliver / Implementation Feel free to recommend this post, share it, follow me or get in touch with me on http://www.dannessler.com Stage 1 - Doing the right thing (Diamond 1 - Discover and Define)Stage 2 - Doing things right (Diamond 2 - Develop and Deliver)One more… wait… two, three more things Discover /Research- insight into the problem (diverging)Define/Synthesis - the area to focus upon (converging)Develop/ Ideation- potential solutions (diverging)Deliver /Implementation- solutions that work (converging) Stage 1 - Doing the right thing (Diamond 1 - Discover and Define)Whatever you do, you ought to look for the right problem to solve or the right question to ask before you try to do so. This is all about what you do.Stage 2 - Doing things right (Diamond 2 - Develop and Deliver)Once you have found the right question to answer or the right problem to solve, you want to make sure that you do this the right way. This is all about how you do it. Rip the brief (the usual starting point of your challenge) - Try to question the brief or your initial question by challenging every part of it and evaluating fields of interests. List as many elements as you can, find characteristics, define areas of interest and extremes, list places, people (personas), experiences that are related and can be explored.Before you dive into your research, cluster your findings into topics to get an overview and you might have to limit yourself in terms of the scope you want to research.Dive into your research. Apply primary (field) and secondary (desk) research methods. Here is an extensive list of research methods by ideo.org. Download (summarise your raw findings and share them with your team) all your research.Cluster learnings and similarities to themes.Find insights (insights are the dormant truth about the consumer's motivations, wishes or frustrations regarding a specific topic)build opportunity areas (a phrasing of the potential area of action).Create HMW questions (A so called \"how might we...\" question that makes a tangible statement of what is to be done or solved within the area of action). Ideation This is the fun part and as it is part of a diverging phase. You should restrain from limiting yourself and approach ideation with an open mind. Do not judge during ideation. Apply a \"yes, and…\" rather than a \"no…\" or \"yes, but…\" mentality. Let anything happen at this point and build upon each other's ideas. There are tonnes of creative ideation tools and methods out there. I am not going into detail here.Evaluation Towards the end of an ideation phase, evaluate your ideas and select your favourite ones. Two tools you that come in handy are dot-votings (each team member votes for ideas) or impact/feasibility matrixes (a matrix that puts feasibility in relation to a potential impact of an idea). Build/Prototype Test/Analyse Iterate/Repeat"
        },
        {
            "title": "How to design words",
            "date": "Wed Aug 24 2016 03:47:12 GMT-0400 (EDT)",
            "text": " Technically speaking, I'm a writer. I get paid to write words. But here's something most people don't know about me: I hate to read.Now don't get me wrong-I still read quite a bit. I wade my way through books and blogs, news feeds and magazines. But when writers get wordy, my eyes get glossy. My brain gets bored.As a kid, I always thought my aversion to reading was a weakness. It wasn't until years later that I realized this weakness helped me become a better writer.You see, I mostly write interface text for apps and websites. It's a style of writing where brevity beats brilliance, and every character counts. Writing interface text is actually a lot like design-designing words for people who hate to read.Numerous studies have shown how people don't read on the web. The same goes for apps, games, or any other screens you interact with. Most people just scan around, picking up words here and there.Are people lazy? Careless? Or do they just hate to read? Whatever theory you go with, the results are always the same. People don't read most of your interface-no matter how great your words are.Because of that, you shouldn't just write words and paste them into your design. As you write your words, you might find that your design needs to change. If you can't explain an action in a few words, it's a sign that your design is probably too complex.To put it another way: You shouldn't design with lorem ipsum. You should design with words.As an interface writer, I've learned a few things that can make your words a little easier to read. Hopefully these tips can come in handy as you write and design your own words.The most important thing you can do to help people read is to shorten your text. After writing your first draft, trim it down, again and again. Cut out details, use simpler words, and just get to the point. Be ruthless.As a writer, I know how tempting it is to stretch your ideas and flex those writing muscles, but an interface isn't the right place for that. That's what Medium is for 😀Sometimes, you just won't be able to shorten your text any further. When that happens, see if you can add a heading that sums up your text in a few words. Use keywords that your user might look for. They can always read on if they want to learn more.When viewing webpages, our eyes tend to scan up and down. Because of this, lists are usually easier to read than paragraphs.If you find yourself using words like \"and\" or \"also\" multiple times throughout a paragraph, try rewriting that paragraph as a list.Some products, like Medium, are inherently heavy on content-and there's nothing wrong with that. But sometimes it can be hard to read paragraph after paragraph after paragraph.When I need to write a lot of content, I try to add a lot of visual relief-line breaks, images, headings, examples-anything that breaks up the walls of words. It gives people a breather. It lets them think and skip around if they need to.For example, in my Medium posts, I try to keep my paragraphs to just a few lines, and I sprinkle in lots of visual relief.Some writers tend to focus too much on the choice of words. Word choice is important, but I think the presentation of those words is just as important.As you design your words, think about how to prioritize the most important words on the screen and how to de-emphasize the less important stuff. In design, this is referred to as visual hierarchy.Think about font weights, size, colors, contrast, typography, capitalization, spacing, proximity, alignment, movement - all these things affect whether or not people read your words. Dial some attributes up, and dial other attributes down until you find the right balance.When you're trying to educate users how to do something, it's tempting to just throw all that info into a single screen and hope they'll get it. But chances are, if your text is longer than a couple of lines, many people won't read it. So what do you do?Sometimes you can show the user a little bit of info at a time. In textbook-speak, this is called progressive disclosure, but I like to call it the slow reveal. (Sounds more dramatic, doesn't it?) Try breaking up your info into small chunks and presenting it step-by-step.Another thing you can do is remove some of the more detailed info and link out to help docs. Many products do this by adding \"Learn more\" links. Clicking those links can take you to a help page with the nitty-gritty details.Have you ever written something that looked good on paper, but ended up looking too long when it went live? That's what happens when you do your writing in Google Docs, Dropbox Paper, or any other writing app.When you write words for an interface, seeing the full context is so crucial. You need to know how your words are going to look next to everything else around it.That's why I prefer to write in Sketch mocks, not in docs. I find that writing in mocks helps inform my writing decisions, because I can see how my words will look in context.Words fill our world with meaning. They help us make sense of the world around us. But the sad thing is that a lot of people just don't like to read. If you work with words like I do, our goal should be to make reading as easy as possible. Help people make sense of the world around them.The tips above are just a few of the things I try to do when designing words. Got any tips of your own? Feel free to share your ideas, stories, and comments below.And to all of you who hate to read-thanks for reading. Much ❤️ to Brandon Land for the sprinkling illustration! 1. Trim it down2. Add headings3. Make lists4. Give them a break5. Prioritize your words6. The slow reveal7. Write in mocks, not docs People don't read your interface7 tips for designing with wordsParting words "
        },
        {
            "title": "How to get value from wireframes",
            "date": "Thu Jun 30 2016 12:13:35 GMT-0400 (EDT)",
            "text": " Eleven years ago, I joined a small design agency. I was 20, and it was my first full-time design job. I spent the first few years at the agency focused on visual design. Can I make this texture more realistic? Would this website look better if the light-source was from a different angle? How could I get my buttons to be even glossier? It was common to hear a client pitch an idea, followed by myself asking a few questions, opening Photoshop and starting to design. Days later I would present the client with one or two visual directions, get feedback, make revisions, and start coding the site in xhtml. The best designers at the agency made the best looking websites.As my career progressed, I learnt that showing the client a wireframe before I started on a visual design could save us both time. Wireframes, however, felt awkward. Their intent was to facilitate a space for ‘quick revisions' before the client and I ‘decided on a direction' and started the ‘design process.' They were supposedly quicker to create than visual designs, and thus, quicker to change. However, wireframes sketched on paper were considered too unpolished to present to a client, so I would spend time creating digital wireframes. After presenting the wireframes, rarely did I find that they inspired any meaningful conversation. In fact, seeing the digital wireframes almost never led us to change direction.Looking back, I didn't find wireframes valuable because I used them to solve the wrong problem. They were used as a checkbox to move a project from ‘exploratory' into ‘ready for design'-to prevent a client from changing their mind at a later date. What I didn't realize then, is that at their best wireframes create a mechanism to break out of obvious design paradigms. They enable you to better defend the direction(s) you chose to pursue, and help you slow down to point in the right direction before you speed down the wrong road. The Process of a Junior Designer:The above illustration is from Julie Zhou's article, Junior Designers vs. Senior Designers. It captures a trap that's easy to fall into: Running with the first idea that comes to mind. If I could just make it look better maybe it'll work.It's still common for junior designers to focus on visual design over functional design. Visual design is an obvious place to start as it's easily shared and judged: Does this screen look like the current trend? Did it get many Dribbble likes? Is it flat enough? Do the gradients gradient enough? This is especially true for designers early in their career, or those hoping to get hired. Flashy visuals are quick to create, easy to put in our portfolios, point to, and say \"I designed that.\"The Process of a Senior DesignerAfter a decade in the design world, I've learnt that how something works or why something is the way it is, is much more important than how something looks. Senior designers spend much less time on cosmetics, and much more time validating that they're going the right direction. As shown above, senior designers come to solutions in a very different way.So, how do you avoid polishing the first idea you have? How do you come up with multiple approaches without investing a lot of time? How you decide if one approach is better than the last? Or, better than the next?I want to share a simple technique I now use to force myself to explore and validate multiple directions before I dive into visual design. For the rest of this article, a \"wireframe\" is a sketch on paper. Paper wireframes are quick to make and reinforce that ideas are cheap and safe to throw away. Paper, also allows anyone on the team to take part in wireframing.Let's get started. Grab a notebook (I like Borden & Riley's Paris Paper for Pens) and draw a grid of at least 20 small rectangles. If you're working on a mobile UI, make them roughly the aspect ratio of the device you're designing for. For desktop UI, make them the aspect ratio of a computer monitor.Now, with your pen (I like PaperMate Flairs) fill each box with a different approach to the design problem you're trying to solve. Sketch the most obvious ideas first. Get them out of your head, don't stop until you've filled every box with an idea.There's little chance you're going to be able to fill every box with a great solution, and that's the point. You want to cover as much breadth as possible to move your mind from the comfortable into the unknown. If you're struggling to come up with a new idea, push yourself to do something constrained: What if the menu is a radial? What if it's only images? What if there are no images? What would Apple do? What would Google do? What if there are no lists or grids? What are different ways to place the most important elements closest to the user's thumb? For me, more often than not, things start to get interesting after the first ~10 sketches.If you're trying to find the best way to layout a screen, it's handy to create a key such as: T (title), V (video), RV (related videos), Sub (sub-navigation), etc, allowing you to focus on layout instead of UI elements:Or perhaps a 💡 for links to documentation and a 📈 for analytics:If you're focusing on UI layout and elements you can sketch in higher fidelity:At this point, your mind should be exhausted and all boxes filled. If the boxes aren't filled, force yourself to continue. If you still have remaining brain juice, flip the page over and sketch more ideas. Reach the end of the tunnel. Get strange. Get weird. Now that all the boxes are filled, look at them and pick a few ideas that look promising. Talk them through with someone and get their thoughts. Forcing yourself to verbalize concepts often reveals new and interesting ideas.Rarely, if ever, is visual design the best next step. Again, it's important to not commit to pixels at this point. Keeping your ideas on paper makes them lightweight and non-committal; anything can be changed.Now, take the promising ideas and draw them in higher fidelity. Draw larger boxes on a new page-I find four-boxes on a A4-sized page works well. At this point we're trying to see if the ideas hold up with more detail:Once you're finished, it's beneficial to show the higher fidelity ideas and get feedback. In the past, I've walked a client through iPhone photos of the sketches. Because you haven't committed much time to these sketches, you should be able to take feedback without fearing the additional time it may cause.In very little time, you've filled pages with various approaches to a problem. You've forced yourself to go broad with your thinking and come up with at least a few non-obvious ideas. You've gotten feedback multiple times, and ideally, a few of the ideas showed promise and you explored them in more detail. You haven't got caught up in color, type, lighting, or any other aspect of polished visual design. The feedback you have received is high-level and conceptual rather than aesthetic and over-specific, and easily applied to more sketches.What you do next is up to you. At this point, I've found it helpful to lean on the Google Ventures concept of ‘Searching for Conflicts' to help find the differences between the ideas and decide the best way to proceed. More often than not, I'll repeat the sketching process and think about how the promising screens fit into a flow. What comes before this screen? What comes after? After I've sketched different approaches to the flow, I'll create digital prototypes to see how the flows feel on a real device. Hopefully by following this technique you'll be able to quickly generate multiple ideas, support the ones you chose by comparing them to other options, and avoid committing to your first idea early in the project. While I was working at Medium, Nick Fisher, who wrote many of the Medium tweets, told me that he'll often write a tweet ten different ways before picking the one to publish. He forces himself to write it in different ways before he settles on the right one. Wireframes that are usefulThe setupThe process Repeat the processNext steps Bonus: Applying this technique to things other than design "
        },
        {
            "title": "In search of the ultimate user experience",
            "text": " Around 70,000 years ago, Sapiens figuratively ate an apple from the Tree of Knowledge, and a mutation occurred that scientists still can't explain to this day. According to Yuval Noah Harari, author of Sapiens: A Brief History of Humankind, between 70,000 and 30,000 years ago, new ways of thinking and communicating suddenly propelled Homo Sapiens to the top of the food chain."
        },
        {
            "title": "Interaction Design is dead. What now?",
            "date": "Tue Oct 11 2016 06:57:00 GMT-0400 (EDT)",
            "text": " The digital revolution was a gold rush for curious minds. Nobody knew what digital media actually was, only that it was about to impact our lives profoundly. It was unknown territory waiting to be filled with new artforms, designs and ways to understand the world.Then this happened:What's going on?Interaction Design emerged from a technological - digital - revolution. So just like engineers, designers became problem solvers. In an avalanche of ever-accelerating trends the main questions of the technological designer have been: \"What can we do with technology?\" and \"How can we do it?\"There is not much room for open questions like: \"Why should we do it?\"After a phase of exploration, interaction designers today mostly serve one goal: to make money (or as they say in startup incubators: \"to change the world\"). The effort to commodify every nook and cranny of our (private) lives has become prevalent and it ignores everything that doesn't fit into a business plan. The design of profitable digital products and services can limit your world view to an extremely narrow perspective.As a result most of today's digital products and services are driven by consumption and the promise of comfort. Based on the problematic idea of infinite growth, many of them ruin our living environment, damage our social cohesion (how come \"disruptive\" has become a positive term?), dumb us down and confuse us while things around us get \"smarter\".Hence many young creative minds don't see digital technology and interaction design as a field for personal growth and creative development. Digital media today seems to be made for consumers, business people and spys, not for artists.This led me to gradually steer the Interaction Design program at the University of Applied Science in Munich into a different direction. For now I call this direction \"Natural Design\". Biological systems are at the heart of this design program.It is based on three principles:Take a look at all the human-made things around you! They all tell you something about how we see the world. An unsustainably produced cheap plastic cup tells a different story than a carefully crafted piece of pottery.Our designs show our relations towards life and shape them.Let's start with the design of our relation towards ourselves. What images and objects can support our ability to be present in the moment and maintain mental clarity in our age of super-abundant information? How can we make ourselves smarter rather than the things around us?When it comes to our relations towards others, what are the alternatives to selfies and judgmental like-buttons on pretentious golden smartphones? What kind of design fosters resonance between people?As real as their consequences are, social constructions like money, nations or \"the economy\" don't really exist - we made them up to coordinate our co-existence. How can our communication designs reveal how our social constructions work and help to shape them?At the core of a life friendly design stands our relation towards our living environment and our own biological existence. The progress in bio-science and sustainable design needs a more comprehensive discourse among designers which goes beyond technological solutions or the reduction of our \"ecological footprint\". Rules or laws are not enough, we also need a profound life friendly philosophical discourse which manifests itself in our designs.The questions \"What can we do with it?\" and \"How can we do it?\" have something in common: They can be answered in a straightforward manner with results or solutions: products, services and communication tools for example.In the field of the arts on the other hand we find a tradition of asking open questions and create rooms for interpretations rather than solutions.Many of the most interesting design projects I see students create don't have clear \"results\" but instead raise interesting questions. They intuitively follow a path of creation without knowing in advance why they are doing it and where it will lead them. For instance they might explore \"boredom\" or \"idleness\" with no clear intention of coming up with a final product that solves a problem but rather a creative investigation. Let's embrace this kind of work on open questions, and firmly integrate it as \"serious\" design - because it is.Designers do not just solve problems, they also discover them.So how do you teach design? You can't. All you can do is provide a framework in which students enjoy to discover it for themselves.So my only advice to students is: Pick a craft and make beautiful stuff!Design has its roots in craft. And I consider craft to be the central catalyst to achieve any knowledge in design. (The term \"craft\" here includes any activity that is done well for its own sake and in which one can acquire mastery.) What is truly important in any creative endeavour cannot be conveyed with words. The talking professor in front of a class is an amusing ritual but the essential knowledge in design is tacit. It is won through physical interaction with the world in the pursuit of mastery.Learning a craft does not only sharpen the students' body and mind, it also gives them immediate feedback and thus connects them to the world. It provides them with a sense of agency.Like this? Click the little heart and move on to: 1. Interaction Design is based on technological thinking2. Interaction Design is restricted to profitable applications.1. Design expresses our relations towards life2. We ask: Why?3. The joy of creation Moving towards Natural Design Contradict yourself! is an ode to different perspectivesWhy Perfection is boring is about the difference between mastery and perfectionDon't think big! explains how you can avoid making one major mistake in your creative project."
        },
        {
            "title": "Is this the perfect save icon?",
            "date": "Tue Feb 02 2016 10:07:03 GMT-0500 (EST)",
            "text": " Last week at Etch, my friend and colleague Matt Jackson asked me a simple question:This is something that has come up time and time again, so naturally we started to do some digging around to find a better solution.According to a survey taken in 2013: 1,000 children, from kindergarten through to 5th graders, were questioned about iconography. Among the findings was an interesting tidbit: Only 14 percent of the kids knew what the save icon represented.That's a concerning statistic. The whole idea of a user interface is to create a connection between human and machine where both can understand the input and output of information, so we should always be striving for icons that convey meaning to our users.We're now approaching an era in which the predominant user base interacting with this are young teens. Users with little or no experience in ever using a floppy disk. With that in mind can we honestly say that we as designers are communicating this in the best way possible?In fact, the more I think about it, I would be surprised if any millennial knew a lot about hard disks. Even the concept of reading/writing data to a physical object is probably alien to them.The definition of icon design is: The process of designing a graphic symbol that represents some real, fantasy or abstract motive, entity or action. In the context of software applications, an icon often represents a program, a function, data or a collection of data on a computer system.Let's look at that in more detail: Designing a graphic symbol that represents something real.A symbol is a visual representation of an idea or concept. They take inspiration from actions like sounds, gestures, feelings and words.That's all fine, I'm down with that, but it's the next part of this sentence that starts to introduce the problem. \"Something real\". It's the easy thing to do, it's the literal symbol of the object that's right in front of you.But what happens over time is these objects evolve and change into something completely different. The literal object for a telephone no longer consists of a rotary dial, microphone and an ear trumpet! I mean take a look at a few of these classic icons. Ask yourself whether you think they are still relevant to someone today?The other part of our definition for icon design mentions the idea of fantasy. Abstract motive, entity or action. This really excites me, but it's ridiculously hard to do. Hence why a lot of the time we take the easy option and just make it literal.I love the idea of designing iconography based on the emotional effect and the reactive nature of a human interacting with something. Here are a few examples that we put together based on symbolising an action rather then an object.They're far from perfect but it was definitely a good exercise in opening our imagination and getting creative. Our aim was to produce something timeless and effective. Or should I say, iconic.One truly great example of this is the work from the Google design team.It's amazing how they bring life and meaning to the same 4 little dots, each time symbolising an action we can instantly identify with.You see the thing is you probably don't even need one. The times they are a changing and like I mentioned before, who's still reading and writing data from a physical object these days?It's all in the cloud baby. Yes, I know the that the cloud is made up of huge data centres somewhere but manually saving is just something we don't need to clutter our lives with anymore.Today when I'm working all I want to know is; do I have an internet connection and am I syncing my data successfully? Big green tick yes, awesome! I know I have access to that work from any device, anywhere in the world and at any time.As always with these types of questions we love to rope in our in house design psychologist Paul Davies to impart his ever wonderful wisdom. His solution, albeit simple, is an effective one indeed. So if you really do need to \"save\" something:I started writing this thinking that the floppy disk was terrible as an icon and to be honest I'm now feeling like my reaction was a little brash.I wanna look back at that survey for a second: Only 14 percent of the kids knew what the save icon representedFourteen percent? Really? Interesting, now I read this as 100 percent knew this was a save icon but only 14 percent understood the history behind the symbol. So does this icon enable the user and machine to interact together? I would say it does.Let's look at it like this, how many of you knew that the USB symbol was based on Neptune's Trident, the mighty Dreizack, or that the bluetooth symbol is a combination of the two runes that represent the initials of Harald Blåtand? Harald happened to be such a connoisseur of blueberries it was believed he always had one blue tooth. Maybe some of you did. But those of you who didn't, probably haven't struggled to connect your latest smart phone to your car radio or plug in your USB device.The key thing is, if you really need an icon just make sure that it is simple, identifiable and consistent.It's unclear what the future will hold for the floppy disk icon. Maybe there is an argument that you don't really need to know that it's a floppy disk at all? You just need to know that pressing this weird boxy symbol means to manually save something. For the new generation with no experience of using a floppy disk, this symbol might as well be some weird abstraction, a fantasy object anyway.And maybe that's OK, maybe that makes it the perfect icon already. Author Jamie HeuzeHead of Design at Etch UkJamie honed his unique craft of Interaction design by working closely with and nurturing some of the most interesting startups in today's tech scene.Over the last 7 years of his career he has donned many a cap in all areas of design, from creating effective branding and packaging for some of the world leaders in the gaming industry to redefining user experiences and digital spaces for desktop and mobile apps. So far he's had the pleasure of working with the likes of Ubisoft, HBO, EA, Disney, Warner Brothers, Konami, Universal and Sega. Abstraction.well, about that… The hunt for the perfect save iconSo how do we fix this?Dealing with icon evolutionOk cool, but where's the new damn save icon!? "
        },
        {
            "title": "Let’s Stop Doing Research*",
            "date": "Mon May 09 2016 21:30:25 GMT-0400 (EDT)",
            "text": " And get smarter about design.There is a lot of bad design in the world. This is so interesting to me. We have a huge amount of collective knowledge about design and human behavior. So, why do we continue to produce objects and systems that clearly fail to meet a real need, fail to serve business goals, or just don't work. Plainly said, why do smart people still make things that suck?It's easy to blame the designers involved for a lack of craft. However, most designers work within the context of an organization with a collective set of not completely rational and harmonious priorities. Even sole practitioners are working for someone. Too often competent designers are subject to a broken process for making decisions. The standard for success may be the wrong standard. There are too many competing interests. Ego or anxiety rule the day. The conditions for good design-a clear goal, the right resources, and necessary information-are not present. This is all complicated and less fun to talk about than just ripping apart the end-product or responding with a design of your own better mousetrap.Great design changes the world by first fitting into the world as it exists. We had pockets before we had iPhones, but no place to fit a Segway. If you understand why things are as they are, you'll appreciate what a slog it is to achieve lasting change where it matters. And you'll be prepared.So along comes research-but who wants to waste time doing research? We want to design! Research can be a hard sell, even to those who claim to value design. It often sounds like time and money sunk into mucking about in the messy present when we could be busy creating the perfect future.And the way a lot of research goes only serves to validate this prejudice.The goal of design research is not to do research for it's own sake. The point is to make sure everyone working towards the goal is benefitting from a collective understanding of the problem. It doesn't matter how much research you do if the people who have acquired the most knowledge write a report and move on.Assigning the research to researchers, even the most rigorous, is not enough. The research needs to answer the questions design needs answered most. And the resulting knowledge needs to suffuse the design team.And product teams can be rife with disagreement and confusion about what research is and means. When I say \"research\" some people hear \"surveys\" or \"focus groups\" or \"testing\". Sure some of those are research, but that doesn't mean they are all-occasion or that research can reduce to any one of those. Doing the wrong research can be worse than doing none. Having a check-box approach is missing the point.So, we need a better word, one less ambiguous, and that doesn't taste like homework. Beyond the word, we need a completely different culture of using inquiry to inform design. Continuous curiosity and the will to be proven wrong as fast as possible are just part of the job.It's essential to design with the needs of the ultimate users in mind, but the practice of user-centered design can be too closely aligned with the maligned waterfall process. And understanding the system from the user's perspective is simply not enough. We can't neglect the larger context.The notion of \"data-driven design\" reinforces the false belief that quantitative data (measurements) are inherently superior to qualitative (descriptions), that the data will tell you what to do. But they aren't and won't. No matter how good your data, you will need to ask the right questions, interpret the answers, and determine the implications for what you're designing. As long as humans are involved, data-driven design is still just human bias-driven design (like all design, really) with a name that inspires false confidence.I get asked about the role of intuition in design every single time I give a talk about research-as though gathering information threatens to suck all of the joy and creativity out of the process. I understand the concern. Design is not a math problem where you plug variables into a formula to derive a solution. Fear not. Information and intuition are compatible.Intuition is one of two things. What we call intuition is either a judgment based on experience, which is a form of research, or it's confirmation bias. Your intuition tells you that what you want to be true is true.A great designer learns from experience and avoids relying on assumptions. A great designer looks at the real world and makes connections others don't see. A great designer has insights about the world allowing them to change the world by creating a new thing the world accepts and adopts. A great designer collaborates with others. A less great designer places personal expression on a pedestal.So, \"design thinking\" doesn't solve this. Designers often have useful approaches, but we don't have special cognitive powers.As long as we continue to call out research as a separate activity apart from design we will be fighting for the inclusion of inquiry into the process, and we will be battling misconceptions.We need evidence-based design. Because what we are doing first and foremost is designing. It doesn't matter how much research we do, or what method we use. There is no one right answer. It matters that we have sufficient evidence to support our choices and decisions, however we get that evidence.It's much harder to argue against evidence-based design. What's the alternative? Guessing? Designing with no evidence to support your decisions? Now, that's silly.Of course we will often have to do some sort of research to gather the evidence, but those activities are as integral to the design process as sketching or writing. We know we have done them well to the extent they made the design stronger and give us confidence in our decisions.What design decisions are we making? What evidence do we need to support those decisions? Where will we find that evidence? If we ask these questions, we will never have to ask whether we have to do research again. Don't worry! Just Enough Research still works for this approach. I wrote it, you should get it. Note: Evidence-based design is a term that does currently exist in healthcare environments. We need to adopt and broaden the definition to encompass all design, interactive design in particular. It's our best hope for a rational, humanist approach to problem solving. Good decisions require good informationThe problem with researchWe're past user-centered designWhat about data-driven design?So, then genius design, right?We need evidence-based design "
        },
        {
            "title": "Metrics Versus Experience",
            "date": "Wed Jul 06 2016 11:44:59 GMT-0400 (EDT)",
            "text": " Some decades ago, if you wanted to build a great experience, you'd take a deep breath, close your eyes, and mutter a prayer to that oracle of answers: your gut.But as our ancestors learned to harness the power of fire, so did we learn to harness the power of measurement and analytics. No longer did we grope in the darkness, wondering Is anyone actually reading those e-mails I send out every two days? and I wonder how many people tried out that new feature we launched. We simply dive into our treasure trove of numbers and emerge with the answer.Alas, despite this new-found light, existential shadows remain. I hear them debated in the halls of the office, muttered over drinks after work, typed IN ALL CAPS on errant comment threads:Woah there! Charged words and hot accusations!Want to have a productive conversation about metrics and good experiences? Here's what I've learned.Besides evoking big-budget movies pitting two passionate-fanbase superheroes against each other, framing things as \"metrics versus experience\" is entirely the wrong way to start the conversation.It's like saying \"carbs versus eating healthy.\" You don't lead with that if you want to start with credibility in a discussion about nutrition.Being able to measure stuff gives you insight into what people are doing within your product. Unless you like living under a rock, having more information is a good thing. Sure, you need to be able to sort through what information is important and what isn't, but arguing that the whole concept of having more information is bad is not really a defensible position. Metrics is not the villain.Furthermore, if you do something people find valuable, that should be entirely in line with making your success metrics go up. You can't really argue that you made something better if nothing ever changes with how people use your product. Conversely, if you make a change and people start to use your product less, I don't care what you did, but the evidence is fairly clear that you messed something up.Finally, the third reason metrics are so valuable is that they help rally a team around something clear and tangible that they can hold themselves accountable to. From a purely logistical perspective, it's hard to get 50 people to execute against mission like \"create a super-amazing experience!\" Sure, everyone might pump their fists in the air after your empowering speech and yell, \"Yes! A Super-Amazing Experience! That's what we're after!\" But when it's Monday and Team A shows up all excited and says \"Check this out! We made a super-amazing experience!\" and Team B's reaction is \"Um, no, that is actually crap,\" what happens? Who is right? How do you consistently and clearly define what a \"super-amazing experience is?\"One way to solve this is hierarchy. You can denote a specific individual (or a ladder of individuals) at the company to be the judges of what is or isn't high quality. If you'd prefer less hierarchy, another method is to define a measurable goal: \"A super high-quality experience means that 50% of people who try out this feature will come back and use it again within the week.\" Now, Team A, Team B, and everyone else knows precisely what they're shooting for, and how close they are to it from day to day.So, to summarize, metrics are useful, and at a high level, metrics and user experience are not locked in an eternal struggle against each other. Make sure you don't say things that imply that they are.Just like how you can eat too many jelly-filled donuts and give carbs a bad name, so too can metrics be used to justify poor decisions. This can happen because not everything you can measure is worth measuring or affecting. This can also happen because you don't get the full story by looking at a single metric. Often, you need a suite of metrics to get a really good picture of what's actually happening.If you happen to pick the wrong thing to measure and try to move, you may end up doing something that's actually harmful to people's experiences. Observe some examples:a) \"Originally, the click-through rate of this story was 2%. When we made this change, the click-through rate went up to 5% Hooray!\"What's the problem? Click-through rate on a story does not tell us enough about whether the experience was actually better. What if I changed all the links on my site to \"click here to earn $250 dollars\"? Hell yeah, click-through rate would go up! But eventually, people will realize that I'm not actually giving them $250 dollars, and then they'll get pissed. They'll stop clicking on my links, uninstall my app, and give me a 1-star review in the app store while writing FUUUUUUU - in all caps. My business fails, and my life sucks. The end.b) \"People used to spend 5 minutes on my app. Now, after launching my latest feature, they only spend 3 minutes. Uh-oh.\"What's the problem? Is time spent on your app actually an important metric for you to track? It depends. If you are a content destination, then likely yes - the reason you exist is to give people great things to read/watch/listen to, so the more time they spend, the more likely it is that they're finding what you offer valuable. If your app is a utility, like helping people sign digital documents, then no. You are better off tracking some other metric, like the number of times your app is actually used to help people sign documents. In fact, people probably love the fact that now they can sign their documents faster, which over time should correlate with more usage of your service.c) \"Originally, more people were using our cat-photo-meme app in Illinois, but now we have more people using it in Ohio.\"What's the problem? Cool story, bro. Doesn't matter, and isn't a metric you need to pay attention to or try to affect.If we could read user's minds, then we could in theory design the perfect experience for them. Unfortunately, we're not all Jean Greys, so we make due with what we can measure to try and take educated guesses as to what people care about. In this day and age, what we can measure has its limits, and it's important to always remember that. Simply looking at what people are doing in your product can't tell you:Some of these things you can try to get at with qualitative research or surveys and polls, but none of those methods are perfect (remember Brexit prediction polls?) And even in the cases where you can accurately measure broad sentiment (like brand trust), it's hard to know what effect specific changes had (for example, did that logo or visual redesign improve people's perceptions of my brand?)Not being able to accurately measure the above means that there are instances where metrics fail us. Observe the following examples:These are some of my biggest learnings in my quest to become more and more disciplined about the tactics of good goal setting and measurement. Now go forth and wield your understanding of data to make better experiences for people everywhere.Related articles:The Agony and Ecstasy of Building with DataMetrics, a StoryQuality is Not a TradeoffThe Tax of NewThe Two Ways of Building First off, don't frame stuff as \"Metrics Versus Experience.\"Certainly, bad things have been done in the name of \"improving metrics.\"Certainly, there are important things we can't easily or accurately measure.Some rules of thumb for good metrics hygiene: Are we just doing this for the metrics?How can we balance driving up numbers and doing something meaningful?And my personal favorite: Are you that data-driven, or do you actually care about the user experience? the degree to which people love, hate, or are indifferent to your product or any of its specific featureswhether a change increases or decreases people's trust in your product over timehow simple and easy to use your product is perceived to behow people see your product versus other similar products in the marketwhat things people most want changed, added, or fixedhow people will want to use your product as time passes Understanding the cost of complexity: each time you add a new feature to your app, it's likely that the metrics you are tracking will turn up positive (after all, before nobody used X, and now more people use X, and people don't seem to be using Y or Z any less, so overall this feels like a win.) However, if you keep adding features, at some point, you'll end up with what's perceived as a cluttered and bloated product. Then, suddenly, some shiny new competitor will gain fast traction because everybody's like \"I love Q! It's just so simple.\" The paradox of choice and the costs of cognitive complexity are real. We just haven't figured out how to accurately measure them yet.Understanding the power of brand: when Apple or Nike comes out with a new product, lots of people are inclined to buy it, even without doing their research, because they've had an awesome experience with that brand in the past. The same would not be true if some new upstart called Pear or Sike came on the market with an equivalent product. At a high level, we all know and understand this. However, it's hard to quantify the power of brand and turn it into a number that can be tracked every day. It's hard to know how all the thousands of decisions a company makes impacts that brand, and what the costs and benefits are in weighing those tradeoffs.The power of big bets: no metric can tell you what the bold strokes needed to win the future are. Imagine 2008, when smartphones were just starting to emerge. If you looked at the metrics for your website, you would have seen a tiny sliver of traffic coming from smartphones. You may have concluded, very practically, that you shouldn't really invest too much into building for mobile since it's such a small part of your audience. Today, we realize the vision and foresight of those who did bet big on mobile and reaped huge rewards. No examination of current behavior can accurately tell which way you need to leap. Strategic, long-term planning still requires much of the same thing it always did: trusting your gut. To assess for product-market fit, look at retention. Do not look at the sheer number of people using your product or feature (which can be skewed by things like how aggressively you promote it.) Retention best correlates with whether your product is valuable because it tells you whether people who tried it liked it enough to return and use it again.To optimize for growth, understand your funnel. In order for people to become regular users of your product, they have to pass through a bunch of hurdles. First, they have to be aware of your product. Second, they have to be interested enough to check it out. Third, they have to convert (download an app, fill out a form, confirm e-mail, etc.) Fourth, they have to do enough within your product to understand why it might be valuable in their lives. Fifth, they have to remember to come back. At each of these steps, you will lose people. If you can track and measure what that rate of loss is, you can then start to figure out where to focus your efforts to make your funnel less leaky.Figure out which metrics are truly important, and focus on those. It's tempting to get into the state where you track everything (because you can), and you have a dashboard filled with numbers that all feel like they should be green. Recognize that most things don't matter, and that only a small handful actually do. Don't waste time talking about the unimportant stuff, and don't sweat letting some of the less important metrics go up or down.To figure out the best metric to track, use the magic-wand technique. Ask yourself: \"If I could wave a magic wand and know anything about my users in the world, what would I most want to know to tell me whether my app will be successful?\" Even if your answer is not something you can actually measure (\"Is my app suggesting recommendations that my users find valuable?\"), it is a helpful starting point to work from. (\"Okay… so I can't ask every user if the recs were valuable… but if it were valuable, I'd probably see them saving or sharing recs more, and they'd probably spend more time reading recs, and…etc, etc.\")Don't just accept a metrics goal without understanding it. I can't emphasize this enough: the goals you and your team agree to will be hugely impactful to your work, so make sure you buy into them. Do not accept metric goals at face value. Ask why. Ponder whether or not they make sense, and what behaviors they will incentivize. Are there situations where something will feel like a good decision but the metric doesn't move? Conversely, are there situations where you could imagine the metric going up a lot but not be convinced that the product is actually better? If so, would another metric (or set of metrics) do a better job of tracking what actually matters?View data skeptically by suggesting countermetrics. If the data is showing you what look like good results, ask yourself: \"What else can I look at to convince me that these results aren't as good as they seem?\" These are called countermetrics, and every success metric should have some. (For example, don't look at click-through rate without looking at the number of fast bounces back, don't look at the sales numbers of a product without looking at how many returns or cancellations there are, etc.) It's much better to be paranoid about interpreting data so you can quickly catch your mistakes and adjust your strategy. Don't fall into the trap of confirmation bias where you're just looking for signals that prove your intuitions are right.Use qualitative research to get at the why. Quantitative data that tells you what people did is best paired with qualitative research that give you insight into how people felt. Conduct usability testing, utilize focus groups, and run surveys to get at the why behind the behavior you're seeing."
        },
        {
            "title": "Never Show A Design You Haven’t Tested On Users",
            "date": "Tue May 10 2016 10:00:00 GMT-0400 (EDT)",
            "text": " It isn't hard to find a UX designer to nag you about testing your designs with actual users. The problem is, we're not very good at explaining why you should do user testing (or how to find the time). We say it like it's some accepted, self-explanatory truth that deep down, any decent human knows is the right thing to do. Like \"be a good person\" or \"be kind to animals.\" Of course, if it was that self-evident, there would be a lot more user testing in this world.Let me be very specific about why user testing is essential. As long as you're in the web business, your work will be exposed to users.If you're already a user-testing advocate, that may seem obvious, but we often miss something that's not as clear: how user testing impacts stakeholder communication and how we can ensure testing is built into projects, even when it seems impossible.The most devilish usability issues are those that haven't even occurred to you as potential problems; you won't find all the usability issues just by looking at your design. User testing is a way to be there when it happens, to make sure the stuff you created actually works as you intended, because best practices and common sense will get you only so far. You need to test if you want to innovate, otherwise, it's difficult to know whether people will get it. Or want it. It's how you find out whether you've created something truly intuitive.Last fall, I was going to meet with one of our longtime clients, the charity and NGO Plan International Norway. We had an idea for a very different sign-up form than the one they were using. What they already had worked quite well, so any reasonable client would be a little skeptical. Why fix it if it isn't broken, right? Preparing for the meeting, we realized our idea could be voted down before we had the chance to try it out.We decided to quickly put together a usability test before we showed the design.At the meeting, we began by presenting the results of the user test rather than the design itself.We discussed what worked well, and what needed further improvement. The conversation that followed was rational and constructive. Together, we and our partners at Plan discussed different ways of improving the first design, rather than nitpicking details that weren't an issue in the test. It turned out to be one of the best client meetings I've ever had.Naturally, stakeholders in any project feel responsible for the end result and want to discuss suggestions, solutions, and any concerns about your design. By testing the design beforehand, you can focus on the real issues at hand.Don't worry about walking into your client meeting with a few unsolved problems. You don't need to have a solution for every user-identified issue. The goal is to show your design, make clear what you think needs fixing, and ideally, bring a new test of the improved design to the next meeting.By testing and explaining the problems you've found, stakeholders can be included in suggesting solutions, rather than hypothesizing about what might be problems. This also means that they can focus on what they know and are good at. How will this work with our CRM system? Will we be able to combine this approach with our annual campaign?Since last fall, I've been applying this dogma in all the work that I do: never show a design you haven't tested. We've reversed the agenda to present results first, then a detailed walkthrough of the design. So far, our conversations about design and UX have become a lot more productive.Okay, so it's a good idea to test. But what if the client won't buy it or the project owner won't give you the resources? User testing can be a hard sell-I know this from experience. Here are four ways to move past objections.It's not unusual to look at the total sum in a proposal, and go, Uhm, this might be a little too much. So what typically happens? Things that don't seem essential get trimmed. That usability lab test becomes optional, and we convince ourselves that we'll somehow persuade the client later that the usability test is actually important.But how do you convince them that something you made optional a couple of months ago is now really important? The client will likely feel that we're trying to sell them something they don't really need.A usability lab test with five people often produces valuable-but costly-insight. It also requires resources that don't go into the test itself: e.g., recruiting and rewarding test subjects, rigging your lab and observation room, making sure the observers from the client are well taken care of (you can't do that if you're the one moderating the test), and so on.Today, rather than putting \"usability lab test with five people\" in the proposal, I'll dedicate a few days to: \"Quality assurance and testing: We'll use the methods we deem most suitable at different stages of the process (e.g., usability lab test, guerilla testing, click tests, pluralistic walkthroughs, etc.) to make sure we get it right.\"I have never had a client ask me to scale down the \"get it right\" part. And even if they do ask you to scale it down, you can still pull it off if you follow the next steps.If you think testing takes too much time, it might be because you spend too much time documenting the test. In a lab test, it's a good idea to have 20 to 30 minutes between each test subject. This gives you time to summarize (and maybe even fix) the things you found in each test before you move on to the next subject. By the end of the day, you have a to-do list. No need to document it any more than that.I've also found InVision's comment mode useful for documenting issues discovered in the tests. If we have an HTML and CSS prototype, screenshots of the relevant pages can be added to InVision, with comments placed on top of the specific issues. This also makes it easy for the client to contribute to the discussion.You don't need a full-featured website or a polished prototype to begin testing.And if you test at this early stage, you'll waste much less time later on.You can do this. Now, I'm going to show you some very specific ways you can test, and some examples from projects I've worked on.A pluralistic walkthrough is UX jargon for asking experts to go through the design and point out potential usability issues. But putting five experts in a room for an hour is expensive (and takes time to schedule). Fortunately, getting them in the same room isn't always necessary.At the start of a project, I put sketches or screenshots into InVision and post it in our Slack channels and other internal social media. I then ask my colleagues to spend a couple of minutes critiquing it. As easy as that, you'll be able to weed out (or create hypotheses about) the biggest issues in your design.This is a technique that works well if there's something specific you want to test. If you're shy, take a deep breath and get over it. This is by far the most effective way of usability testing if you're short on resources. In the Labour Party project, we were able to test with seven people and summarize our findings within two hours. Here's how:There isn't any digital testing tool that can provide the kind of insight you get from meeting real users face-to-face. Nevertheless, digital tools are a great way of going deeper into specific themes to see if you can corroborate and triangulate the data from your usability test.There are many tools out there, but my two favorites are Treejack and Chalkmark from Optimal Workshop. With Treejack, it rarely takes more than an hour to figure out whether your menus and information architecture are completely off or not. With click tests like Chalkmark, you can quickly get a feel for whether people understand what's clickable or not.One of the things we designed for Plan was longform article pages, binding together a compelling story of text, images, and video. It struck us that these wouldn't really fit in a usability test. What would the task be? Read the article? And what were the relevant criteria? Time spent? How far he or she scrolled? But what if the person recruited to the test wasn't interested in the subject? How would we know if it was the design or the story that was the problem, if the person didn't act as we hoped?Since we had used actual content and photos (no lorem ipsum!), we figured that users wouldn't notice the difference between a prototype and the actual website. What if we could somehow see whether people actually read the article when they stumbled upon it in its natural context?The solution was for Plan to share the link to the prototyped article as if it were a regular link to their website, not mentioning that it was a prototype.The prototype was set up with Hotjar and Google Analytics. In addition, we had the stats from Facebook Insights. This allowed us to see whether people clicked the link, how much time they spent on the page, how far they scrolled, what they clicked, and even what they did on Plan's main site if they came from the prototyped article. From this we could surmise that there was no indication of visual barriers (e.g., a big photo making the user think the page was finished), and that the real challenge was actually getting people to click the link in the first place.Sometimes you need harder, bigger numbers to be convincing. This often leads people to A/B testing or Google Analytics, but unless what you're looking for is increasing a very specific conversion, even these tools can come up short. Often you'd gain more insight looking for something of a middle ground between the pure quantitative data provided by tools like Google Analytics, and the qualitative data of usability tests.\"Was it helpful?\" modules are one of those middle-ground options I try to implement in almost all of my projects. Using tools like Google Tag Manager, you can even combine the data, letting you see the pages that have the most \"yes\" and \"no\" votes on different parts of your website (content governance dream come true, right?). But the qualitative feedback is also incredibly valuable for suggesting specific things your design is lacking.This technique falls short if your users weren't able to find a relevant article. Those folks aren't going to leave feedback-they're going to leave. Google Analytics isn't of much help there, either. That high bounce rate? In most cases you can only guess why. Did they come and go because they found their answer straight away, or because the page was a total miss? Did they spend a lot of time on the page because it was interesting, or because it was impossible to understand?My clever colleagues made a tool to answer those kinds of questions. When we do a redesign, we run a Task Analytics survey both before and after launch to figure out not only what the top tasks are, but whether or not people were able to complete their task.When the user arrives, they're asked if they want to help out. Then they're asked to do whatever they came for and let us know when they're done. When they're done, we ask a) \"What task did you come to do?\" and b) \"Did you complete the task?\"This gives us data that is actionable and easily understood by stakeholders. At our own website, the most common task people arrive for is to contact an employee, and we learned that one in five will fail. We can fix that. And afterward, we can measure whether or not our fix really worked.Setting up a usability lab is basically free in 2016:Other than that, you just need a room that's big enough for you and a user. So even as a UX team of one, you can afford your own usability lab. Setting up a weekly drop-in test makes sense for bigger teams. If you're at twenty people or more, I'd bet it would be a positive return on investment.My ingenious colleague Are Halland is responsible for the test each week. He does the recruiting, the lab setup, and the moderating. Each test day consists of tests with four different people, and each person typically gets tasks from two to three different projects that Netlife is currently working on. (Read up on why it makes sense to test with so few people.)By testing two to three projects at a time and having the same person organize it, we can cut down on the time spent preparing and executing the test without cutting out the actual testing.As a consultant, all I have to do is to let Are know a few days in advance that I need to test something. Usually, I will send a link to the live stream of the test to clients to let them know we're testing and that they're welcome to pop in and take a look. A bonus is that clients find it surprisingly rewarding to see other client's tests and getting other client's views on their own design (we don't put competitors in the same test).This has made it a lot easier to test work on short notice, and it has also reduced the time we have to spend on planning and executing tests.As I hope I've demonstrated, user testing doesn't have to be expensive or time-consuming. So what stops us? Personally, I've met two big hurdles: building testing into projects to begin with and making a habit out of doing the work.The critical first step is to make sure that some sort of user testing is part of the approved project plan. A project manager will look at the proposal and make sure we tick that off the list. Eventually, maybe your clients will come asking for it: \"But wasn't there supposed to be some testing in this project?\".Second, you don't have to ask for anyone's permission to test. User testing improves not only the quality of our work, but also the communication within teams and with stakeholders. If you're tasked with designing something, even if you have just a few days to do it, treat testing as a part of that design task. I've suggested a couple of ways to do that, even with limited time and funds, and I hope you'll share even more tips, tricks, and tools in the comments."
        },
        {
            "title": "Nine Nasty UX Truths",
            "date": "Thu Jul 07 2016 11:41:59 GMT-0400 (EDT)",
            "text": " There's much to learn on the internet about UX theory, but the tips below are 100% the result of hard-earned experience… a.k.a. painful moments. I've screwed up a lot, in the last twenty years, and these are some of the ways I've found to stop screwing up. Enjoy learning from my mistakes!It's actually not that hard, and you're not half as clever as you think.The users don't understand your color-coding. Green might mean \"good\" to you, but to someone else, on a different screen, it might mean \"unreadable,\" or \"goose shit,\" or \"Saigon - Shit - I'm still only in Saigon…\"Each person sees each color in a completely personal way, if at all. They like some colors, and hate some others, and it's pretty much unpredictable. You can't win.The only things you can communicate with color are:Any color: this thing has a color.A different color: this thing is not the same as the other thing.Gray: this thing is broken.Red: the designer hates you and wants to make you angry. Users don't care what your button's icons are, or what their labels say. You can redesign those every day and nobody will complain.People use their natural positional memory to remember how to use your app. Moving their interface elements around feels to them like the most perverse form of torture. If you want to know what pure unfiltered burning hate feels like, go ahead and move things around. You're probably not reading this sentence. If you are, you probably didn't even read this article through the first time. You scanned the headlines and the quotes, and maybe you're skipping through the short paragraphs now.Since that's true, why do we write instructional text? Why do we allow long paragraphs of copy into our interfaces? Why do we pretend that user manuals, and FAQs, are a valid solution to usability problems?Because we're lazy, that's why. Too lazy to read, and also too lazy not to write.Don't be proud of your navigation interface, or your information architecture. If your app has a prominent navigation interface, you're already on the path to failure.Your job is to help the user achieve their goal. Navigating an interface is never the user's goal. If you'd done your job right, the app would only do one thing, and would do it very well, and would do it all on one screen. But you've failed to decide on and eliminate choices, and you're leaving it to the user to do it.Yes, okay, navigation is necessary for most apps, most sites, most experiences. We have to make some compromises in life. I agree, of course. I almost always end up making compromises too, and providing navigation. Still, shame on me, and shame on you.Not everything is equally important. There are some things you should do first, some things you should do more, and some things you can completely ignore. Here's how to tell the difference:My first UX-related job title, before the concept of \"UX\" had been formulated, was Information Architect. That's still the most important job there is on any project. Things have names, and need to be verbed. Defining the names and the verbs is the most important part of UX.Any time you create a wireframe with lorem ipsum, you're insulting your users, and abusing your client's trust. You're also sabotaging yourself.When you fail to grapple directly with the actual content, but focus on designing boxes for whatever the content will be, what you're actually doing is putting pretty boxes between the user and their goals. Stop it. Design the content, and you'll probably be just about done.On a project, do the sitemap and navigation last. Actually, never do them. Start with the most important object or screen: the one that helps the user achieve their goal. Waste all the project time and budget on making that screen perfect. Obsess over every detail. Lavish hours to the appearance of each pixel. Indulge every fancy and enjoy every minute of it.Once there is no more time or budget, your client/boss will get very angry, and scream at you that you didn't do all the other bullshit they wanted to cram down the user's throat. Play dumb, apologize, and earn yourself a reputation as a flake who never finishes anything… but still, don't design any of it.Hopefully the junk you didn't design will be pushed to Version 2, and the users will get to enjoy Version 1, until you get fired and your replacement ruins it all for everybody. There's no shortage of UX designers who do as they're told, and deliver what's expected of them. This is why there's so much bloatware in the world. Don't be one of them. Stay the course.User testing is wonderfantasterrifically awesome, that's a well-known fact. No matter how amazingly smart you are, and how clever your UI is, ten minutes of user testing early on in the process will save you from abject failure down the road.However, user testing does not absolve you from the responsibility to be smart, to work hard, to sweat out the details, and to go through the crazy, tortuous, gut-wrenching, bizarrely amorphous process of design. You're still going to have to be a genius, buster. And that's especially true when you're designing innovative solutions or products.That's because when it comes to innovation, users can be mean, narrow-minded, myopic, vain, philistine, petty, and stupid. And that's coming from someone who's dedicated his life to loving his users.When you have a great new idea, it will start its life as a fragile embryo, barely viable. It needs nurturing and loving care to grow into a fully-formed innovation, that can stand on its own two legs, and withstand the careless handling by selfish users. User-testing a new idea is like shark-testing a new lamb: It doesn't end well for the idea, or the lamb.So don't let your idea go untested… but only once it's ready. How do you know when it's ready? When you've worked on it long enough that you start seeing its fundamental flaws: Problems that are not about how it's been put together (improvable), but about how it works in the absolute (intrinsic). When it works close enough to the way you intended that you can start thinking of better alternatives… then it's probably ready to test.You may think that what coders do with your design isn't your fault. Fair enough, but it's still your responsibility. Just like sending a message that won't be received, delivering design that won't be understood is a waste of everybody's time.You need to understand your audience, and your audience is coders. They're weird animals, but then again, so are you.You really should get off your lazy designer butt and learn to code already. But until you do, here's what you need to know about coders:Developers don't explore well-designed apps and sites to learn how to build apps and sites. They spend their time learning from demos and tutorials, which are written by other developers who are trying to explain complex coding concepts, by using contrived, ridiculous examples.They don't think about the real-life validity of these examples. They don't think about the UX of these examples. They don't give a rat's ass whether these examples would lead to positive outcomes for the user in their fictional scenarios.Thousands of developers learn their craft by blindly implementing overly simple, badly designed, stupid scenarios, for hours on end. Then they build your app based on a couple of flimsy wireframes, and on hundreds of hours of terrible tutorials. So perhaps you should be a bit more specific with your specs?Programmers have to worry about things no sane human being ever considers. You drop a \"last name\" field in your design without thinking about it, but to a coder, there's a hundred anxieties associated with that:To any normal human being, these questions are absurd. To a coder, they are common sense. What this means for you, as a designer, is that you must keep close to your coders, try as much as possible to anticipate the anxieties that will besiege them, and keep them from derailing the experience with utter lunacy.Good luck with that, by the way. Make sure you enjoy the ride. I am UX Lead with WAX Interactive Switzerland. My crew and I disrupt markets and business models, by doing UX differently. We're also hiring Senior UXers and Full-stackers who love the craft and the cause.I don't bite (hard), so don't hesitate to reach out.Thanks! 1. Color is meaningless 2. Position matters most 3. Nobody reads4. Navigation is failure5. Content is good, UI is bad6. Procrastinate away complexity7. User testing kills babies8. Coders learn from terrible examples9. Coders love absurdity Four truths about design: Three truths about process:Two truths about coders: What if the person doesn't have a last name?What if their last name is expressed as a mathematical equation?What if their last name is longer than 255 characters?What if their last name contains tab characters, multiple paragraphs, non-breaking spaces, emojis, parentheses, commas, single and double quotes?What if their last name changes between the time when they type it in and the time when they submit the form?"
        },
        {
            "title": "Nobody Wants To Use Your Product",
            "date": "January 14th, 2016",
            "text": " Every morning, designers wake up to happily work on their products, be they digital or physical, with an inner belief that people will want to use their products and will have a blast doing so.Perhaps that is a slight generalization; however, as designers, we tend to have a natural desire for each project we work on to be the best it can be, to be innovative and, most importantly, to make a difference.Oh man, my product will be amazing! It will be full of features, options and settings. People will use it every day and love using it!- A designerHere is a little revelation. People are not really into using products. Any time spent by a user operating an interface, twisting knobs, pulling levers or tapping buttons is time wasted. Rather, people are more interested in the end result and in obtaining that result in the quickest, least intrusive and most efficient manner possible. And these are two fundamentally different concepts - usage versus results - which, at the very least, differentiate good product design from poor product design or, on a smaller scale, a good feature from a bad one.I still find a lot of products today, be they digital or physical, to be too complex and feature-driven. Shouldn't we as designers instead be looking to remove complexity for users as much as possible or as much as allowed for by current technology, by making our products fit more seamlessly into their daily lives and routines? I feel that we simply don't and, more worryingly, that we still haven't learned lessons from the past.If we go back some 15 to 20 years ago, web design was all about visual design. Older readers will recall the days of 2advanced Studios1 and other similar blockbuster websites. They were gorgeous, with amazing Flash animation and carefully crafted images and pixels. If we were to look back at these websites today through the filter of modern UX design, though, we could say for certain that the experience at that time was less than desirable.Would anyone today be willing to stare at a loader for five minutes before entering a website? Perhaps, if they were desperately trying to buy concert tickets - otherwise, the answer is always certainly \"no.\" There were even preloaders for loaders, because loaders were so intricate! These websites were essentially crafted to be admired; they were pieces of art, and the actual benefit to the user, the result, was secondary, if that.Perhaps in those early days we didn't know any better because we humans rarely learn from other fields, and we are terrible at translating knowledge learned in one field to another. No studies or best practices for the web were available, but over time, as digital design has grown (encompassing interaction, visual, interface and motion design), we have come to the realization that the less time a user spends on a website - especially a tool or service - the better.Who would have thought in the early days of Google Search that Google would want to shave milliseconds from the search process so that users could get away from Google as quickly as possible. Google was among the first digital companies to realize, or simply to inherit knowledge from other industries at the time, that time spent with the product itself was wasted time and that the quickest route to the result is the best way to design.When you think about it, do you really want to work on heating up your food, or do you just want your food to be hot? This is why microwave ovens can be found in basically every modern kitchen; it removes as much work as possible from the process of heating food. Of course, quite a lot of manufacturers still do not realize this and make their microwave ovens overly complicated with too many buttons and settings.A typical manufacturer still thinks that users stand in front of their microwave and ponder for a few minutes which precise setting to use and then press a bunch of buttons to execute their carefully crafted heating plan. In reality, one needs only two settings: power and time. Honestly, in a lot of cases people need just the time setting. The usual scenario is that you toss the plate of food into the microwave, set the timer and that's it.August Smart Lock2 is on the same path. August realizes that users do not want to manually lock and unlock their doors. What users actually want is to have their house locked when they are away and automatically unlock as they approach the door. (A digression: Actually, that is not all what users want. Users want security, which could potentially be solved through means other than a locked door, but let's not get into that.)While we are on the issue of security, do people really want to have to type a password into their phone to unlock it, or do they simply want their phone to be accessible only to them (and other \"whitelisted\" people), remaining locked for anyone else? That is why Apple's introduction of Touch ID was such a big deal; it finally brought about a reliable and user-friendly method of locking a phone, while removing all of the complexity of unlocking it. Using Touch ID feels as if the phone is actually not locked at all - as soon as you press the home button to wake up the phone, the phone just unlocks.This difference in approach - building for features versus building for result - can be seen in numerous products today, both digital and physical. The main reason why some products are great is that they take the load off of users and assist them in making decisions. If you observed these products from the outside, you'd think that their manufacturers do not want people to use them; on closer inspection, people do use them but in a seamless manner, still reaping all of their benefits.You are probably familiar with Nest Thermostat. What makes it great is that it actively learns about the behavioural habits and patterns of the people living in the home - and so unintrusively that users become totally unaware of it. Sooner or later, they forget that the thermostat is even around, because their home is always at the optimal temperature.We all love Dropbox. But do we really \"use\" it? Dropbox figured out a long time ago that people really do not want to sync files across multiple devices, but rather want to manage and sync from one accessible source. Even before Dropbox existed, we could do all of that syncing ourselves: FTP files to a server, go to a second computer, download files from the server, and so forth. But why go to such effort to keep files in sync? The majority of users do not want that; they just want their files to be kept in sync.In the early days of Google Search, the flow was this: click the search field, start typing, hit enter, and only then would search results be displayed. Furthermore, the ordering of search results had barely any logic behind them, resulting in all sorts of weird suggestions on the first page. Many will recall having to go to page two or three of the search results. Gasp!However, as soon as technology and design allowed for it, Google began to remove all unnecessary components. Today, the cursor auto-focuses on the input field, and search results are displayed instantly upon the very first character being typed, with results sorted by Google's all-powerful machine brain, which returns the most relevant results at the very top. Keyboard shortcuts also activate links quickly. Hitting \"Tab\" triggers a small arrow that can be controlled with the keyboard arrows, and of course hitting \"Enter\" launches the highlighted link.Google Search provides answers to a lot of questions right on the search results page. It is already common knowledge that it is an excellent calculator; with time, it has evolved to provide even more useful data and answers.For instance, you'll find company addresses, hours of operation, currency rate calculations, stock information and more. As a result, there is often no need to proceed to another page, unless more detailed analysis or information is required.A good example of a government website, GOV.UK9, presents key information for each major item at the very top of the page, freeing visitors from having to find key information in large blocks of text. The website goes a step further by placing key information in the description meta tag, making it immediately visible right on the search results page.Amazon is also working wonders with Dash12. Dash has a simple yet brilliant design, freeing the user from having to interact directly with Amazon's website at all. The button, purchased from Amazon's website, is hardcoded with a single brand product.During the rather simple set-up process, done via a phone over a Bluetooth connection, the user specifies a particular brand's item to be baked into the button and selects a size, flavor, color and so on, depending on the available options for that particular item. Once Dash is set up, pressing the button automatically executes a chain of commands, resulting in that product being delivered to the owner. All of the magic takes place behind the scenes.Furthermore, when Amazon Prime Air's drone-delivery service finally kicks in, an ordered product will likely be able to be delivered to its destination within minutes.And I know you're thinking about it: Amazon Sense paired with Amazon Teleport - a detector in the house that identifies when there is no toilet paper left, resulting in the paper being instantly restocked. People do not want to have to drive to a store, walk the aisles, wait in line, interact with a cashier, drive back, and then run up to the toilet all red-faced. All users want is for toilet paper to be stocked in their house at all times.Apple realized that most users do not want to go to the effort of always checking whether their applications are up to date. So, it now pushes updates automatically, while the computer is in sleep mode or not in use, meaning that users will come back to find new versions up and running, with little or no effort on their part.At this point, I might be beating a dead horse, but in stark contrast to Apple, consider how Adobe handles updates to its Flash player. For each update, a Mac user is required to download a new DMG file, manually start the installer and restart the browser. It is a painful process that makes the user work. Is it too much to ask these days for the latest version to be automatically installed at all times?You probably know where I'm going with this one. As mentioned, it's such an obvious roadblock. Users do not always want to have to create accounts; they just want go in and explore a website. Nobody wants to go through the annoying process of typing in an email address or, worse, a username (\"Sorry username is taken… Sorry, username2 is taken as well.\"), a password (\"Sorry, your password needs to contain one uppercase letter, one lowercase letter and one number.\"), their blood type, their mother's maiden name, and then still have to verify their email address. Nobody wants to use a registration form. Users just want to get stuff done without messing around with the interface.Removing as much as possible from an interface is a rather old concept. Books have been written21 about it, talks given, too22, and hard-hitting designers such as Oliver Reichenstein23 have been quoted over and over again24. People such as Luke Wroblewski25 are suggesting26 that we may have taken this paradigm a step too far, as demonstrated by the no-interface approach of the Apple Watch as well as newer versions of smartphone operating systems, which force users to memorize intricate ways to navigate an interface with various gestures.Yes, designers sometimes take things too far, sacrificing usability for aesthetics and slickness. However, when design (as in \"how things work\") is done properly, the reduction ultimately benefits the user.Some people still don't seem to really understand this concept of reduction and removal of every aspect of a design. This has brought us to the point where production people (not so much users, but rather people who work on the web) are beginning to feel that all websites are starting27 to look the same28.Headers have been made to look the same. The look works because users instantly understand what is going on: logo on the left, log-in form on the right, perhaps search as well. It's standardized because it causes the least amount of friction, the least amount of having to \"use\" the website, and it gets users to the results they need.All websites of a type are the same - all online stores are the same, all blogs are the same, all news websites, all portfolios. Users recognize patterns, which is a good thing because they are able to complete their tasks more quickly. They do not have to worry about where things are. They simply ingest the content, instead of trying to decipher mysterious patterns, unreadable fonts or tricky interactions.We've made registration forms the same because they work: email address, password, and then click the button. Or, for even greater simplicity, just click a single button to log in via Facebook, Google or Twitter.We've made imagery all the same because it works: big clean photos, with full-screen zooming for details. We show smiling happy people because psychology tells us that people relate to this. We show high-quality photos of vacation destinations because travelers are attracted to these views. They convert better.We've made big call to actions with ultra-readable text because users do not want to look for these buttons; they just want to complete their task. We obsess over typography, painstakingly setting font sizes and pairing typefaces, for the sole purpose of minimizing reading time and maximizing a brand's visual impact. We do this because users do not want to read; they just want to experience the content.We know what the past looked like and what the present looks like, so what's in store for designers? I think that interfaces will be further reduced, and stuff will just happen and information will surface on its own, not unlike Nest Thermostat and Google Now. Fresh milk will be delivered to your door just as the last bottle runs out. Applications will be updated on their own, rather than have to be updated manually. Phones will be magically charged all the time, instead of having to be charged manually.Maps will give driving directions, automatically bypassing heavy traffic. Information will be made available according to the environment of the user. Registration forms will not pester people. Hopefully, passwords will be removed altogether, replaced with either reliable fingerprint reading or something even better. (Another prediction: Apple will integrate Touch ID into the trackpads of its laptops. Not this year, not next year, but sometime soon, Apple will finally take the password behind the shed and put it out of its misery.)Understand that your product is a necessary evil. Realize that, for the user, it would be best if your product did not exist at all and yet the results of the product somehow magically did exist.Expand on and modify known patterns only when absolutely necessary and only if it really makes it simpler for the user to reach their goal. Reinventing hot water, just for the sake of reinvention, makes no sense. (I know it's just a saying, but we actually do need to reinvent the wheel. If we didn't reinvent the wheel, we would still have the stone wheel. Hot water does not need reinvention.)The time will soon come when either you or the competition will come up with a better version of your product, and that product will have a smaller footprint in the user's life, offering greater benefits.We have to add as little complexity as is technically possible to get the user to the result. Suppose we are tasked with redesigning the commuting process. Guided by our core principle, we would start with the premise that people do not want to commute; they just want to be where they need to be.Figure out a way to remove such complexities. Figure out how to remove entire pieces of your product or interface, while keeping the user on the path to the desired result. Replace those evil elements with cleverly coded software, automation, sensors, data-crunching, prediction and better hardware. If something is not technically possible, that's a great opportunity to create new value! Invent stuff!So far, we've been talking about task-based interfaces, but what about information design? Even though nobody wants to use your product or website, that doesn't mean there's no room for creativity in information design. We can still add style, as long as it contributes to the overall experience. As you will see in the following examples, that translates into better comprehension of information:It's up to us to remove complexity for the user and to minimize the footprint of our product in the user's life. Any amount of time users spend operating your product is time wasted, and time is the one resource they cannot get back. Remember Larry Tesler's law of conservation of complexity, and start offloading complexity from the user onto yourself.Yes, this requires a lot of work, but that is how you will differentiate your product from the competition's. Guide the user to the same (or better!) result through fewer steps, less friction and less work.Theoretically, the ultimate goal for any product is to be completely removed from the user's perspective. Work towards that goal because nobody wants to use your product.People just want the benefit of using it.(md, ml, jb, al) ↑ Back to top Tweet itShare on Facebook"
        },
        {
            "title": "On Icons",
            "date": "Thu Jun 02 2016 08:06:51 GMT-0400 (EDT)",
            "text": " **Icons save space. Icons look crisp. Icons give quick answers to hard questions: How do we make it nicer? How can we brand it? How do we make it more fun? We ♥ icons. Until they start messing with our minds. **Icons come in 666 flavors. Icons on products, in architecture, in computers, in lists, on buttons, for the Web and for apps, for iOS and Android. Icons on toolbars, labelled and unlabelled, styled and standardized, colored or monochrome, in fonts, PNGs or as SVGs…There are tons of free and paid icon collections, vector and pixel, 2D and 3D, and if you want to write rules on how to deal with them all you'd need to write a big icon cookbook. There are so many damn icons that the devil might trick you into solving all of the world's design problems with them.Watch out though: If you answer every design question with \"Icon!\", one day Don Norman may knock on your door and, when you open it, he will look deep into your eyes and say:\nInscrutable icons litter the face of the devices even though the research community has long demonstrated that people cannot remember the meaning of more than a small number of icons […] Who can remember what each icon means? Not me.1\nIn this case, Don Norman is lecturing his former employer Apple. Some outstanding examples of Apple's iconitis can be found in iTunes, Mail and the iOS dashboard.The iTunes icons gained Icon Bogeyman rock star status on Twitter. The Apple Mail customization screen offers a nice sample too: How many icons from this choice of Apple Mail for OS X can you identify without labels?What does this tell us? Not much, except that icons save space and great icons look fresh. But unless you have designed and assigned them yourself, their clarity is suspect. An icon can represent a thousand different words, and that is precisely the problem. Anything with a thousand possible meanings needs a lot of context to become unambiguous. Here is the same choice of icons with labels:Labels explain icons. Adding labels improves usability. Which is why some cold-hearted people claim \"labels are the best icons\". Logically there can be no confusion if you use the right labels. So why don't we just use labels and drop icons altogether?Functionally, a \"label-only\" design is as clear as day (if the IAs have done their job), but something unsettling happens if you pull all the graphics from a graphical user interface. The temperature drops to 0° Kelvin. It doesn't look crisp and fun anymore. A design positivist may not care about crisp and fun. Every other human being does. We tested this assumption in iA Writer. The feedback we got during the period we eliminated all icons was a resounding \"Don't!\"Maybe the questions we should ask are not \"icon or no icon\", \"label or no label\", but: How and when do we use icons only, labels only? When do we use icons plus labels and when shouldn't we? Let's see…Icons are pictures. Pictures can represent static objects fairly well. You can use icons without labels for clearly identifiable objects that represent clear concepts pars pro toto. Like airplanes for airports, human figures for toilet signs, trash bins for a place that holds documents we are planning to get rid of.While icons depict tangible objects fairly well, the challenge to depict actions and abstractions with icons has given many a designer a splitting headache. Worse, in human-computer interaction most icons are inevitably actions and abstractions. 2Representing actions with a picture is possible. You could animate icons but that would be distracting. A better approach is to metaphorically represent the action. In the context of a computer desktop, the icon of a printer represents \"print\", the trash bin represents \"delete\", the scissors represent \"cut\". Printers, trash bins and scissors are visually characteristic and, as each object has one specific purpose, the intended action is made clear.For more complex actions or abstract functions, pictographic representation has its limits. And there is not much hope this will change soon. After 40 years of human-machine interaction, we still haven't found universal symbols for core functions like Save, Copy or Paste.\n\"One trouble with any pictographic system is that it is limited only by the number of things in the universe that can be discretely represented in an image.\" 3\nNaked icons on functional UI elements cause usability problems. 4 The best way to communicate a function is not a picture, but precise words, or more precisely: verbs.\n\"when it comes to the always imperfect conveyance of thoughts from one person's mind to that of another-language is by far the best means we humans have at our disposal, and written language lends both longevity and precision to those means (we seldom revise what we speak, but I have revised this written sentence several times).\" 5\nVisually, single graphic symbols seem simpler and more appealing than busy words. But the closer you get, the more the sirens become monsters. As you try to read and understand them, they turn into the strange signs of a language you do not speak, then grab the interaction and bite its head off. Naked icons clean up the UI's aesthetics at the expense of cluttering its logic. They obscure clear functions by masking them with a layer of dark symbols.\nAn icon is a symbol equally incomprehensible in all human languages. Whatever language you know, you have to learn the meaning of an icon anew. There's a reason why humans invented phonetic languages where just a few symbols can be combined to produce any word. I've met many interface designers who assume that you should use icons in an interface. I ask, \"Is this the best interface that can be designed, or is it spawned out of habit and convention?\" Most designers just stumble along in the present paradigm, ignoring the decay underfoot.6\nIcons look fashionable and superficially solve space issues. Of course, Apple is not the only one guilty of overuse of naked icons. Google's Material Design is spiked with proprietary symbols. Here is Gmail for comparison:What do we see? Gmail's icons look simple, but they force you to think twice to understand them-if you can decipher them. If you focus and concentrate a bit you may guess what they mean. Your spacial memory will help out over time, but the icons remain hard to remember both short- and long-term. In a mail app, your focus and concentration should be on understanding and writing text, not on deciphering the interface.But, wait! Doesn't Google measure everything? They surely know what they are doing, right? Google is scientific! Google goes for an icon-only approach, and Google is never wrong. Thus icons must be right! Maybe, but what is right for Google or Facebook may not be right for us. As we will see later, Google might have reasons beyond natural science in choosing icons as the default over labels. 7 Be that as it may, Gmail also offers naked labels.Images can be interpreted in different ways. Depending on context, even the omnipresent magnifying glass can be read as \"search\" or \"enlarge\". While the meaning of a word depends on context, it can still only be spelled one way. What happens if you just replace all icons with labels? Logically, label-only should work better than icon-only. Gmail's settings allow you to change Gmails's icon-only bar to a text-only version:What happened? Text now communicates clearly. However, it feels less humane, less fun. It feels more like work, it feels cold, and, surprisingly, it feels more complicated. How is that possible? Labels alone are rationally less complicated when you use them, but they feel more complicated by their mere aesthetics.Labels are the rational choice. Rationally structured and labeled functions are the heart of human-computer interaction.Icons alone are the emotional choice. Well-designed icons have a positive emotional impact. Emotional design quality is not measurable, but this doesn't make it less real.\n\"It is not enough that we build products that function, that are understandable and usable, we also need to build products that bring joy and excitement, pleasure and fun, and, yes, beauty to people's lives\" -Don Norman, The Design of Everyday Things\nHumans are both rational and emotional beings: \"Your brain does not process information, retrieve knowledge or store memories. In short: your brain is not a computer.\" 8 If anything on the subject of icon usability has been proven again and again it is: \"Icon plus label works better than icon or label alone.\"Icon-plus-label comes with the emotional benefit of the Icon and the rational benefit of the Label. Labelled icons always work. If the icon fails, the label explains. So why not just always go with the winning pair?The problem with icon-plus-label: It is a compromise. It decimates the emotional benefits of the icon and the rational simplicity of the label. It doesn't save space or create a calmer overall look. It uses more vertical space, and it generates more noise than icon or label alone.Emotionally, we prefer the icons. Rationally we'd like to replace all icons with labels. In theory, icon-plus-label is safe. In practice, there are no silver bullets in design.There is no safe design, but there are better and worse compromises. We design for humans. Humans feel and think. Let's not get too relativist though.Like any technology, it helps building user interfaces on top of a rational, functional structure. Design is not a natural science. It's a practice that benefits from science and measurement, yet the full quality of a design cannot be objectively assessed in theory. User tests and analytics do not replace your designers, but verify their assumptions. There is more in a product than the designer can premeditate and there is more in a design than we can measure. This \"more\" can only be reached when we talk to humans working with it.Human-computer interaction should be built on a rational structure. And as the product evolves it has to take into account that as human beings we cannot be pre-calculated, but we can always be talked to. This is how icons, color, rhythm, whitespace, typography, and all the beautiful elements that make design pleasurable help improve human-computer interaction. They make it less rational, and more human.Do not look for reasons to use an icon because your design feels empty or cold or doesn't work as well as you expected. Icons do not fix a structurally broken design. Add icons at the very end of the design process, do not play with icons while working on your wireframes. Pictures can stand for 1,000 different words; strong information architecture finds the right notions and puts them in the right context. Get your rationale straight before appealing to emotion.An icon stands for a section or a function, and represents what its label should communicate with a simple, clear term. Whether it communicates its function clearly depends on its conciseness as text in context-the notion an icon represents must be clear and concise in the context it is used. The most perfect icon will be of little use if the notion it represents is vague, or the context fuzzy. So before discussing the right icon or even the right visual language of icons, ask yourself: What notion does it stand for? Is the notion correct? Is it clear? Does it work in its context? Icons feign meaning, as they can be loaded with various notions without friction. Words in context are less malleable. The use of words is more regulated than the use of pictograms.Once your structure is solid, and you get to the point where icons, delight & Co. can come into play, follow this simple rule: Use as few icons as necessary-but not fewer.The icons you use need to be handled with maximum care. You cannot invest enough time in getting your icons right. Icons need to be recognizable by themselves, they need to illustrate the notion they represent clearly, and they need to work together with all other icons and notions you use, in context.In that sense, icons are a bit like adjectives and adverbs in regular text. By deleting all of them, your text will not magically turn into a literary masterwork. You need to erase the superfluous ones, find the ones which are needed, and replace the fuzzy and ornate with the precise.So, are you are ready to train your icon-killing instincts? Working on this article for the last six months, we decided to make an icon shooter game for you to get in shape. Some write articles for apps, we write apps for articles.There is a lot to be said about the adventure making our first game. We have learned a lot. And if you think this is the extent of our craziness, you haven't seen the two thousand icons in the font we recently created: It allows you to write in icons. More on all this another time. Now, go check out the game. It's free."
        },
        {
            "title": "Peek Inside a Facebook Design Critique",
            "date": "Mon Jul 18 2016 12:24:55 GMT-0400 (EDT)",
            "text": " At Facebook, where we're working to make the world more open and connected, an inherent part of our mission is to share how we create the things we build. We recently decided to begin sharing a critical part of our process as a result: the design critique.By showing how design critiques at Facebook typically go, we wanted to highlight what makes for a good critique and what can often get in the way. We asked designers around the world to collaborate with us on this, inviting them to share work to be critiqued using the hashtag #FacebookDesignCrit.A dozen of you shared your designs, and we're ready to show how our first collaborative critique went.For this, we reached out to New York based design student Jon Lee to discuss his design for a local workspace discovery app called Nearspace.Six members of the Facebook design team - Nathan Garvie, Paola Mariselli, Jeff Smith, Jasmine Friedl, Geoff Teehan, and myself, Tanner Christensen, as facilitator - sat down (virtually) with Jon to discuss his project and critique the work.As you read, we would love to have you leave us comments on what you think went well during this critique and what could have been improved. Jump to the bottom of this post to read a few of our own highlight takeaways. Tanner: Jon, can you take a minute to quickly summarize the problem you're solving?Tanner: It looks like you made some good progress and did a bit of research. What specific part of this are you looking for feedback on?Tanner: Before we do that, does everyone understand the problem that we're looking at here and agree on what we're solving for?Jasmine: Can I first ask a clarifying question? You talk about the problem being mostly students having a hard time finding places to work, was it just students you designed this for?Jasmine: I know you're asking for feedback on the end result, but can we dig a bit more into the problem, making sure the end result is meeting the needs of that problem? I'm imagining if a person doesn't have a work space, why is that a need? Is it something where working at home isn't an option? They don't have an office? They're on the go, meeting clients? What are the characteristics of the problem?Tanner: It's interesting that you're talking about the emphasis being on something quick and efficient and also comfortable. The core part of the app-looking at the screens now-isn't necessarily about time efficiency or how close it is to you. Right now it's more about the aesthetic and these filters. What led you to focus on this filtered design rather than something that's more efficient for users?Geoff: I think one thing you want to understand is are people actually going to add places? Are they not protective of their space since it's limited? No one is incentivized to add a place if they've found their own, right? To share just means less likelihood that they'll be room there in the future. So it's one thing to be aware of that you may want to do more research on, how willing are people to share a space?Jasmine: I think you do have a lot here that you could still use to make some assumptions and move on. Let's go back to when we were talking about making a decision based on time. You have this brainstorm cloud here where you have a whole cluster of categories: you've got travel time, you've got public transportation, you've got distance. I could see you adding: do you have to wait in line here, are there open tables, things like that. Sometimes, even though you haven't had time to dig in and talk to 20 people, you still have a good guess as to what you could move on.Jasmine: I think what Tanner had zeroed in on is that if your goal is solving for people-both students and the regular working force, who don't have a lot of time-the app you've shown isn't really highlighting that problem. We're talking about limitations on research and how it's hard, especially for being a school project, to get to an end result that is verified and validated. If you looked at your problem and said: \"Which of these ideas address the problem?\" I think you can answer that through what you've already explored.Nathan: One thing I'd challenge you to think about is what's the size of an actual work location pool you're going to start with? It might be more efficient just to start with a long list of the places nearby, within a radius. If you're dealing with a small pool of work locations, you might not even need the filters to start.Jeff: I agree with that. I do think one other thing that filters are good for is helping us make trade-offs for a service like this. You may say: I want wi-fi or it's not important, I need a power outlet or not. For a lot of people, if the problem is \"I just need a place to work,\" then it's not about filtering. You may just show all the information in the list view, you're not really displaying that much now. You have some things like a star rating, which isn't really telling you a lot. Is it because it has a lot of seating? Good wi-fi? Is it because it's mostly available? I don't want to get too technical, but try thinking about taking those filters and bringing the information into the actual list items.Geoff: When it comes to the visual design, you could probably consider thinking through what information you're surfacing, along the lines of what Jeff brought up. To me, it seems like distance and name are probably the two most important factors that I want to see in a list. Right now, the distance is actually the most reduced of all elements on the page.Paola: Were you thinking that either of these cards would be tappable and would lead you somewhere else?Paola: Always go back to your original problem statement so you can verify that everything you're going to release is actually meeting and solving that problem. For example, if you're considering keeping a search bar, and the original intent is for people new to an area, then what exactly would you be searching for? If you're new to a place, you'd likely be searching not for the name of a place, but for a type of place-a book store versus a cafe.Jasmine: I agree, what makes this different from Yelp? Right now you're getting a lot of the same things.Geoff: That's a really good thing to think about: the competition. How is this different? How are the needs of my users different and what can I do to help them that's going to assess some of those needs? For example, most photos on Yelp are going to be of the food. For this, people don't care about that- they want to see the work space, they want to see where the outlets are, they want to know how good the wifi is, what times of day are busy, how many seats there are. Think about all the things that you're going to be considering and then, again, how they play into your information hierarchy.Jasmine: I think Jeff had a good thought around that. You literally go through and try to identify what are the core pieces of information that are important to a user and then list those out and put them in a logical format.Geoff: Yeah, I think for something like this you can use your gut a little bit, or you can talk to other people. One thing that can really help is to think about not just yourself in a certain scenario but yourself in many different scenarios. If you're jammed on time and it's 11:00 PM, what do you need to know? Is this place even open that late? You wouldn't think about that if it's noon. Think about different contexts and rank those to consider all the information you'd need and when it's most important.Paola: As long as you try to solve the core problem for each of these contexts to try to make conscious decisions about why you're solving them.Jasmine: It's okay if you're looking through your list of things-like I'm looking at your brainstorm again-and saying: \"this doesn't apply.\" Getting rid of options can make your job easier. Maybe food doesn't even matter in this, maybe you could actually be looking for locations that specifically aren't restaurants.Tanner: We're just about out of time, does anyone have anything to say in closing?Nathan: You asked for feedback on visual design and we gave you product critique. I think there's a lot of things we probably could have gone through with a red marker and give you feedback on. One tactical thing I would suggest is to go out and find articles on UI design. Things like \"12 hot tips\" that will help you deal with things like list lock-ups, margins, and how to overlay text on images. Those are good starting points as you experiment. Beg, borrow, and steal if you see something in another app or service, try to reproduce it and see how it works for you.Jasmine: You could get a lot of answers on that, it really depends on what role you're looking for and how important that is versus other factors. One of the reasons we went and did more of a product critique for this is because you can have the best looking app, but if it doesn't work, no one is going to use it. Those things really going hand in hand.Tanner: All right, hopefully that was helpful. We went over a lot of stuff here. Do you feel like you have a good sense of what you would do next with this product based on our feedback, Jon?Tanner: Thank you for sharing your work in such a public forum. We're going to learn from this too. Now that we've had some time to reflect on how the critique went, we wanted to share a bit about what we learned,Critique can be a great place to develop a deeper understanding of the problem landscape.One of the more surprising takeaways from the critique was just how much time was spent not focusing on what Jon initially asked for. He came into the critique looking specifically for interface and user experience feedback, but the group ended up spending all 30 minutes discussing the problem the product design was attempting to solve in the first place. This was an important direction that Jon may have not initially considered, as Jasmine states:Context up-front makes a world of a difference when it comes to presenting your work for critique.Jon came to our critique with a clear story of how he landed on the concepts for Nearspace that he had. Being able to briefly show our team his original comps as well as more polished versions, in addition to a brainstorm cloud, helped guide the discussion.In several instances we referred back to Jon's original problem statement and brainstorm doodle when addressing a question related to the problem he was attempting to solve.The best feedback is inquisitive, not prescriptive.By asking questions about the design direction-and the problem being solved-the conversation was able to go where it needed to, rather than where any one person felt it should go.The result? Both Jon and the group felt like they had landed on an improved vision of where the product could go, despite the fact there was no concrete \"vision\" of what that experience might look like.When it comes to critiquing others work, questions help drive the conversation forward. As I've written before:At Facebook, we know that critiques work best in person, and that transcribing a critique isn't the best way to share how it went. We're considering this the first of (hopefully) many open critiques. As such, we're viewing it as an experiment.If you found this helpful and want to participate in future critiques, leave your feedback on this post or write your own response and we'll take a look. You can also continue submitting work for us to review on Medium by tagging it with the hashtag: #FacebookDesignCrit. Kicking off the critique What We LearnedJoin Our Next Critique"
        },
        {
            "title": "Product as Hero Storyboard",
            "date": "Sun Apr 24 2016 21:19:37 GMT-0400 (EDT)",
            "text": " Long time readers know I am completely obsessed with story architecture, and use it in many things: writing (of course), presentations and even product design. I have a version of the story that is particularly useful when trying to design a meaningful product customers will love and adopt. I think of it as putting the story back into storyboards!\nPanel 1: A character and a motivation.The character is the customer or user of the product you are making.What is the difference between goal and motivation? The goal is what they want to do, the motivation is why. Knowing the motivation can help you see the bigger picture, and can lead to more complete or innovative solutions.When I teach this, I usually say, \"I've been meaning to lose weight for while, because I love my daughter and hope to dance at her wedding some day.\"Your product can now focus on weight loss, or it can help the protagonist live a healthier life.You can also include setting- where the protagonist deals with this challenge, in order to better understand the environment in which your customer experiences her challenges and makes her decisions.Other examples:Goal: Track Steps. Motivation: wants to exercise. Wants to brag. Curiosity about how much she travels.Goal: Find a taxi. Motivation: wants to get across town for an important job interview. Got lost in bad part of town, and needs to get home.Make the motivation something universal, that anyone on your team can relate to, in order to create empathy.Panel 2: Inciting incident\nWe all have goals and motivations, but what finally prompts you to try to solve this challenge?In the story, I say \"I've been meaning to try to lose weight for some time, yet months go by and I don't start down that path.\" Sound familiar? Even though weight loss is very important to me, I can't get started.But there are many things that might get me to change. A new number on the scale I never saw before. A relative who get diabetes. Can't wear my favorite jeans…This is important, because if you know what motivates your customers to take action, you can capture that commitment to change and get them to consider your product or service. You might even understand where to message your product.Panel 3 is StrugglesHow has your customer already tried to solve this problem?What are they trying to use now?Either competitors, or their own home-grown solutions.Why don't those work?You can expand this to multiple panels in an 8-panel format, covering more things your protagonist has tried.\nPanel 4 is the \"Black Moment\" or Crises.This is the moment in the story where all is lost. The customer believes she will never solve her problem, and things are getting worse and worse.The doctor tells our protagonist her weight is going up, and so is her blood sugar, blood pressures…her health is in danger! She has to solve this problem!Stakes are a key idea in story. It's what it costs the protagonist if they don't solve reach the goal set in panel one. This is a great place to show the stakes, or raise them. Panel 5: Product to the rescue!Your character discovers your product.Here we see the fabulous delivered diet food that will please any gourmand's taste buds. Or something like that.You can make it more specific and show how the protagonist finds it. A commercial, a billboard, a friend or doctor recommending it…Placing the product into the climax was inspired by Kendall Haven‘s research on the biology of story. Our hero's discovery of the product at the turning point gives the protagonist agency while still placing the product in context of her life.This panel should speak to the struggles earlier. Why is your solution better?\nAnd finally, taking a page from the hero's journey, show how your customer's life is better.Panel 6: ChangeHow has the customer changed?Are they happy now?Productive?Glamorous?Thin?Alive?\nThis simple story places your product (or service) in context of a real problem and a person's hopes and dreams. With a little thought, you can make sure you are making something that really will help.In the workshops on innovation I run, we show this cartoon to potential customers, in order to familiarize with the product promise before doing participatory roadmap exercises. It provides context for people as they prioritize features.I was chatting with a consultant friend today, and she now shows it before running product prototype tests. The cartoon helps get people in the right mindset to evaluate solutions.You can also use this to validate if you are solving the right problem. Walk a customer through this, and ask them to mark where their situation is different, and where it is the same.I highly recommend Cartooning: Philosophy and Practice by Ivan Brunetti if you enjoy the highly geometric style I used in this story board, or just want to get better at cartooning.I also recommend checking out my post, The Shape of Story, to get ideas for other elements of story you can use."
        },
        {
            "title": "Reducing Cognitive Overload For A Better User Experience",
            "date": "September 9th, 2016",
            "text": " The best user experience is the one the user doesn't notice. It appears smooth and simple on the surface, but hundreds of crucial design decisions have been made to guide, entertain and prevent trouble.If the user experience design does what it's supposed to do, the user won't notice any of the work that went into it. The less users have to think about the interface or design, the more they can focus on accomplishing their goal on your website. Your job as a designer is to give them a straight path to their goal by clearing out the obstacles beforehand.\"Getting in the way of a speeding freight train usually doesn't end well. It takes a lot of effort to shift the course of something with that much momentum. Rather than forcing people to divert their attention from their primary task, come to where they are.\"- Luke Wroblewski, Product Director at Google\nAfter all, consider the alternative. Complicated and confusing interfaces force users to find solutions to problems that shouldn't be there in the first place. A user who feels confused by the options, the interface, the navigation and so on will likely feel overwhelmed in their thinking process. Even momentary pauses are enough to rip users back into the reality that they're sitting in front of their computer.This excessive thinking is called cognitive overload, and here we'll explain how you can avoid it. First, we need to explain what exactly in our brains is at risk of being overloaded.Cognitive load refers to the total amount of information your working memory can handle. Cognitive overload happens when your working memory receives more information than it can handle comfortably, leading to frustration and comprised decision-making.But what does that mean, really? What exactly is working memory? And what does this have to do with design? The first step is to understand the origin of cognitive load theory.While the study of cognition dates back centuries, it wasn't until the 1980s that Australian educational psychologist John Sweller4 applied the research to instructional design. Sweller sought to discern the best conditions for learners of any kind to retain the information they were taught. In other words, what are the best strategies for making a lesson stick?Sweller's work culminated in the 1988 publication of \"Cognitive Load Theory, Learning Difficulty, and Instructional Design1285\" (PDF), reworked and republished later in 1994. His work incorporated the data organizational constructs known as schema6 and outlined both effective and ineffective teaching methods, but his findings on the limitations of working memory are what designers tend to find most useful.In many ways, Sweller's work expanded on the information processing theories7 of George Miller8, a cognitive psychologist and linguist of the 1950s who tested the limits of short-term memory. Miller's research has since ingrained itself in digital design, especially the technique of chunking639, discussed later in this article. Miller was also responsible for the paper \"The Magical Number Seven, Plus or Minus Two10\" (PDF), which prompted many designers to limit menu items to between five and nine - although this technique has since been demoted in digital design11.While these strategies were originally intended for the field of education, they apply equally to user experience (UX) design. As we'll explain, the same techniques that enhance memorability and learning also reduce user annoyance.What if every time you wanted to open the fridge, you had to answer a Sphinxian riddle like, \"What walks on four feet in the morning, two in the afternoon and three at night?\"It would get old after a while, right? But according to cognitive load theory, that's the same kind of frustration users feel with poor UX design.To understand cognitive load theory, you have to understand working memory14, the brain activity used to complete a task in the moment. Working memory must sort through all external stimuli and short-term memory items, as well as draw from long-term memory if needed. Think of working memory as computer RAM and long-term memory as the hard drive.Working memory and short-term memory are often used interchangeably, but they are slightly different. Working memory handles the processing of information, whereas short-term memory is more like a scratch pad15 for information that's important but not important enough for long-term memory.Let's look at this very article to explain the differences. As you're reading, you might come across an unfamiliar concept in blue text. Your working memory needs to know what the concept in blue text means in order to comprehend the greater meaning of the article. Your long-term memory knows that blue text means a link, so your working memory knows to click the link for more information. At the same time, your short-term memory remembers your place in the article, so that you're not lost when you return from the external page - but by tomorrow morning, that location will have been forgotten.The influential writer Steve Krug is the one who popularized the application of cognitive load theory to web design. His book Don't Make Me Think12919 is considered a seminal work by many designers.Among the many valuable lessons in the book, here are some of our favorites:Besides Krug, many others have elaborated on the role of cognitive load theory in design, including the usability gurus at Nielsen Norman Group20.To summarize, every time the user has to pause to think while browsing a website - even for an instant - their working memory is weighed down. Questions like \"Is this clickable?,\" \"Where's the home button?\" and \"How do I save?\" can ruin the user's experience.Many design variables have the potential to tax the user's brain, and many more variables in the user's external life and environment are beyond your control. A user could be worried about a work presentation the next day, or there could be loud construction right outside their window - these things will drain their working memory, regardless of how simple your website design is.And let's not forgot that each user has a different capacity for working memory. Easygoing users will be able to focus on your website better than those who stress about every little thing. Users who don't regularly go online will have to think more than experienced web users.While we can't universally quantify cognitive overload, we can isolate the design mistakes that mostly commonly cause it. Below, we've categorized the most prevalent types found in web design, along with the best practices for avoiding them.Every step the user takes adds to their cognitive load. Too many unnecessary actions will derail the user's train of thought or irritate them. Because the user's working memory is focused on accomplishing specific goals, unnecessary actions force the user to put in more effort, which entails dedicating more working memory to the task, for no good reason. At the very least, these unnecessary steps will test the user's patience.Speed and pacing are essential considerations for minimizing cognitive load. Users want to accomplish their task at a brisk, purposeful pace, so remove any lag beforehand.Users like to know what they're getting into before submitting their email address, but Touch of Modern's gatekeeper demands registration before… anything! This first mandatory and unnecessary action will scare away a sizeable chunk of potential users.Here's a great exercise for finding unnecessary actions: List every step a user must do to complete a task. For example, sending an email might look like this:Now, rescan the list and look for redundancies. Get any ideas?You could remove step 2 entirely by having the cursor start in the \"Send to\" field automatically. This will save the user the trouble, however slight. Every step you eliminate is a win.Let's consider Google's home page27. The cursor starts in the search field, so all the user has to do is start typing. These micro-interactions add up over the entire experience, so don't ignore them.Cluttered, chaotic and otherwise distracting interfaces can derail a user from their task at hand. Just like it's hard to focus when several people are talking to you at once, on the web it's hard to focus when too many images, animations, icons, ads, text types and bright colors are fighting for your attention.Remember that one's working memory must sort through external stimulus as it moves forward to its goal. Every distraction, especially a visually domineering one, demands a piece of the user's attention.LINGsCARS might be an extreme example, but you can see how quickly the competing elements, such as bright colors and motion, attack the senses. Even two simultaneous animations in two different areas of the screen threaten to overstimulate the user.For starters, get rid of everything that's not essential. Keeping only what's necessary is advantageous in general, reducing loading times and streamlining the experience. Even more important, a study on how aesthetics affect a website's first impression31 (PDF) found that users prefer simple websites over visually complex ones.You can also diversify your content for balance. Too much of one type (say, text or images) is overbearing. Use a fair mix of visual content32 - images, videos, infographics, etc. - to create harmony on the page and make it easy for the user to comprehend.The film and TV website IMDb3533 could have easily leaned heavily on visual content, but instead it balances it with equal amounts of textual content.Once you've boiled down a page to its necessities, organize those elements in a way that's instantly comprehensible to the user. Layouts with symmetry or constructive asymmetry display information in a way that's quicker to understand, which is to say, in a way that demands less effort of the brain. Not only are symmetry and smart asymmetry pleasing to the eye, but their structure makes the interface easier to interact with.See how Groupon3937 offsets its vertical menu of text categories (middle left) with a text description of the featured frozen yogurt deal (middle right)? The use of photos and color blocks creates a structured and satisfying hourglass shape, pinched in the middle by text.Symmetry is more than just about putting identical layouts on both sides of the screen. It's about balancing visual weight and visual direction41. In this way, asymmetrical screens can still appear organized, as OTHR4442 shows below.Reducing your page to only simple and non-competing elements is just half the battle against overstimulation. Don't neglect to present these elements in a straightforward layout.It's a bit of a paradox: Users want a lot of options, but too many options will overload their brain.Hick's Law (or decision paralysis) tells of the phenomenon: The more options a user has, the more time they will take to make a decision. While William Hick and Ray Hyman first tested their theory in the 1950s, in the last decade their findings have been redefined for digital design46. Not only have behavioral studies47 (PDF) confirmed Hick's Law, but recently the phenomenon's effects on the brain have been documented in a 2015 MRI study48.To understand Hick's Law as a designer, think of each option as a bright flashing light. Too many bright flashing lights will overstimulate the user, as demonstrated above.Even the makers of popular websites, like Rakuten's, make this mistake because they don't properly understand the principle. It's the difference between giving users what they want and giving them what they think they want.Assuming you've already gotten rid of unnecessary and redundant options, you can group multiple options in umbrella categories. You see this a lot on department store websites, which have the widest product selections.It's not necessarily about too many options, just too many options at one time. If you can hide some of those choices in hidden menus, drawers and pullouts, you get the best of both worlds. These mega-menus52 still give the user many options, but in digestible doses that won't overburden them.However, hidden navigation menus limit discoverability,56 so designers in industries such as e-commerce and news must be careful. You can minimize the drawbacks of hidden menus by complementing the page with out-of-the-way links to other products (such as Amazon's \"Related purchases\" banner). Or you can simply do away with hidden menus by generalizing the header categories until they fit in a single navigation menu (as Apple and CNN do).You'll also want to be careful about how you organize the website's navigation as a whole. A lot of issues with Hick's Law can be handled by managing the information architecture (IA), which we'll discuss below in the \"Hard-to-Find Pages and Features\" section.Just like the problems of overstimulation and too many options, offering too much content will pull your user's working memory in too many different directions.You obviously want to display only the content that's essential, but for some robust websites, everything is essential. If you have too much content, you must learn how to organize it so that you don't strain users.The problem with Arngren isn't that it offers too many products, but that it offers too many products at the same time. A little more structure and organization would do wonders for the look of the website.As explained above, George Miller's tactic of chunking639 is effective at presenting copious amounts of content in a manageable way. It's the skill of grouping data to make it easy to remember. A phone number is broken into country code, area code, a set of three digits, and a set of four digits - a string of 11 or more numbers would be too hard to memorize.Do you want to feature a lot of product images on the home page of your online store? Instead of listing them all in separate rows and columns, display them in groups based on their type. Etsy6664 is able to display more products on its home page by grouping them in chunks according to seller.Chunking in text68 involves short paragraphs, adequate use of headings and subheadings, and ample empty space.For long-winded form fields in which all of the data is necessary, try a multi-step form69. Long forms can appear intimidating and sometimes even cause website abandonment. Break up the form's information into separate pages, or at least separate sections, to make it less imposing. Just be sure to include a progress marker so that users know how many pages to expect.Buying a plane ticket always involves filling in a lot of data, none of which is expendable. Virgin Atlantic7371 improves an otherwise tedious experience by breaking it up into individual steps on individual pages: selecting the flight, filling in passenger information, entering payment details, etc. Putting all of that on a single long page would overwhelm some users and increase abandonment.The biggest culprit in cognitive overload is confusing UIs. The user should never have to spend long figuring out how to complete the action they want, nor waste brain power deciphering an icon.Not all users are tech-savvy enough to comprehend SpeedCrunch's vague icons. Even if they know enough about computers to recognize the Windows and Mac OS X symbols at the top, those two icons in the bottom-right corner would take even Alan Turing a moment.Don't reinvent the wheel: Use visual cues that users already know from other websites. Users rely on common affordances and signifiers77 to learn controls, even on websites they've never been on before.If that's too stifling, you could give the familiar pattern a unique spin with your brand's identity. Home Depot8078 uses common icons but gives them the brand's telltale orange.The same applies to microcopy. Buttons with standard labels like \"Contact\" and \"Submit\" are more recognizable than unconventional labels like \"Address\" or \"Go.\" Commonly known labels facilitate the user's browsing experience, while uncommon ones make the user pause to wonder what the button does. Don't sacrifice clarity for individuality.On the other hand, what if you have a feature never seen before? In that case, make it self-explanatory by using a real-life representation. Skeuomorphism, as it's called, bridges the gap between 82reality83 and the digital equivalent84. For example, early Internet pioneers chose an envelope to represent email because envelopes are an obvious emblem of the mail system.Also, avoid vague symbols, especially if they could be mistaken for something else or are otherwise confusing. Below, some of Issuu8785‘s icons are familiar, but others are not. If the user has to click an icon to discover its function, they will be knocked off course.Run your designs through a fresh set of eyes to make sure you're not missing anything obvious.Check out Denis Kortunov's list of 10 common icon mistakes89 for details on what not to do - for example, icons being too similar to each other or being too complex individually.Any interface that isn't completely obvious should include onboarding90 to instruct the user on how the UI works. Simple websites can get away with just a single window, especially if a memorable graphic explains the function. New and unique interfaces, though, require a more hands-on tutorial. For instance, Slack9391 gives a complete video tour, with narration explaining what's going on.Even if the user has everything they need, they still might not be able to find it. That's no better than if the feature were broken. The bottom line is that the user is wasting brainpower trying to figure out what to do.As an irreplaceable component of every user experience, navigation should be easy and stress-free. Website navigation should feel intuitive and should give the user confidence to roam freely without worrying about getting lost. Not only does this require extra work in the IA, but careful application is required to make it appear more simple than it actually is.If you think hamburger icons are bad, Mojo Yogurt requires you to hover over the logo in the upper-left corner to reveal the navigation menu.To its credit, a small animation reading \"Navigation\" orbits the logo. But with all of the color and movement on the screen, that one vague cue is not enough.Straighten out your IA according to the preferences of your users. Your target user group might not think the way you do, so learn from them how to organize the website. A card-sorting test101 reveals how your users would categorize certain pages and topics. A tree test102 evaluates how well your current or proposed structure is understood by real users.For a crash course in IA, read Dan Brown's \"Eight Principles of Information Architecture106\" (PDF). In just five pages, his overview explains the eight hard-and-fast rules every designer should know about IA, such as the principle of multiple classification (i.e. using a few different methods of categorization to accommodate users' different modes of thinking) and the principle of disclosure (i.e. showing only enough information so that users know what to expect).You'll also want to get rid of redundancies by combining pages or menu items. For example, you don't need one page for executive bios and another for individual team members - they can go on the same page. The design studio Waaark109107 simplifies its navigation by merging its studio introduction, team member bios and contact information as three screens on a single page.If certain functions or features are more important than others, use visual techniques to draw attention to them. Increasing the size, adding animation, and using a flashy or contrasting color can attract the user's eye. Display information in a novel way111, especially with a corresponding graphic, and make sure that, above all, it's comprehensible.PayPal expects more returning users than new ones and caters to the former by setting the log-in button apart with an attention-grabbing white block background.Let's say the home page of a website uses the standard blue and underlined text to indicate a link, but that another page uses only blue and no underline. Even if the user never activated the first link, they might pause on the second page to think, \"Is that still a link, even though it's not underlined?\" They might not even care about the link, but the split second they were distracted by the inconsistency bruises the overall UX.Typos and grammatical errors work the same way. Remember that the best UX is unseen, but mistakes like that are often noticed.It doesn't matter whether an element is inconsistent with the rest of the website, with other websites (when it shouldn't be, as with UI patterns) or with the user's knowledge of language and grammar. In all of these instances, the user must take a moment to consider and process, which uses up working memory.SIPhawaii is all over the place with capitalization, font size and the inclusion of prices. And you don't even want to know what happens when you click the hamburger icon - suffice it to say, it's certainly not consistent with other websites' hamburger icons.Keep a consistent format throughout the website. This is a lot easier to say than to do, however, because mistakes of this nature are often unintentional.A style guide can work wonders for consistency. It collects all of the global design decisions in one easily accessible place for quick access whenever the designer needs them. Details like the code value for the background color, the dimensions of images or the typography for headings can be easily forgotten, so making them readily available would be helpful.For more information on building a style guide, read our in-depth overview121 and an actual case study122 on creating one.As for typos and grammatical errors, don't just rely on the spell-checker. Always go through your content one final time before publishing. The free app Grammarly123 can help you spot harder-to-see errors.A good example of both visual and functional consistency is Pinterest126124. No matter the style of picture in your feed, the format remains the same.Titles, descriptions, authors, websites, pins and activity are all displayed with the same text size and typography, in the same location on each card. This dedication to consistency gives Pinterest the freedom to stagger the rows for more visual appeal, without confusing the user. If you can understand one card, you can understand them all.Steve Krug famously exclaimed, \"Don't make me think,\" which could more or less be the battle cry of the user as far as UX is concerned. Skilled UX design is aerodynamic. Any bumps on the way - such as excessive cognitive load - will drag the whole plane down. Designers need to cater to their users any chance they get, so don't make them think any more than they have to.Was that too much information to take in at once time? Here's a summary of the takeaway points so that you don't get overloaded:(By the way, the answer to the Sphinx's riddle is \"man\": crawling as a baby, walking as an adult and using a cane as an elder.)(ah, yk, al, il) ↑ Back to top Tweet itShare on Facebook"
        },
        {
            "title": "Stop the overuse of overflow menus",
            "date": "Fri Jul 22 2016 13:30:05 GMT-0400 (EDT)",
            "text": " You know those obscure menu buttons on apps and websites that reveal even more menu options? They usually have an ellipsis \"…\" or an arrow ▼ icon on them and sometimes they'll even have a More label. Or, better yet, a More with a ▼! These are called overflow menus. Overflow menus are a scourge that should be rooted out, crushed underfoot, and drowned in a sea of toxic sludge.Overflow menus are really enticing to user interface designers. It's been drilled into designers' heads for years that the pinnacle of achievement is a \"clean\" user interface. Designers blindly stumble over each other to heed the old adage:Overflow menus seem like the perfect solution. Designers can \"take away\" complexity and leave just the really important bits. You can quickly and easily create a clean looking user interface. The trouble with overflow menus is that you didn't actually take anything away, you just obnoxiously obfuscated it.The crux of the issue is that overflow menus let designers, engineers, and product people off the hook from making tough choices. Instead of prioritizing, we just sweep complexity under the rug and pretend that it doesn't exist. Software with overflow menus is often still hard to use, even if the complexity is now beneath the surface. In fact, because users can't discern all of the available options, overflow menus frequently make interfaces even more difficult to use.Just look at Google Image search. Instead of choosing whether to have a very simple interface or to have a set of powerful tools, the team split the difference. You can just imagine someone making the compelling argument:Sounds great. In reality, after years of daily use, I still can't reliably choose the correct option. I just want to filter my images for big file sizes, and I know that there is a menu hidden away here somewhere, but I constantly click More when I guess I should click Search tools. Argghhh!Android embraced overflow menus so deeply that it's a default user interface element in the action bar. On any given screen of an app, you're likely to get a different grab bag of menu options. Some things like Settings or About might appear in the overflow menu on every screen of an app. And, others like Delete post will be context specific to the screen that you're looking at. They are all mixed together in a noxious potpourri: it's a total mess.I'm mostly snarking on Google's implementation of overflow menus because I work at an arm of the company. I know many of Google's designers are excellent and it's safer to pick on your friends than to trash strangers. Of course, overflow menus are spread like a plague in apps designed by all kinds of teams, not just at Google. And, it's not like I have never made compromise decisions that I later regretted, but sometimes it's good idea to throw stones in glass houses. And, tellingly, some of the default apps on Android have recently moved away from using overflow menus. The Play Store, for instance, used to have zillions of them and I recently opened the app only to notice that the overflows have been nixed in favor of a more intuitive and streamlined interface. Nice.So, if Google has some talented designers why have overflow menus often still run amok even here? Let's look at how bad things happen to good teams and how to avoid it happening to your team:Obfuscation ≠ SimplificationDesigners frequently confuse obfuscation with simplification. Simply hiding features seems like you're creating a \"cleaner\" and more easy-to-use interface. Sure, your new UI may pass the squint test of simplicity but you're not dealing with the core complexity of your app.Instead using obfuscation or sleight of hand, our job as designers is to structure complexity so it's easily understood. The problem with overflow menus is that there is no information scent - anything from a juicy steak to a gross licorice could be hiding under that menu. Instead of adding an overflow, consider these options:Acknowledge that you're using a crutchAdmitting you have a problem is the first step to solving it. Many teams don't acknowledge that using an overflow is a crutch, a way to avoid making a tough choice. I'm sure sometimes you will consciously choose to use an overflow menu (I'll even grudgingly admit to having used one before) but don't let the choice become an easy out.Force yourself and your team to make tough choicesThis is really the point. Instead of pretending to make your product simpler, actually make the tough call to include or not include menu options. If something is important enough to include, show it to customers. One of the best parts of designing mobile-first is that you're constantly forced to make tough choices about what to include and what to leave out (this is particularly true on iOS, which doesn't have a built-in overflow menu in its toolkit). Take this as a challenge instead of a hampering constraint.Be contextualOverflow menus are most egregious when they lack context. In Gmail, for instance, the Print function could live under either of two overflow menus. In Android, the persistent overflow menu in the top right of the action bar can contain global or local menu options. In Google Images, two side-by-side, unrelated overflow menus conflict with each other. Overflow menus can work when used really contextually. Consider the example from the Android alarm clock app, left. The overflow menu in the top right lacks context (it could be about anything) but the overflow menus on each individual row gives some indication about what you might find under the surface because it's contextual to a specific alarm.Research keeps you honestOne excellent way to stem the tide of overflow menus is to do user research. In the confines of our design studios, solutions like overflow menus seem perfect. Putting your product in the hands of regular human beings and watching them struggle through the interface you designed is the ultimate sobering gut check. Your \"clean\" user interface likely confuses the hell out of your users. Unless you and your team are a bunch of cold-hearted SOBs, empathizing with your users' struggles should convince you to find better solutions.Consider information foragingIf my bombast above is obnoxious to you, consider a more academic perspective on why overflow menus are, uh, suboptimal. There is a popular theory called Information Foraging that is often used to describe why some interfaces are better than others. You can read a thorough and useful explanation of Information Foraging at the Information Design Organization here, but the basic gist is:In a gross over-simplification, according to this Information Foraging theory, something either has to be damn worth the effort of seeking it out (high value) if it's going to be hard to find. Or, if the thing has lower value it has to be presented in a context that makes it easier to locate.In a concrete example, consider the hidden options in Google Image Search. I have been using this interface for years to filter for \"large\" images in search results and yet I have neither learned the interface nor have I given up and used a different image search. Both the frustration and my continued use of Google Image Search can be explained by the Information Foraging theory. On the one hand, the Search tools link is not presented with any real context, so I find it hard to locate and confusing - heck it's right next to a More link that serves a completely different purpose! On the other hand, I am not so frustrated with the complexity that I give up. I come back and stub my toe at the door time and time again. That's because the food is so damn tasty. It's a good search tool and the filter for \"large\" images is super useful for my work. I wish it didn't taste so good or, better yet, I wish the tasty food was right at the surface.You said never use overflow menus? Like never ever?Like just about anything, overflow menus have a time and a place where they don't totally suck. But, the appropriate place for an overflow menu is probably not your project and probably not the spot you're thinking about. So, think long and hard before you resort to using one. Remove the feature. If 0.001% of people will find it in an overflow, did you really need it?Add the feature for real. Don't dither. Put it on the page. Scrolling is the easiest mode of navigation.Structure the complexity, don't just hide it. Use a meaningful icon or clear label to indicate a group of features is available. Seriously though, \"More\" or \"Menu\" or \"…\" are not clear labels."
        },
        {
            "title": "The Big Problem with Design Inspiration",
            "date": "Thu Jun 09 2016 21:22:42 GMT-0400 (EDT)",
            "text": " This is an adapted version of a talk I gave as part of San Francisco Design Week and the VMA re:think Design Conference.If I were to ask you who invented the telephone, you'd likely tell me it was a man by the name of Alexander Graham Bell. It's true Bell was awarded a patent for the original telephone, but he was not the sole inventor. In-fact, Bell was one on a long list of individuals who each came up with the idea of a telephone over the span of 54 years.During that half century, a dozen or more people independently conceptualize and documented their idea of the telephone. Some even went so far as to invent a working version of the telephone before Bell did.You're probably thinking each of the inventors collaborated with one another, borrowing and building on each others ideas, but the reality is that they came up with more or less the same idea in isolation.These early inventors didn't have easy access to each other because, of course, the telephone hadn't yet been invented. Nor did they know whether or not someone had already explored the idea of a telephone before them. They didn't even know if someone elsewhere in the world was working on the idea at the exact same time as they were. In Bell's case, his patent was filed the exact same day - just a few hours earlier - than another inventor: Elisha Gray.In the world of invention, having numerous people independently stumble on the same concept is a common occurrence; so common it's been given a nickname: multiples.The telephone, calculus, the theory of evolution, and the crossbow are all examples of multiples. When the Nobel Prize is awarded, it's often awarded to three separate individuals who each landed on more or less the same discovery in their given field.In the world of design we also have multiples. Such as when Airbnb and Medium's new logos came under some scrutiny because they look so identical to a few brands from the 1970s.The fact is that multiple people often end up creating the same or strikingly similar work independently of one another. The telephone was just one such case.Yet, if the inventors of the early telephone, or calculus, or the crossbow, weren't looking to each others work to inspire them, how did they land on the same idea? What were they inspired by?I want to be clear that what I'm talking about here is practical inspiration. It's not the feel-good inspiration you get from watching a beautiful sunset or from hearing a remarkable talk.We can all probably imagine what practical inspiration means however. It usually means that if we're working on a visual problem, we tend to look to publications or online sites like Dribbble and Behance to see how others have used things like color, space, and hierarchy in their work. Or if we're working on an interaction design experience we're likely to pick up our phones and swipe through apps and experiences to see what those are like.These are very common behaviors in our industry and we tend to talk about them in terms of inspiration.But this is not how inspiration works. At least not practically.We say these behaviors are us seeking inspiration when they're really us looking for existing solutions. And this is a critical difference we must remind ourselves of if we're to do our best work.We say we need to be inspired but end up seeking solutions. And with enough diligence, and given enough time, we inevitably do end up finding a solution, or part of a solution we feel we can adapt. We then say that what we've found is inspiration, when it's really somebody else's solution.And that's the problem with this: the solutions we stumble on and say \"have inspired us\" aren't solutions to our design problems. The solutions we find through these behaviors are solutions to somebody else's problem; a problem we don't have full context into 99% of the time.It's rare we'll find a design solution and know the needs or constraints of it, or the things the designer tested or iterated on. All we see is a finished or semi-finished product, the solution a designer landed on after who knows how many hours of work. Without full context, solutions lack the who, what, where, when, why, and how; which means there's no way for us to be certain they're an appropriate or even reasonable fit for our problems.It all sounds a little silly once you realize this. Yet we do it all the time and call it inspiration. Why?I believe we do this for many reasons, but there are two primary ones that come to mind: either we've failed to explore and truly understand the problem we're designing for in the first place, or we've somehow lost track of where we are in the design process and are unclear about what to do next.So whenever we face uncertainty like this, we say we simply need to be inspired, then look out into the world to find solutions without fully considering the consequences. It's a bad habit which has become engrained in our industry.At Facebook we see a variation of this often.Designers outside the company will browse sites like Dribbble and stumble on a trend or experience they think is really amazing, and they'll think that the thing they've stumbled on could be an excellent solution to a problem they've personally encountered on Facebook. They'll work tirelessly on a redesign of the Facebook experience and share it as a suggestion on how to improve the platform, sometimes even including the redesign as part of a job application.Often when I see these unsolicited redesigns I can't take them very seriously, because while the design may appear to solve a very simple problem, the designer tends to overlook vital aspects of the problem space.They overlook things like localization, what happens when a button or headline goes from 7 characters in one language to 30 in another? Or what about translating text from left-to-right to right-to-left? Or how a pattern scales across many different platforms for a billion people all around the world who each use the product differently.So while the redesigns are usually nice to look at, they don't get at the heart of the problem that Facebook designers have more insight and understanding of.And really that's what we should be talking about when we talk about design inspiration: we should be talking about understanding.Each of the numerous inventors of the early telephone were able to land on more or less the same idea because they each had a deep understanding of the problem they were attempting to solve. They didn't need to know what ideas others had landed on, or how someone else was tackling the problem, because some form of the solution was inherent in their understanding of the problem itself.In the case of the telephone, the inventors were striving to improve the telegraph, which was popular at the time but not ideal because it meant you had to practically learn a new language to use it, like morse code.Rather than having to learn a coded language, these early inventors thought, why couldn't you simply speak into a device which could capture the vibrations of your voice and use that as the signal for the electric circuit?Each telephone inventor independently ended up at this same conclusion, but it was Bell who perfected it, using a thin piece of calf skin to recreate vibrations which most closely mimicked the human voice.Bell landed on his concept after many, many months of effort spent tinkering and exploring the problem space. But his idea of the telephone was otherwise identical to that of Elisha Gray's. Both inventors landed on the same idea simply because they understood the problem and what a realistic solution to it might be.The fact is good, unique, ideas want to be found. But they can only be found if we take the time to understand where they reside, in the problems themselves.To do our most impactful work then, we should seek to not be inspired by existing ideas, but to more clearly understand what it is we and the work are trying to do.As Charles Kettering once famously quipped:And of course, as we all know, the first stage of any design process is to build understanding. It's the first stage because it opens the door to what's not only possible, but what makes sense.How do we build a deep understanding of our design problems without looking toward existing solutions? We must focus on empathy, understanding why the problem we're solving is a problem to begin with.We must immerse ourselves in the experience of the problem landscape, feeling out the edges to see where solutions may lie. And we can do this through a number of means other than looking to see what others have created.We can observe those who suffer with the problem the most, engage with them, really listen to what they have to say. We can look to other industries to see what problems there relate to ours. We should also consistently and repeatedly ask questions about the problem area we're solving. The more questions we can ask, the more area around the problem we can uncover.If this all sounds like work, that's because it is. None of this is very easy to do.It takes time and mental resources to understand even the most seemingly minor problems, or to get outside of our own heads long enough to glimpse a different perspective of it.I wrote a book to help with just this thing: provoking original thinking and idea exploration. It's called The Creativity Challenge and it's filled with 150 ways to explore problems and think differently. Yet, even with 150 straight-forward ways to explore ideas put in front of us, the task of developing an understanding for a problem still is not easy to do.I believe this is part of what helps separate designers from the rest of the world.While anyone can pick up a copy of Photoshop or Sketch and throw together an app design relatively easily, it takes real design thinking to make a design work.And what we find when we put in the time and energy to build an understanding is that ideas and solutions want to be found. Effective ideas will suddenly seem obvious because we've dug around to uncover them.Consider here the common symbols and metaphors we associate with insight: a sudden flash of light, a spark, a lightbulb turning on. These are all apt metaphors because they remind us that what we're seeking isn't going to be something we can find already existing in the world. What we're seeking can only be found by stumbling around in the dark.To be clear: I do think there is some value in seeing what others have done, of looking at the work that exists. We would be foolish to ignore what competitors were doing, or where the industry is going, or what ideas people have landed on.But existing work is only valuable if it's used as a reference point for our curiosity. We shouldn't look to it and say that what we're doing is looking for inspiration when really what we need is understanding.Great designers know this. They know that often when they're feeling the need to seek out existing work it's not actually to be inspired, it's a signal that they need to step back and work on understanding the problems they're attempting to solve. They know that their problems are unique, and so their work should be too.If there's only one thing you take away from this, apart from the fact that Steve Jobs wasn't the inventor of the telephone, I hope it's this: we can only do our best work by understanding what it is we're doing, and we cannot build that understanding by merely looking out into what's already been done.We must put in the work to build understanding.We must build empathy, explore creative exercises, write often, tinker and experiment and play, but most importantly: ask an infinite amount of questions.Because even if you inevitably end up at the same solution as someone else, you'll at least have a better understanding of how you got there. And there's power in knowing that. There's power in understanding the problem so when the next iteration of it pops up, you'll have a place from which to build the next solution.As the great Pablo Picasso once put it: \"Inspiration exists, but it has to find you working.\"Put in the work. "
        },
        {
            "title": "The Future of Design: When You Come to a Fork in the Road, Take It",
            "date": "2016-05-17",
            "text": " Design started out as a craft, primarily focusing upon the creation of beautiful objects to become a powerful force in industry. Today, design has gone far beyond its simple origins as a craft to develop powerful new ways for people to interact with the world, emphasizing experience, not technology. Moreover, it has evolved into a way of thinking, of problem discovery, and of enhancing the lives of individuals, the experience of the workforce, and even the health of the planet. Are these new developments compatible with the craft traditions of the old? Is this a fork in the road, with some continuing the craft tradition of enhancing the emotional experiences of our products and others taking the other path, moving design thinking into all endeavors, but far removed from the history and mainstream practice of today. What is the future of design? We are at a fork: Which path should we take? Design as a skilled craft creates useful and beautiful items. The field of Industrial Design helps industry produce commercial products. In schools and universities across the world, considerable time is spent on mastering the craft skills of drawing, construction, materials, manufacturing, and finishing. Indeed, in many schools, there is little time spent outside of these crafts: little time on social issues, philosophy, world events, or general literature. Little or no training in the fundamental STEM components of Science, Technology, Engineering, or Mathematics. To me, these gaps are strange. Design is the interface between technology and people, yet there is little study of either. No deep appreciation of people or the social sciences, no deep understanding of science, mathematics, or engineering - the essential backbones of technology. The training is that of a craftsperson, mentored by skilled craftspeople. It is design, design, and design. The result is brilliant crafts capable of making the many pleasurable objects we use today in our homes, schools, and workplaces. This is all very excellent, but with the 21st century's increasing sophistication of the technologies for home, business, education, and entertainment, the skills of the craft no longer suffice. As long as designers remain craftspeople, they can add value, but they cannot take the lead. Engineers and business people decide what is to be done: designers help enable the results, but they are seldom the leaders. Design as a craft is an admirable profession, but one that is limited in both aspiration and capability. The world of technology is undergoing rapid change driven by the fundamental advances in the science and technology of computation, sensors, communication, and displays along with a growing understanding of the large social and environmental impact of modern technology. Natural resources are being depleted, the environment suffers from heavy, unhealthy pollution in many parts of the world, and social unrest affects all of us. Even the climate is changing, impacting living conditions across the world. A craft education does not suffice to deal with these issues.Design as an Evidence-Based Discipline Traditional craft-based design had no need for formal evidence: the proof of their efforts was visible to all who viewed it. The designs were guided by the finely-honed intuitions of the designer and could be appreciated by any discerning viewer. This approach worked as long as the designs were of relatively simple things such as watches, home appliances, and furniture. The introduction of computers, communication networks, powerful sensors and display, even our most common everyday devices became more complex. People became confused and frustrated: a new form of design was needed to cope with these issues. Intuition was no longer sufficient: the design had to be informed by technical knowledge of the technology and an appreciation of the limits and capabilities of the ordinary people who were expected to master the devices. Because the underlying operation is invisible to people. It falls upon the designer to make the device understandable and usable. Traditional design training was not up to the task. The solutions came from developments outside of design. The result, variously called \"interaction design,\" \"experience design,\" or \"human-computer interaction,\" came primarily through the efforts of the disciplines of psychology, human factors, ergonomics, and computer science. The Xerox Palo Alto Research Center along with various universities around the world played important roles. I myself entered design through psychology and computer science. Many of the basic concepts in use were today being developed as early as the 1940s-70s, with a rapid expansion in the 1980s as computers started to become accessible to the research community and then to the everyday person. Service design was yet another area that represented a shift in design practice, for services are not physical objects: they are interactions with people and systems. A service is about psychology and business, not materials, shapes, and forms. It requires a different set of knowledge to design and a formal method of testing to evaluate. In fact, service design originated in marketing and management, not design, and only later did it migrate to design. All these developments have been incorporated into modern design activities. And as design changed, so too did the fundamentals change. New, non-design societies, conferences, and journals formed to fill the void left by conventional design, with many of the new groups doing design but unaware of the existing design community. Soon we had human-computer interaction (HCI) and its many societies, conferences, and journals, computer support of collaborative work (CSCW), and new procedures and frameworks, such as \"Human-Centered Design\" (HCD) and \"Design Thinking.\" The result was the development of new forms of design. Some came from groups outside of the design community, some from within, but today, more and more by the joint work of designers and non-designers (most commonly cognitive and computer scientists). Human-centered design is perhaps the most important of these new developments. It is a process, one that requires a deep understanding of people. It starts with observations and then a rigorous attempt to use those observations to determine the true underlying issues and needs, a process that might be called \"Problem Defining\" (as opposed to problem solving). Then, these needs and issues are addressed through an iterative, evidence-based procedure of observation, ideation, prototyping, and testing, with each cycle of the iteration going deeper and deeper into the solution space. The result is a form of incremental innovation, optimizing the solution through a hill-climbing process. Human-centered design, at least the way I define and practice it, has at its core several fundamental principles. The end product is intended to enhance the quality of life of the people who will use it. It does not rush to a solution. Given a problem, it stops to observe and study the issues to ensure that the correct problem is being address, namely, the fundamental causes and needs, not surface symptoms. It is evidence-based, using careful observations and analyses to determine needs and experimental deployment of potential solutions in an iterative cycle of observation, ideation, prototyping, and testing. It is action-oriented, learning by doing, through repeated iterations of making, testing, and observation. Modern HCD applies the findings of many fields. It is the bridge between technology and people, applying the findings of the cognitive, behavioral and social sciences through a process of doing and making, testing and probing, experimenting to make things better, working with the specialists from the relevant disciplines as well as the people for whom the designs are intended. HCD designers do their research by continual designs, carefully analyzing the situation, using each design as a way to test their ideas in small, controlled ways, using the resulting evidence to guide further, continual refinement. Human-centered design moves us away from designer as guru. It moves us into an important profession where we have systematic methods for discovering true needs of people and society, for developing proposed solutions, testing and refining them. We used to be an opinion-based field: today we are an evidence-based field. We have become human-centered. Design Thinking The phrase \"design thinking\" is controversial. Designers have talked about design thinking for at least half a century. It has recently been revived, in part as a marketing slogan by the company IDEO, but also to designate the use of human-centered principles in the application of design to whole new domains. The definition of design thinking varies considerably: Here, I use it to mean the use of HCD as a method of reframing the problem. Perhaps the most important contribution of Design Thinking to those outside the design profession is the ability to step back and reconceptualize the issues, to take a very different perspective upon the issues. I find the concepts and the phrase useful in distinguishing the new era of design from the more traditional, craft-based era. When we speak of designers as \"design thinkers,\" we make it clear to the audience that we are not focusing upon the development of pretty things but rather adding value to any activity, bringing a new framework upon which to view the world. In business, this means replacing the time-honored emphasis upon productivity, efficiency, and profits with that of maximizing the experience of all people involved. Clerks and laborers, lower, middle, and upper management, sales and delivery people, and, of course, customers and clients. In the field of healthcare where I have been working, this point of view is surprisingly revolutionary. When design thinking is applied to a wide, diverse set of activities, ranging from the structure of a city, to the design of healthcare, transportation, or educational systems, what is the role of the traditional craft training? Design Education Do current modes of education work for the future of design? Consider the complex issues of healthcare, for example, structuring the procedural operations of a clinic so as to enhance the productivity while optimizing the experience of all people involved: Patients and their families, physicians of many specialties, nurses of various categories, technical and administrative staff. Do the traditional design courses help? The closest would be courses in service design, but traditional service design treats much simpler problems than those of complex systems such as healthcare. All the countries of the world are facing crises in their healthcare, education, and transportation systems. Moreover, there are energy and conservation issues, the treatment of refugees, the design of security systems that allow for rigorous screening without being oppressive and degrading to all those involved, including the screeners and the people being screened. The environment is a critical issue, as is design for the impact of global change, despite the reluctance of many countries, politicians, and businesspeople to acknowledge the magnitude of the issues. Design educators that continue to conform to the traditional skills and crafts can be proud of their accomplishments, proud of the fine craftspeople they continue to produce. The world will always need these skills, so these schools will continue to be proud of the accomplishment of their graduates. But they will represent the past. To transform itself to be a leader for future designers, educators must encourage students to explore and learn more of technology, social sciences, and the complexities of the world, of economic, political and environmental issues. The next several decades will see growing transformation of design to a field that promises a new mode of thinking, a human-centered approach to the solution of complex problems, an approach that moves us from the tyranny of technology to the empowerment of people. Human-centered design of the future puts people first in addressing the major problems of society. Modern design differs from most disciplines in academia by being a field of makers and doers rather than of analysts. Designers are practitioners. This makes design unique within the university, for it builds upon all the knowledge of all the specialized fields within the university to construct, develop, build, and shape the world. It combines technology with human endeavors. As a field of practice, doing, and making, design must work within the structures, rules, regulations, laws, and customs of the real world of politics and business. Design is the practical application of the knowledge from the entire university. Design today is much more than a craft, with technically trained people producing beautiful objects. This form of design plays an essential part in our lives, producing wonderful, emotionally satisfying products for even our most basic everyday lives. We do not want to lose this component of design. But design can be much more than the construction of pleasurable objects. Design can be the foundation for the entire university, teaching system thinking, bridging across all the specialized departments of a modern university. The Fork in the Road: Design as Craft or Design as a Way of Thinking? The move from craft-based to evidence-based design, from simple objects to complex sociotechnical systems, and from craftspeople to design thinkers suggest that we are now faced with a fork in the road with two different possible futures for design: A craft and practice; A mode of thinking. It is as if we are traveling along a road when we come to a fork with two possible routes forward. One, the traditional role of design as a craft, creates beauty and pleasure in our lives, using the ever increasing powers of technology to create wonderful experiences. The other, that of design thinking, becomes a method of thought and discovery, approaching the major issues of the world with new eyes, addressing the fundamental root causes, not the symptoms, but always with primary focus and attention to the people: human-centered design. No more should the focus be on economic productivity, on monetary measures. Instead, the new design philosophy with its focus upon people puts the long-term health and happiness of people as the major item of concern, which also means addressing the major issues of our time: health, famine, environment, inequity, and education. Which fork will design take? What is the proper path for design? Yogi Berra, the great American baseball player provides the answer. His advice to this dilemma is simple: \"When you come to a fork in the road, take it!\" Yogi Berra was giving instructions to his home, located in the countryside. There was a fork in the path toward his home, but in fact, either choice would lead to the destination. Hence, when you come to a fork, take it. In the case of design, the choice of direction at the fork leads to somewhat different outcomes. Nonetheless, I still believe that the correct answer is to say: take it. We need people who take each path, but for any individual, Whichever direction is taken will be correct. Two Futures for Design The fork in the road does not have to be a choice between two options: this is an opportunity to pursue both. Design as a craft has a long history of providing great value to humankind. Design thinking is as yet unproven, but it has the potential to provide a different kind of value to the world. Both are essential, so let us take the fork in both directions. As Yogi Berra advised: A fork? Take it. Design as a Craft in a World of New Tools, Materials, and Manufacturing Methods The path toward design as a craft is already well explored. Design schools across the world have developed studio classes, workshops, and ways of mentoring that produce brilliant results. But the future of the craft of a craft has many new areas to be explored and developed. There will be new forms of manufacturing, new materials, new types of companies and communities. All sorts of new opportunities for design will appear, some exotic forms of interaction, some brand new forms of experience, and some a rethinking of existing activities and services. With the powerful drawing and tools for fabrication, many self-trained people will start designing. This provides an opportunity to teach workshops, to mentor, and to be ready to take over when professional help is needed. Commercial projects will always need skilled designers, but with the emergence of a maker's society, where many untrained people design things for their own use, I can imagine a thriving network of designers who offer assistance. Much as interior designers help people furnish their homes, sometimes offering advice, sometimes taking on the entire job, designers will also find new opportunities to practice their craft in new ways. Note that the traditional style of education now practiced in colleges and universities across the world is undergoing revision. Education is transforming from an intensive, full-time, multi-year experience into a set of smaller offerings of individual courses and workshops that can be taken any time during a person's lifetime. Life-long learning is now possible through the emergence of on-line courses and, for the design community, the emergence of makers' communities, where the modern tools of design and fabrication are available for all, with a wide variety of educational workshops, tutorials, and mentoring. Designers can provide lectures, workshops, and coaching sessions. Formal grades and degrees are no longer necessary. Some courses and workshops will have certificates, but these are not always needed. People will take them to learn. These courses and workshops offer a good opportunity for designers to demonstrate their professional skills and abilities, which will invariably give rise to a demand for more services, for full-time work on all sorts of projects, some small, some large. What better way to find new clients than to demonstrate the style of work through workshops? Workshops and certificate courses are not just for the amateurs in marker's communities: they will be in demand inside the company as well as a fundamental part of corporate education. Design as a Way of Thinking The path of design as a method of thought is less developed. It is being taught in only a few places, each of which struggles to determine how best to do it. It is probably most successful in schools of management, where numerous senior designers now teach. Why has it found a home here? Because people in management already struggle with the problems of the world, so for them, design thinking offers a powerful new tool. But design thinking deserves a different home, one divorced from the primary economic emphasis of today's schools of management and business. Design thinkers can move upward within organizations helping form company strategy and helping select new directions of effort. Designers as thinkers can start playing senior roles in management, far beyond what designers as craftspeople can do. Design as Both Craft and a Way of Thinking As the future of design unfolds, as both forks in the road are explored, it may not be necessary to choose one or the other. Many people already are comfortable in both roles. After all, many of today's most prominent design thinkers started off as professionally trained craftspeople. Some may prefer the craft route, some may prefer the design-thinking route. And many will go back and forth, sometimes taking on one role, sometimes taking the other, but also developing a role that merges both approaches. Designers are action-oriented. Today's world of academia produces deep, thoughtful thinkers. Today's world of design produces deep, thoughtful doers. We need both thinkers and doers, but just as we must take both paths from the fork, designers do both doing and thinking: the design philosophy is to think by doing. Designers do their research by designing. Instead of long periods of deep analysis, thought and planning, designers move rapidly to experimentation, to construction of artifacts or new procedures which they use to probe the world relevant to the issue at hand, using the responses as evidence on how to proceed. Instead of deep, abstract thought, it is deep embodied thought, embodied in action, in physical structure, and informed not by abstract principles but by the real evidence of the responses to the probe. External representation has long been a powerful tool to thought. Notational systems have allowed great advances in thinking, starting with the written word, continuing through notations for mathematics, chemistry, physics, music, dance, and engineering. Designers too use external representations to aid in their thinking, but their representations are more concrete than abstract. Designers think by drawing, using the spatial layout of the drawing to enhance their ideas. Designers also build and construct, the better to visualize and develop ideas. These methods derive from the craft part of design, but they are common to many fields that have evolved from crafts, such as architecture, construction diagrams, electronic circuit design, and dance. Learn and think by drawing and doing. These core principles underlie the power of all design, whether it is design as a craft or design as a way of thinking. It is appropriate to all the multiple sub-disciplines of design as well.When you come to a fork in the road, take it."
        },
        {
            "title": "The Myths of UX Design/ Product Design/Whatever They Call It This Week",
            "date": "Thu Mar 10 2016 12:50:39 GMT-0500 (EST)",
            "text": " As with my other \"myth\" article, it starts with me reading an essay, frothing at the mouth a bit, running out of characters on Twitter and ending up here where I can type more than 140 characters.Like the previous essay, this will be short, sloppy and probably full of typos. Oh and incomplete. Super incomplete.My credentials for this rant: I was a designer for years(IA/IxD/UX), then as a Product Manager, I worked with UX Designers and managed not to murder them, I managed UXDs as both a Design Director and as a GM, and now I'm teaching them at CCA. I have the disdain one can only have for one's own people.MYTHS!This myth is prevalent because it is often true. There are dozens of job listings for a UX/UI designer as if the company doesn't care what you call yourself, as long as they get an interface out of it. But pretty is as pretty does, and a UX designer must design that pretty interior NOT just the exterior.A UX Designer owns designing the experience of the product, excluding marketing and customer service.I emphasize designing, because their partners Product Management and Engineering share product strategy and execution.UX Design does NOT \"own\" the user experience. Product Management does.I emphasize excluding because while the user's experience includes marketing, support and more, the UX Design does not typically touch this and this might be why the title is confusing and messy and a bunch of folks are moving to Product Designer these days. People want to who do it all call themselves Service Designers. It's a thing, look it up.User Experience Design is the design of:Got it?If you ONLY design the interface, call yourself a UI design and stop confusing people.I don't want to go down this rabbit hole, so:And that is just a short list experiences people have designed.Are we done here?This is such a dangerous one.You are not the user advocate; everyone is. You are the designer. Enjoy! you still get to make people's lives better.See #1.Also, see iTunes.When everyone suddenly wanted to be Apple, they went out and got their own UX Designer to sprinkle some happy experience-pixie-dust on their product.If you want things to be good, they have to good from the inside out. Start with a core team of UX designer, engineer and product manager, and empower them to all serve the user and the business by making something that's good from architecture to interface.If you can't be bothered to make something good, go hire a black hat marketeer to rebrand your rotten apple as \"organic partially-fermented high-anti-oxidant apples.\"… no one can do all those things as well as a team of specialists.But a small company, or even a small team in a big company has ONE HEADCOUNT. So no, they aren't going to hire a information architect and a interaction design and a visual designer and a user researcher. And honestly, stop explaining the difference, because the servers are melting down and revenue is free fall and the CEO is breathing down her neck.Anyone running a small team is going to hire a UX Designer, and hope to high heaven that one person is good enough at enough of those things to get the job done. If the person hiring (I'm picturing a product manager/GM or a cofounder) is smart, they'll know what that UX person should be great at, and what that person can be \"good enough\" at. She may need a UX Designer who has great interaction design skills or understands databases but makes ugly interfaces. He may need a UX Designer who has mad graphic design chops and decent UI skills, because it's a fashion app. Anyhow, the engineer read Don Norman's book and won't shut up about usability so that's covered.UX Designers are never good at everything, but they are good at one thing and decent at a couple more, and that's enough for most jobs.There was one more line in Raph's article that bugged me, and since I have never heard it anywhere else, I can't really call it a myth. But I can still rant.No.UXD and GD must both always be \"clarity that teaches complexity.\" Because Excel is hard. And Microsoft Word is hard (talk about hiding complexity!) And photo management and music management and OS design and so many things are hard. Our current tools are just as complex as games, and to hide their power is a waste of the work of engineering. More importantly, it's a waste of a chance to make our users into badasses, as Kathy Sierra says.UXD can learn so much from Game Design. It can learn about progression and mastery and the joy of flow. But Game Design can learn from UXD; it can learn about transparent interfaces, crisp feedback and supporting core tasks, be they work or play.Which brings me back to the title I gave this rant. I often wonder why game design is game design, but UX Design is web design/interaction design/information architecture/product design/software design.I think, I suspect, that it's because the role is still too generic. Are we really saying that what User Experience Designers design is \"anything with an experience?\"How can anyone be truly great at that?I'm far from sure that interaction design or information architecture is much better. Search design is not the same as recommendation engine design and occasional use scenarios or different from daily use scenarios. How can anyone be great across so many contexts?Perhaps the future is a world where we have Digital Tool Designers and Search Designers and Social Network designers. Maybe the future is focusing on a problem space rather than an aspect of the work.I do know the changing titles, roles and specialties is annoying and frustrating to me, and I actually care. Is it any wonder people are hiring for \"UX/UI?\" Rather than complaining, perhaps we should just talk to those folks and help them make good product rather than correct their terminology.It's no myth that something is broken here, and I hope this essay sparks some ideas about how to fix it.- ❤ -I wrote this book and IT‘S NOT ABOUT UX DESIGN. But it's a fun read (look at my Amazon reviews for proof!)(I don't even know half those people!) and it has a lot to do with getting a diverse group of people to work together toward a common goal. #1 \"UX designers focus almost entirely on interfaces\"#2 You can't Design an Experience#3 UX Designers are the User Advocate#4 UX Designers make things pretty, like Apple.#5 The UX designer doesn't exist, because no one can do all that.Anyhow The Concept Model, which teaches the user (and often the team) how to think about the system's organization and use.Interaction Design: how the system behaves including feedback systems.Information Architecture: how data is ordered and expressed as information to users.User Interface (UI): how the user accesses all the glory listed out above, including affordances such as buttons and dropdowns. Sometimes this job is shared with graphic design and copywriters, other times you're it. (Side note: if you don't have a writer on staff, please don't make the engineer write error messages. Words are part of the UI and you should be good at it.) DisneylandPer Se/French LaundryLord of the Rings trilogy (I'm not discussing the Hobbit movies with you either)GAMES! Monument Valley, Journey, Dance Central, even Dots and Threes. Go read about MDA. It suggests that it's the designer's job, not everybody's job. In great companies, everyone is the user's advocate.It places the design in conflict with the business, instead of both collaborating to find a solution that serves the user and the business.It can create a sense of entitlement and disregard to other's insights, for example marketing, data mining, or customer service who see other aspects of the user's experience. (I have seen this)Yes, sometimes you are the only person at the company who cares about the user. But that's probably because they are a bad company, and they will probably go out of business so might as well start job hunting now. Pretty is not enough.Sprinkling some UX on things is a pig-lipstick exercise."
        },
        {
            "title": "The UX Secret That Will Ruin Apps For You",
            "date": "07.06.16",
            "text": " A friendly robot greets me on Facebook. He's dressed like a doctor, stethoscope and all, here to do a security checkup. So for the next 5 to 10 seconds, I wait as he pokes and prods my account. \"He's really taking good care of me!\" I think, when I start to wonder: Are Facebook's servers really taking that long?The short answer is no. Facebook actually slows down its interface to make users feel safe, a Facebook spokesperson confirmed in an email. \"While our systems perform these checks at a much faster speed than people can actually see, it's important that they understand what we do behind the scenes to protect their Facebook account,\" the spokesperson wrote. \"UX can be a powerful education tool and walking people through this process at a slower speed allows us to provide a better explanation and an opportunity for people to review and understand each step along the way.\"If half of Facebook's billion users spend 5 seconds waiting on this check, that's 694,444 hours, or 28,935 days of collective time lost. But Facebook isn't alone. Websites and apps now operate on the magnitude of milliseconds. But such speed can make users skeptical or even confused, so companies are responding by building slower, more deliberate interfaces. Wells Fargo admitted to slowing down its app's retinal scanners, because customers didn't realize they worked otherwise, while various services on the web including travel sites, mortgage engines, and security checks are all making a conscious effort to slow down their omnipotent minds because our puny human brains expect things to take longer.\"Let's say you sit down at a restaurant, you order your food, and it comes out one minute later. Is that a good thing?\" asks Braden Kowitz, design partner at Google Ventures (which has more than 250 portfolio companies including Uber, Slack, and Nest). \"You start to wonder, ‘What's going on here? Is something wrong in the kitchen?'\"So companies introduce what Kowitz calls an \"artificial waiting\" pattern into their interfaces. These are status bars, maybe a few update messages, to construct a facade of slow, hard, thoughtful work, even though the computer is done calculating your query.Kowitz says he has only used artificial waiting a few times in the design sprints he runs through Google Ventures, and only when instantaneous results weren't working. In one case, he was working on a loan approval app. The back end was atypically fast. It could get someone a true lender-backed mortgage instantly. But when the app makers put that experience in the hands of consumers, people responded in disbelief. \"When they saw it, they were like, ‘I'm pre-approved but not really approved,'\" he says. So the designers added a progress bar that said it was checking credit, and suddenly, the same system seemed trustworthy.Likewise, Steven Hoober, president at the consultancy 4ourth Mobile, was developing a service plan optimizer for a cell-phone carrier-a system that looked at a customer's cell-phone usage and suggested the most bang-for-your-buck plan. \"My guys built this tool-it took single digit milliseconds to get the results back. And it was giving [accurate] results, not just some plan we wanted to sell them,\" Hoober says. \"But when we tested with people, they assumed it was all marketing bullshit because it was instantaneous. They'd say, ‘This was obviously a canned result, I'm just gonna shop myself.'\"So Hoober introduced a waiting randomizer. The same code pulled the same results, but a timer delayed the display of those results anywhere from 8 to 30 seconds. The only visual feedback was a spinning indicator. Were focus group testers annoyed? Did they label the machine incompetent? Just the opposite. \"People would sit there, asking, 'I wonder what it's doing?'\" Hoober says. \"Results would show up, and they'd lean in to the computer [assuming] it must have been really hard to get that information!\" One hundred percent of people tested trusted the new tool, even though the only thing that changed significantly was their wait.As subversive as this sort of design sounds, when used properly, consumers actually prefer the user experience of these white lies that take their time. In 2011, a team of Harvard researchers dubbed such phenomenon \"the labor illusion.\" They made up fake travel and dating sites to test how delays impacted a consumer's reaction to the experiences. They found that people generally preferred the delayed results and considered them more valuable over instantaneous ones, provided that the interface included some level of \"transparency\"-feedback that explained the system was \"comparing flights,\" or whatever else it may have done in milliseconds.There are limits to how long people will wait. The paper found that subjects were willing to wait up to 30 seconds on travel sites, but only 15 seconds on dating sites before waiting had a negative effect. \"Although there may be a number of reasons for this difference (people may be more impatient to find a mate than a flight, for example), we suggest that one critical factor relates to consumers' expectations,\" the researchers write. Subjects expected that that a dating engine could find them a match faster than a travel engine could find them a trip. Was that expectation founded in some past experience of dating and travel sites? Possibly.But that's the point. Our expectations have supreme power to shape our experience of the world, including how we interact with our gadgets. \"If we break customers' expectations, the interface stops working,\" says Kowitz. \"That can happen if the Internet is moving too slowly. And in some cases, it can actually happen if the interface is moving too fast.\"In this sense, Kowitz believes that the industry can sometimes focus on removing points of friction-be that status bars, explanatory documentation, or extra screens-to a fault. If someone expects a process to take a long time, subverting their expectations with instant results isn't necessarily a good thing, just like a steak set in front of you a minute after sitting down at a restaurant would raise the alarm.\"My guess is that over time, [our] expectations will catch up,\" says Kowitz. \"It's one of those things where technology is getting a little ahead of what people expect, and that means we just have to meet them halfway.\""
        },
        {
            "title": "The UX of Learning UX is Broken",
            "date": "Mon May 16 2016 12:05:49 GMT-0400 (EDT)",
            "text": " It's May of 1999, the heart of the dot-com boom. I walk into my first \"professional\" job as an information architect (what we would call User Experience today). I was an arrogant 22-year-old who had not only been creating websites since I was the age of 18, but had been paid well for it. From Photoshop to HTML to (limited) SQL, I knew how to do it all. And IA (information architecture) was only one slim facet of what I knew. As I sauntered through the overly-designed office of people pods, I was clearly the youngest person in this department - but there was no way anyone was more experienced in the Web.Several hours into my first day, as I'm sitting at my desk, one of the Lead IA's strolls over to me and sets down a pile of printouts of about 200 wireframes. Every page is redlined with changes, some super simple and others that need to be thought through entirely. I'm told to work through the revisions and see what I can get done by the next morning. Three problems here: (1) I'd never seen a wireframe in my life; (2) I didn't know how to use the software they were created in; (3) I'd never worked on a project this large and complex in my life. My four years of \"experience\" weren't worth crap because this job and company required a whole different set of skills for me to do my job.Almost two decades later, I've been fortunate to collaborate with a range of User Experience (UX) designers creating and evolving a variety of successful digital products such as Hulu, Foursquare, the Wall Street Journal, and Rent the Runway. Each of these experiences not only required unique sets of knowledge - they forced me and my colleagues to wrap our heads around interactions and situations we'd never thought through before. About four and a half years ago, I met Sarah Doody when General Assembly (GA) asked us to create, design, and teach the first version of its User Experience Immersive Class, a 12-week program that promised an introduction to the world we'd both been working in for over a decade (more on that later).For those who don't know, GA opened in 2011 in NYC as both a co-working space and a destination for technology learning. Over the past few years, the company has pivoted to mainly focus on immersive education classes for UX, design, and development that \"transforms thinkers into creators through education and opportunities in technology, business, and design.\" To date, they've raised $119.5 million in order to do so.Recently, we received an email from GA with the subject line, \"Learn UX Design in Our New One-Week, Accelerated Program.\"This course, to us, is that last straw in a recent string of programs offered by GA and other organizations touting to teach you the skills you need to be a UX professional in an accelerated period of time.From 12 weeks to one week - that's quite a jump for an already compact course timeline. The claims of these courses appear to be that once you've spent your time and, more importantly, gobs of money, you'll be ready to showcase your UX portfolio and knowledge in interviews that you'll quickly parlay into a job. Indeed, in this one week course alone, General Assembly claims that you will \"compile a full suite of UX documentation\" and \"create a portfolio piece featuring a start-to-finish case study and clickable prototype to showcase your new UX design skills at interviews.\" Promises like these define everything that is wrong with these courses and, furthermore, are a taint on the UX industry - or any industry that requires myriad skills and years of training. Not to mention that for us, this far into our careers, we are still learning everyday as new technologies, platforms, and habits emerge.Think about it - would you want a plumber who only has one week's training? How about a psychologist? Or an architect? A high school teacher? Even the training to become a Starbucks barista takes more than a week.Returning to that first day of Dan's career, the thinking he had to do to fix that product wasn't mindless replacement of copy or a paint-by-number exercise. The work required understanding how technology worked and how people were actually using the internet. Remember, this was 1999 and the only platform prioritized was Windows (the Apple resurgence hadn't quite happened yet), Netscape and Internet Explorer were the only browsers that mattered, and most people still used dial-up, making connectivity speed a factor. The internet was fairly new and most people's habits were still forming, but there were some general tenets you could follow. To be perfectly honest, the experience Dan had designing for the web up to that point did in fact contribute to his ability to solve those problems, and ultimately qualified him to do that job.Jump ahead 17 years to today … there is a lot more to consider in design: platforms, devices, and audience habits (plus expectations, goals, etc.) have changed drastically.We design on desktop for Chrome, Safari, IE (a little), all for both Mac and PC. We design for Chrome and Safari on iOS across 2-3 different phone sizes. We design for Chrome on Android. Nevermind thinking about responsive breakpoints for tablet, as well. And we know a whole lot more about how people use the internet and how different audiences have different habits that require different design thinking. Creating experiences for Millennials requires different thinking than for Boomers or GenXers.But according to General Assembly, after a week in 9-5 classes, you're ready to go out into the world with a prototype portfolio and smoothly sail into a career in UX. What a farce.We didn't always feel this way about the current state of education around UX. Like we mentioned earlier, we were asked by GA to create the first immersive UX course - a 12-week program that met for three hours twice a week.We set out to design a course that was meant to give our students an overview of what UX is all about, touching on topics as varied as the basics of user research, the range of deliverables, general principles to start with when solving problems, and what the various roles are in the world of UX (yeah, there are a few). We even wanted our students to get practical experience, so part of our 12-week goal was that our students could walk out of this course with a product in hand (or at least all of the UX done for one). We were ambitious. We were excited. And boy, were we wrong.Our students for this course split themselves into two groups: mid-career folks who were looking to understand how UX could fit into their current jobs, and people who were thinking about a career change and needed to get a grounding in UX to figure out which part of it suited them best. Either way, what we put together amounted to 144 hours of class time that barely scratched the surface of what we wanted (needed?) to communicate, and, in the end, while we hope our students got a decent overview of the industry, there was much we simply couldn't cover in 12 weeks.While we would have liked to evolve our original curriculum (in true UX fashion) to be better suited for a high-level experience, that was the last immersive class we taught. There were a variety of factors involved that have nothing to do with the quality of the course or with how GA ended up creating its program. There was one thing that we both couldn't stomach: at the end of a program - no matter how long or short it was - we would have to guarantee everyone would get a certificate proclaiming that they were ready for primetime.The fact is, many students probably could be ready to take on a junior or intern role, but many weren't, and that's okay. UX isn't for everyone. And while it could be upsetting to pay thousands of dollars to take a course only to be told you're not ready for a career in this field, we'd rather be honest than put our names on something we couldn't defend. In what other profession can one get \"certified\" just for showing up?When looking at these programs, Kevin Kearney, CEO of New York-based product design firm Hard Candy Shell, commented, \"Great, now you can draw boxes and make up a persona.\"Austin Govella, an experience director at Avanade Experience Design and co-author of the book \"Information Architecture: Blueprints for the Web,\" asks, \"Can you learn enough in a few days to switch to a career in UX? Not any more than a few days with Rails makes you a developer or a seminar on Gantt charts makes you a Project Manager.\"We're not saying you can't learn some basic skills over the course of a few days. But you aren't ready to jump into a career. \"You definitely need some formal training with experienced practitioners,\" says Govella. \"And, you need to read. And look at other people's work and think about what works and doesn't. And fail on some projects of your own.\"Sophie Freiermuth, a UX designer and founder of Baguette UX in London, has first hand experience with these programs, having previously taught GA's one-day \"Introduction to UX,\" in addition to being involved in its intensive course as a project judge and topic instructor. She's also been teaching UX within large organizations. She commented, \"when the UX training emphasizes the creation of a portfolio, often populated by team work, these people can easily become strong applicants on paper.\"The creation of a portfolio during a course also presents a challenge for recruiters and hiring managers.Freiermuth brings up a good point in that a lot of the graduates don't know what they don't know. The professional facade of the course gives them the confidence to believe that they are qualified. However, their lack of real world challenges leaves their competence truly untested.Abby Covert, a leading independent information architect and author of the book How To Make Sense of Any Mess, echoes this concern: \"I feel like I want UX to be a teachable set of skills and places like GA are trying to do that, but I worry that their business models demand a turn around time for these skills that is not reasonable, which means they likely turn out a lot of graduates that think they are ready to work, but in many cases they are not. I also wish that the price tag for these lessons wasn't so high as I worry that is a sure fire way to lower diversity in our industry.\" User Experience design matters and more and more people and companies are taking note. AirBnb, Warby Parker, and Uber are all companies that made a conscious effort to focus on design and as a result, created great experiences that their customers love.It's clear that experience design plays a critical role in attracting audience, building trust, and getting users to take action. Because of this, it's not surprising that there is increased demand for User Experience designers today. Companies realize the return on investment when they hire good designers.But, the rapid increase in popularity of UX has lead to increasingly broad definitions of what a User Experience designer actually does. Ask five people what a User Experience designer does and you'll get five answers.Companies understand they need to invest in User Experience, but they're not sure what that means in terms of what types of people to hire. Many times, they simply look to hire one person who can do it all (cue the unicorns) rather than a team of people with a balance of generalist and specialist skills.As the perceived definition of design has matured from \"make it pretty\" to \"make a great experience,\" the skillset of the designer has also matured. However, the ecosystem of how to learn about UX is unfortunately more confusing than ever.If you do a Google search for \"UX courses\" you'll be flooded with a wide range of options to match any budget and schedule. For example, Udemy has a two-to-three week course for $40, General Assembly has a 10-week part-time course for $4,000, and Center Centre has a 24-month program for $59,980. The School of Visual Arts in New York City offers three types of education programs on interaction design alone, ranging from workshops to a Master's degree. And that's only a very small sample of the diversity of courses available today.\"Obviously there's a huge difference between a one-week course and a six-month course. It depends on what the end goal is,\" says Alex Rainert, VP of Product at Nucleus and former head of product for Foursquare. \"To be a UX designer and think like a UX designer, it takes a lot more. It's not something you can do in a vacuum, understanding users, understanding behavior, interaction design, it takes experience to know those things.\"When we created and taught the first iteration of General Assembly's UX Design Immersive in 2012, we fully intended it to be a foundational course where you could learn the basics and then continue your learning with future courses that would focus on specific aspects of User Experience. What we fundamentally disagree with is the idea that in a matter of weeks you can have enough knowledge to make a career switch and get hired as a junior User Experience designer. Yet, so many of the courses are marketed this way.\"The problems I've seen are folks coming from those programs whose book looks polished and professional, but they're actually more green than their book reflects,\" says Ron Goldin, a product design consultant, founder of New York based product design firm Akko, and former Director of Design at Kitchensurfing.With the vast number of UX courses and programs pumping out graduates with certificates of completion, the market for junior UX designers is completely saturated, as echoed above by Kearney. It's wonderful to see so many people who are excited about the industry and who want to be a part of it, but if they truly believe it's the right career path for them, we'd rather they earn the experience than try to buy their way in.Does this create a supply and demand problem? According to this Quora thread, the answer is yes. One anonymous graduate said, \"GA seems to be intent on reckless and exponential expansion. UXDi (UX design immersive) has 2 classes, and WDi (Web Design immersive) has 4 classes, each semester. This doesn't take into account the other part time courses. Combined with lack of admissions standards, the graduation rate only appears to make things hard for each graduating batch.\"The same person went on to say, \"I received several competitive job offers within a month of graduating, didn't have to apprentice / intern at all, and I'm fully employed as a User Experience designer in what is pretty much my dream job. I do extensive research and usability testing, steer project strategy, and also do wireframing and prototyping.\"However, this should not be considered a normal outcome. Rainert says, \"That's not to say there aren't people that are empathetic and get it faster,\" but the reality is that \"someone with a 12 week experience joining a team where there's an opportunity for great mentorship and a path to growth, that can be a great foundation.\"Certification does not matterMany courses offer certification, often after as little as one week. In our careers, never once in an interview did someone ask if we had UX certification. Similarly, never once in the process of hiring someone did we ever look to see if they had UX certification. To be frank, we'd have to do a Google search to actually know what certifications are even out there. Would someone with a degree in interaction design or human factors stand out? Of course. But at the same time, a certificate doesn't equal competence. A certificate doesn't mean you can do \"it\" in the real world. A certificate just means you showed up and are a good test taker - if there was even a test at all! We often ask ourselves, if we had to take the certification exam, would we pass it? Maybe not. Because User Experience design is so subjective - there are no true rights or wrongs for the most part - working through problems may have the same process but there could be ten different answers.Best practices aren't always the best practiceA couple of years ago, we were whiteboarding with someone who had taken a certification course. When most of us had agreed on the solution to the particular problem, the \"certified\" UXer objected, saying that the instructor had said you can never use that specific interaction paradigm. The issue is, there's no such thing as never. In design, the idea of best practices and design patterns is rampant. The concern we have is that every product you make will have a different context - the users will be different, the purpose will be different, the device could even be different. What works well for one audience may be a disaster for another. You must carefully dissect whether or not a best practice or design pattern actually fits the context in which you're working. It's not enough to know best practices and patterns - what matters is that you know when to use them, and when not to use them.Knowing how to think trumps knowing a toolWhen we interview potential UX team members, we rarely get to the portfolio. It's generally a conversation about what's going on in digital, how we all approach solving problems and, in some cases, geeking out over both our favorite and most mortifying experiences. With the rise in prototyping and design tools available, it's not that difficult to get a good template or stencil set and start arranging things on a screen. A lot of courses focus on using software. We never start by putting pen to paper because anyone can learn to use a tool. It's all the thinking and conversation that lead up to creation where most true experience work is done.One of Sarah's first bosses gave her some great advice: know your tool, know your tool as fast as you can, know your tool as well as you can. So that's what she did. But then she realized she had to learn how to think like a designer in order to use the software to create smart, thoughtful designs. A great designer doesn't just create a deliverable.Process is not a deliverableA lot of courses teach processes and formulas. But every project is different - different timelines, budgets, and goals. Not to mention the different personalities you'll deal with, and the challenge of navigating clients and stakeholders who often times want to be very hands on. Therefore, the process constantly needs to be tailored to each project. Being able to tailor your process requires confidence that only comes from experience.Creating truly successful products starts with understanding people - and not just the people you're designing for (though that's critical as well). Often the User Experience designer is sitting in center of the conversation, navigating the challenges faced by business requirements, conflicting users needs, technical limitations, and design opportunities. Marrying all of these into a single product means gaining as much of an understanding of all sides as possible, and then communicating effectively, fairly, and clearly to all team members. And that is before the pen ever hits the paper. Just as we'd approach designing any product, we understand both that the system will never be perfect and that it's an ever-evolving process. As it should be. And to be honest, we don't know how to fix it right now. But what we want to start is a conversation. A conversation about the characteristics of a great User Experience designer.Why now? Because our field is in a state of change. As the field changes, we'll have to learn new software and new ways to design for different devices and platforms. But the principles behind how we design an experience won't change because we're designing for people. And the best User Experience designers fundamentally understand people.In his 2016 Design In Tech report, John Maeda (Design Partner at KPCB and formed RISD President) addressed the current state of design education.KPCB conducted a survey of 329 current and former design students to understand what skills design programs teach versus what students wish they had learned once out in the real world. The study found that current design programs focus on the pillars of communicating and articulating your design, using empathy to design, and defending your designs. However, in hindsight, the pillars that past design graduates wish were pillars of their education focused on understanding business, finance, user research, analytics, leadership, and teamwork.Communication & CollaborationTo be a great designer, you have to master the soft skills. A huge part of the job will involve stepping away from the design software of choice and dealing with people. Designers must be master communicators, possessing the confidence necessary to have the tough conversations. And they will happen. Designers need to know how to deal with stubborn stakeholders, tell people they are wrong and why, admit when they're wrong, and master the art of explaining their design decisions. Designers must also learn the art of collaboration. Working with people in many different business roles means they have to quickly be able to understand others' perspectives, what matters to them, and how they can contribute to the UX process. Also of importance is the ability to collaborate with other designers, which involves being able to quickly recognize each other's strengths - and assign responsibilities accordingly.Technical LiteracyThe great debate concerning whether or not designers should learn how to code isn't going away. We firmly believe that designers do not need to know how to code and that it's more important to be literate in the wide variety of other skills we mention in this article. However, this doesn't mean that designers should ignore technology - and if the want to take the time to learn the ins and outs of code, it certainly can't hurt. To design effectively and collaborate with developers, designers must be technically literate. Designers should have a basic knowledge of HTML and CSS so that they understand how their design will ultimately get built. Technical literacy is similarly valuable when it comes to troubleshooting. Not all designers will get to see their design through the product development lifecycle, but these skills are useful for designers who find themselves helping with quality assurance.Always Be LearningTechnologies are changing faster than ever before. New platforms and devices mean that our medium is always shifting. In order to stay current, designers must commit to lifelong learning. Technologies change and user habits change (and go away). This constant state of innovation means that we always have to be re-thinking what we know. We cannot simply rely on old knowledge, templates, patterns, and habits. We must always ask ourselves why we're doing things a certain way. We must always challenge each other to justify our design decisions so that we don't fall prey to being too comfortable and complacent.Existing ResourcesThere are a ton of great existing resources available to help people at whatever level of User Experience they're at. We are both completely self taught. Our learning was a combination of reading blogs and books, engaging with people we looked up to on Twitter, watching videos, and simply doing it all over and over and over again.Learning From Other IndustriesAt its core, a User Experience professional is a storyteller. Every project involves looking at the paths a variety of users will follow in order to achieve their goals with the product we are creating. Often, we find that examining the process of other storytelling professions can give us insight as to how to be better organizers of information. And, often, people with experience in these other disciplines make great UXers, particularly those from the worlds of film, theater, journalism, psychology, architecture, and library science.\"One of the best UX designers I ever hired was an architect,\" says Rainert. \"Architects have a very useful way of looking at problems and space and it translates well into interface design.\"Rainert's experience isn't unusual. One of the biggest challenges with creating education around User Experience is that so much of the expertise comes from experience and the ability to empathize with your audience, as well as truly understanding how to collaborate. He goes on to say that \"it's less about wireframes and deliverables and more about understanding users and behavior and that comes from talking to users, sketching stuff out, trying things that don't work. It's more of a process than that. Especially if you're looking at what the expectations are for great design. It's not something that can just be churned out.\"Bringing experience to the table from other industries or from true research is the best way to learn. And if there's a system to be designed that can allow for that, we are all for it, but trapping folks in an academic environment for weeks on end isn't the solution our industry needs. We don't spend our days in cubicles producing documentation, we speak to people and most of those people live outside the tech world. Alternate perspectives allow for more diverse and original thinking. Where do we go from here? It's easy to try and make General Assembly and its peer companies scapegoats, but that's not productive or solution-oriented. GA isn't the problem. It's the symptom. The problem is that the UX industry is misunderstood. For wonderful reasons, we cannot be defined as one thing and there's no one true path to success. We've been fighting for almost 20 years now to just gain the recognition that our role in the creation of a product not only matters - it is critical. And now we're at a place where it's trendy to be in User Experience. That's a huge victory for the profession, but we need to fight to not let it be cheapened by thinking just anyone can do it. Just like not everyone is fit to be a doctor or a carpenter or an astronaut.Whenever we kick off a project with a new client, we have a slide in our deck that says \"Creating a product is hard. If it was easy, everyone would be doing it.\" User Experience, with all of the facets that comprise it, is a challenge everyday. Be proud of that. Embrace it. Love it. Live it. We do. This is the first article in a series about the state of the UX eco-system:1. The UX of Learning UX is Broken2. The UX of Hiring for UX Positions3. Coming Next: The UX of Getting Started in UX ABOUT THE AUTHORSDan Maccarone is the co-founder of Charming Robot, a digital product design agency in NYC. He also hosts the podcast Story in a Bottle, chronicling the stories of tech and media professionals. Follow him on Twitter @danmaccarone.Sarah Doody is a User Experience Designer in NYC. She also publishes a popular weekly UX newsletter, The UX Notebook and frequently writes about UX on her website. Follow her on Twitter @sarahdoody. We are not alone in our point-of-view. Since then, we've spoken to a variety of other User Experience professionals to see what they had to say about these programs. We have nothing against design education. The point is that most User Experience courses are a great entry point for people who want to learn about the field. But completing a course should be the beginning of your journey, not a badge of competency.The rapid rise in UX courses creates many false perceptions about what it takes to succeed in the \"booming\" and \"exploding\" field. Here are just a few that stand out:Great designers justify every decision they make along the way to getting to the final product. And learning to think like a designer doesn't happen in a few weeks. As we think through the list of qualities that a User Experience designer should have, these are the ones that immediately rise to the surface for us (but please feel free to add your own in responses below): As designers, we are problem solvers. So let's solve this problem together.What can we as a design community do to fix the broken way that people currently learn how to become great at UX? The Failed MVP: You Can't Timebox Education The State of the UX Education Ecosystem Quality Assurance: Fixing the Bugs in UX Education In Conclusion "
        },
        {
            "title": "The Veil of Ignorance",
            "date": "Tue Mar 22 2016 20:00:00 GMT-0400 (EDT)",
            "text": " You are in your mid-twenties and your vision is 20/20 or better. You are not color blind and all the devices you own have a ‘retina' screen. You are standing in a major city and your internet is fast. Your vision isn't 20/20 anymore, just like 65% of the population, it's worse than that. Like 4.25% of people on the planet you are color blind. You are now 1 in 10. You are dyslexic. Your phone is 3 years old. You can't afford a new one. Your data plan caps out at 3g and 1 gigabyte a month. The internet connection where you spend most of your time is not what you'd like it to be. You can't see at all. You use a computer with a screen reader. A mouse is mostly useless to you. You use your keyboard to navigate around interfaces and sites. If you woke up tomorrow without knowing what your life would be like - and you needed to build a new internet for everyone. What would you think about? What would your priorities be? What problems would you try to solve? American philosopher John Rawls (1921-2002) had a lot of mind-crushing ideas, but perhaps the most significant was his concept of \"the veil of ignorance.\" It best applies to the creation of social contracts. At risk of oversimplification, Rawls's scenario was basically this: Let's pretend you were instantly able to re-create American society in totality, and you could do it in whatever way you wanted. You could make (or eliminate) whatever laws you desired, and you could implement whatever financial and judicial structures you believed would work best. However, you must do this under a magical \"veil of ignorance.\" The moment after you create this system, you'll no longer be yourself (and you don't have any idea what your new role in this society shall be). You might be a rough facsimile of your current self, or you might be someone entirely new. Your gender might be different, or your race. It's possible you will be extremely destitute and appallingly ugly. You'll have a different level of intelligence and a different work ethic. You might suddenly be disabled, or super athletic, or homosexual, or criminally insane. As such, you will (probably) want to create a society that is as fair and complete as possible, since you have no idea what station you'll inherit within your own new, self-constructed boundaries. You need to think outside of your current self, because tomorrow you'll be someone else entirely. Chuck Klosterman - 'I Wear the Black Hat'\nJohn Rawls mostly philosophized about theories of justice but I think he would have been a pretty great designer. You drive to a job interview. Before you get out you look in the mirror and straighten your tie. Both of your legs work so you open the door and climb out. Earlier that day you ran 6 miles and did 20 minutes of stretching afterwards. Your legs feel great! You walk across the parking lot and bound up a set of stairs. You don't think twice about it. You don't have two working legs. You arrive at a building for a job interview. You exit your automobile and roll across the parking lot. There is no ramp. Your wheelchair can't climb stairs. You don't know what to do. Thanks to the Americans with Disabilities Act this doesn't happen as much as it used to. Most people don't view a set of stairs as a barrier to a building. We don't observe whether or not there is a ramp. We don't notice if a doorway is wide enough for a wheelchair. Or if a hallway is wide enough to make a 180 degree turn. We most likely don't think about this because our life doesn't necessitate it. When we build things - we must think of the things our life doesn't necessitate. Because someones life does. Imagine the frustration of people who use things designed by people who don't take their basic needs into consideration. I think it is dehumanizing. \"The ADA is one of America's most comprehensive pieces of civil rights legislation that prohibits discrimination and guarantees that people with disabilities have the same opportunities as everyone else to participate in the mainstream of American life -- to enjoy employment opportunities, to purchase goods and services, and to participate in State and local government programs and services.\" Think about the current state of the website/application/digital product you were working on. Can everyone use it with the same opportunity to participate in 'mainstream American life?' Statistically speaking, probably not. But you are providing a service. When people say \"My old tired eyes can't read this\" It is because they can't. I've often hear two complaints when designing for accessibility.\nFirst lets talk about color contrast. There are 140,737,479,966,720 combinations of hexcodes. Obviously not all of them are accessible. If only 1% of all color combinations are accessible than there are still almost 141 million combinations to choose from. This seems more than adequate to paint any bikeshed you will come across for the rest of your career. \"If it is too small people can hit command + and make the type bigger\" This is a fact that can't be disregarded. But I offer a counter: If the type is so big that it offends your user they can hit command - and make the type smaller. I have never observed anyone do this. Quite often, I watch people bump up the font-size of the page they are viewing. This seems backwards. Typography, like color, and music is all about how values relate to each other. If large type looks clumsy it is most likely due to an ineffective type scale that doesn't relate to the proportions within your design system. Type scales are all about relativity. The thing about large type, is that everyone can read it. Not everyone can read small type. This is a fact. No one complains that typefaces set at 20px are too big to read. In all of the user testing I have ever done that has never been said. But people have complained about the readability of type set to the equivalent of 10 and 12px. Consider the consequences of building a ramp instead of a staircase. Anyone can get up a ramp. But not everyone can get up a set of stairs. As a design community I think we should be building more ramps. I'm a designer. I am not here to focus on making things pretty. I'm here to make things work. I am a designer because I want to solve problems. I want people to be less frustrated when they use technology. I want to make their lives easier. I don't want to make anyones life more difficult. These two sentiments sound the same, but they are not. I find both are important to consider. When I sit down to design things I try to put on the veil of ignorance. I imagine a world where I am not who I am right now. And I think about all the things that could possibly frustrate me. Then I think some more. I try to design for that reality. I don't design for myself and my perfect eyesight, my retina screens, and my fast internet connection. I design for everyone I can think of. Which is a growing list of people with a growing list of concerns that possess a growing number of devices made up of a wide variety of screen sizes. If everyone can use your product I think it's good for your business. But even if it wasn't, I think it would be the right thing to do. Which makes it worth doing. So I'd do it anyway."
        },
        {
            "title": "The empty brain",
            "text": " No matter how hard they try, brain scientists and cognitive psychologists will never find a copy of Beethoven's 5th Symphony in the brain - or copies of words, pictures, grammatical rules or any other kinds of environmental stimuli. The human brain isn't really empty, of course. But it does not contain most of the things people think it does - not even simple things such as ‘memories'.Our shoddy thinking about the brain has deep historical roots, but the invention of computers in the 1940s got us especially confused. For more than half a century now, psychologists, linguists, neuroscientists and other experts on human behaviour have been asserting that the human brain works like a computer.To see how vacuous this idea is, consider the brains of babies. Thanks to evolution, human neonates, like the newborns of all other mammalian species, enter the world prepared to interact with it effectively. A baby's vision is blurry, but it pays special attention to faces, and is quickly able to identify its mother's. It prefers the sound of voices to non-speech sounds, and can distinguish one basic speech sound from another. We are, without doubt, built to make social connections.A healthy newborn is also equipped with more than a dozen reflexes - ready-made reactions to certain stimuli that are important for its survival. It turns its head in the direction of something that brushes its cheek and then sucks whatever enters its mouth. It holds its breath when submerged in water. It grasps things placed in its hands so strongly it can nearly support its own weight. Perhaps most important, newborns come equipped with powerful learning mechanisms that allow them to change rapidly so they can interact increasingly effectively with their world, even if that world is unlike the one their distant ancestors faced.Senses, reflexes and learning mechanisms - this is what we start with, and it is quite a lot, when you think about it. If we lacked any of these capabilities at birth, we would probably have trouble surviving.But here is what we are not born with: information, data, rules, software, knowledge, lexicons, representations, algorithms, programs, models, memories, images, processors, subroutines, encoders, decoders, symbols, or buffers - design elements that allow digital computers to behave somewhat intelligently. Not only are we not born with such things, we also don't develop them - ever.We don't store words or the rules that tell us how to manipulate them. We don't create representations of visual stimuli, store them in a short-term memory buffer, and then transfer the representation into a long-term memory device. We don't retrieve information or images or words from memory registers. Computers do all of these things, but organisms do not.Computers, quite literally, process information - numbers, letters, words, formulas, images. The information first has to be encoded into a format computers can use, which means patterns of ones and zeroes (‘bits') organised into small chunks (‘bytes'). On my computer, each byte contains 8 bits, and a certain pattern of those bits stands for the letter d, another for the letter o, and another for the letter g. Side by side, those three bytes form the word dog. One single image - say, the photograph of my cat Henry on my desktop - is represented by a very specific pattern of a million of these bytes (‘one megabyte'), surrounded by some special characters that tell the computer to expect an image, not a word.Computers, quite literally, move these patterns from place to place in different physical storage areas etched into electronic components. Sometimes they also copy the patterns, and sometimes they transform them in various ways - say, when we are correcting errors in a manuscript or when we are touching up a photograph. The rules computers follow for moving, copying and operating on these arrays of data are also stored inside the computer. Together, a set of rules is called a ‘program' or an ‘algorithm'. A group of algorithms that work together to help us do something (like buy stocks or find a date online) is called an ‘application' - what most people now call an ‘app'.Forgive me for this introduction to computing, but I need to be clear: computers really do operate on symbolic representations of the world. They really store and retrieve. They really process. They really have physical memories. They really are guided in everything they do, without exception, by algorithms.Humans, on the other hand, do not - never did, never will. Given this reality, why do so many scientists talk about our mental life as if we were computers?Get Aeon straight to your inboxDailyWeeklyIn his book In Our Own Image (2015), the artificial intelligence expert George Zarkadakis describes six different metaphors people have employed over the past 2,000 years to try to explain human intelligence.In the earliest one, eventually preserved in the Bible, humans were formed from clay or dirt, which an intelligent god then infused with its spirit. That spirit ‘explained' our intelligence - grammatically, at least.The invention of hydraulic engineering in the 3rd century BCE led to the popularity of a hydraulic model of human intelligence, the idea that the flow of different fluids in the body - the ‘humours' - accounted for both our physical and mental functioning. The hydraulic metaphor persisted for more than 1,600 years, handicapping medical practice all the while.By the 1500s, automata powered by springs and gears had been devised, eventually inspiring leading thinkers such as René Descartes to assert that humans are complex machines. In the 1600s, the British philosopher Thomas Hobbes suggested that thinking arose from small mechanical motions in the brain. By the 1700s, discoveries about electricity and chemistry led to new theories of human intelligence - again, largely metaphorical in nature. In the mid-1800s, inspired by recent advances in communications, the German physicist Hermann von Helmholtz compared the brain to a telegraph.The mathematician John von Neumann stated flatly that the function of the human nervous system is ‘prima facie digital', drawing parallel after parallel between the components of the computing machines of the day and the components of the human brain Each metaphor reflected the most advanced thinking of the era that spawned it. Predictably, just a few years after the dawn of computer technology in the 1940s, the brain was said to operate like a computer, with the role of physical hardware played by the brain itself and our thoughts serving as software. The landmark event that launched what is now broadly called ‘cognitive science' was the publication of Language and Communication (1951) by the psychologist George Miller. Miller proposed that the mental world could be studied rigorously using concepts from information theory, computation and linguistics.This kind of thinking was taken to its ultimate expression in the short book The Computer and the Brain (1958), in which the mathematician John von Neumann stated flatly that the function of the human nervous system is ‘prima facie digital'. Although he acknowledged that little was actually known about the role the brain played in human reasoning and memory, he drew parallel after parallel between the components of the computing machines of the day and the components of the human brain.Propelled by subsequent advances in both computer technology and brain research, an ambitious multidisciplinary effort to understand human intelligence gradually developed, firmly rooted in the idea that humans are, like computers, information processors. This effort now involves thousands of researchers, consumes billions of dollars in funding, and has generated a vast literature consisting of both technical and mainstream articles and books. Ray Kurzweil's book How to Create a Mind: The Secret of Human Thought Revealed (2013), exemplifies this perspective, speculating about the ‘algorithms' of the brain, how the brain ‘processes data', and even how it superficially resembles integrated circuits in its structure.The information processing (IP) metaphor of human intelligence now dominates human thinking, both on the street and in the sciences. There is virtually no form of discourse about intelligent human behaviour that proceeds without employing this metaphor, just as no form of discourse about intelligent human behaviour could proceed in certain eras and cultures without reference to a spirit or deity. The validity of the IP metaphor in today's world is generally assumed without question.But the IP metaphor is, after all, just another metaphor - a story we tell to make sense of something we don't actually understand. And like all the metaphors that preceded it, it will certainly be cast aside at some point - either replaced by another metaphor or, in the end, replaced by actual knowledge.Just over a year ago, on a visit to one of the world's most prestigious research institutes, I challenged researchers there to account for intelligent human behaviour without reference to any aspect of the IP metaphor. They couldn't do it, and when I politely raised the issue in subsequent email communications, they still had nothing to offer months later. They saw the problem. They didn't dismiss the challenge as trivial. But they couldn't offer an alternative. In other words, the IP metaphor is ‘sticky'. It encumbers our thinking with language and ideas that are so powerful we have trouble thinking around them.The faulty logic of the IP metaphor is easy enough to state. It is based on a faulty syllogism - one with two reasonable premises and a faulty conclusion. Reasonable premise #1: all computers are capable of behaving intelligently. Reasonable premise #2: all computers are information processors. Faulty conclusion: all entities that are capable of behaving intelligently are information processors.Setting aside the formal language, the idea that humans must be information processors just because computers are information processors is just plain silly, and when, some day, the IP metaphor is finally abandoned, it will almost certainly be seen that way by historians, just as we now view the hydraulic and mechanical metaphors to be silly.If the IP metaphor is so silly, why is it so sticky? What is stopping us from brushing it aside, just as we might brush aside a branch that was blocking our path? Is there a way to understand human intelligence without leaning on a flimsy intellectual crutch? And what price have we paid for leaning so heavily on this particular crutch for so long? The IP metaphor, after all, has been guiding the writing and thinking of a large number of researchers in multiple fields for decades. At what cost? In a classroom exercise I have conducted many times over the years, I begin by recruiting a student to draw a detailed picture of a dollar bill - ‘as detailed as possible', I say - on the blackboard in front of the room. When the student has finished, I cover the drawing with a sheet of paper, remove a dollar bill from my wallet, tape it to the board, and ask the student to repeat the task. When he or she is done, I remove the cover from the first drawing, and the class comments on the differences.Because you might never have seen a demonstration like this, or because you might have trouble imagining the outcome, I have asked Jinny Hyun, one of the student interns at the institute where I conduct my research, to make the two drawings. Here is her drawing ‘from memory' (notice the metaphor):And here is the drawing she subsequently made with a dollar bill present:Jinny was as surprised by the outcome as you probably are, but it is typical. As you can see, the drawing made in the absence of the dollar bill is horrible compared with the drawing made from an exemplar, even though Jinny has seen a dollar bill thousands of times.What is the problem? Don't we have a ‘representation' of the dollar bill ‘stored' in a ‘memory register' in our brains? Can't we just ‘retrieve' it and use it to make our drawing?Obviously not, and a thousand years of neuroscience will never locate a representation of a dollar bill stored inside the human brain for the simple reason that it is not there to be found.The idea that memories are stored in individual neurons is preposterous: how and where is the memory stored in the cell?A wealth of brain studies tells us, in fact, that multiple and sometimes large areas of the brain are often involved in even the most mundane memory tasks. When strong emotions are involved, millions of neurons can become more active. In a 2016 study of survivors of a plane crash by the University of Toronto neuropsychologist Brian Levine and others, recalling the crash increased neural activity in ‘the amygdala, medial temporal lobe, anterior and posterior midline, and visual cortex' of the passengers.The idea, advanced by several scientists, that specific memories are somehow stored in individual neurons is preposterous; if anything, that assertion just pushes the problem of memory to an even more challenging level: how and where, after all, is the memory stored in the cell?So what is occurring when Jinny draws the dollar bill in its absence? If Jinny had never seen a dollar bill before, her first drawing would probably have not resembled the second drawing at all. Having seen dollar bills before, she was changed in some way. Specifically, her brain was changed in a way that allowed her to visualise a dollar bill - that is, to re-experience seeing a dollar bill, at least to some extent.The difference between the two diagrams reminds us that visualising something (that is, seeing something in its absence) is far less accurate than seeing something in its presence. This is why we're much better at recognising than recalling. When we re-member something (from the Latin re, ‘again', and memorari, ‘be mindful of'), we have to try to relive an experience; but when we recognise something, we must merely be conscious of the fact that we have had this perceptual experience before. Perhaps you will object to this demonstration. Jinny had seen dollar bills before, but she hadn't made a deliberate effort to ‘memorise' the details. Had she done so, you might argue, she could presumably have drawn the second image without the bill being present. Even in this case, though, no image of the dollar bill has in any sense been ‘stored' in Jinny's brain. She has simply become better prepared to draw it accurately, just as, through practice, a pianist becomes more skilled in playing a concerto without somehow inhaling a copy of the sheet music.From this simple exercise, we can begin to build the framework of a metaphor-free theory of intelligent human behaviour - one in which the brain isn't completely empty, but is at least empty of the baggage of the IP metaphor.As we navigate through the world, we are changed by a variety of experiences. Of special note are experiences of three types: (1) we observe what is happening around us (other people behaving, sounds of music, instructions directed at us, words on pages, images on screens); (2) we are exposed to the pairing of unimportant stimuli (such as sirens) with important stimuli (such as the appearance of police cars); (3) we are punished or rewarded for behaving in certain ways.We become more effective in our lives if we change in ways that are consistent with these experiences - if we can now recite a poem or sing a song, if we are able to follow the instructions we are given, if we respond to the unimportant stimuli more like we do to the important stimuli, if we refrain from behaving in ways that were punished, if we behave more frequently in ways that were rewarded.Misleading headlines notwithstanding, no one really has the slightest idea how the brain changes after we have learned to sing a song or recite a poem. But neither the song nor the poem has been ‘stored' in it. The brain has simply changed in an orderly way that now allows us to sing the song or recite the poem under certain conditions. When called on to perform, neither the song nor the poem is in any sense ‘retrieved' from anywhere in the brain, any more than my finger movements are ‘retrieved' when I tap my finger on my desk. We simply sing or recite - no retrieval necessary.A few years ago, I asked the neuroscientist Eric Kandel of Columbia University - winner of a Nobel Prize for identifying some of the chemical changes that take place in the neuronal synapses of the Aplysia (a marine snail) after it learns something - how long he thought it would take us to understand how human memory works. He quickly replied: ‘A hundred years.' I didn't think to ask him whether he thought the IP metaphor was slowing down neuroscience, but some neuroscientists are indeed beginning to think the unthinkable - that the metaphor is not indispensable.A few cognitive scientists - notably Anthony Chemero of the University of Cincinnati, the author of Radical Embodied Cognitive Science (2009) - now completely reject the view that the human brain works like a computer. The mainstream view is that we, like computers, make sense of the world by performing computations on mental representations of it, but Chemero and others describe another way of understanding intelligent behaviour - as a direct interaction between organisms and their world.My favourite example of the dramatic difference between the IP perspective and what some now call the ‘anti-representational' view of human functioning involves two different ways of explaining how a baseball player manages to catch a fly ball - beautifully explicated by Michael McBeath, now at Arizona State University, and his colleagues in a 1995 paper in Science. The IP perspective requires the player to formulate an estimate of various initial conditions of the ball's flight - the force of the impact, the angle of the trajectory, that kind of thing - then to create and analyse an internal model of the path along which the ball will likely move, then to use that model to guide and adjust motor movements continuously in time in order to intercept the ball.That is all well and good if we functioned as computers do, but McBeath and his colleagues gave a simpler account: to catch the ball, the player simply needs to keep moving in a way that keeps the ball in a constant visual relationship with respect to home plate and the surrounding scenery (technically, in a ‘linear optical trajectory'). This might sound complicated, but it is actually incredibly simple, and completely free of computations, representations and algorithms.we will never have to worry about a human mind going amok in cyberspace, and we will never achieve immortality through downloadingTwo determined psychology professors at Leeds Beckett University in the UK - Andrew Wilson and Sabrina Golonka - include the baseball example among many others that can be looked at simply and sensibly outside the IP framework. They have been blogging for years about what they call a ‘more coherent, naturalised approach to the scientific study of human behaviour… at odds with the dominant cognitive neuroscience approach'. This is far from a movement, however; the mainstream cognitive sciences continue to wallow uncritically in the IP metaphor, and some of the world's most influential thinkers have made grand predictions about humanity's future that depend on the validity of the metaphor.One prediction - made by the futurist Kurzweil, the physicist Stephen Hawking and the neuroscientist Randal Koene, among others - is that, because human consciousness is supposedly like computer software, it will soon be possible to download human minds to a computer, in the circuits of which we will become immensely powerful intellectually and, quite possibly, immortal. This concept drove the plot of the dystopian movie Transcendence (2014) starring Johnny Depp as the Kurzweil-like scientist whose mind was downloaded to the internet - with disastrous results for humanity.Fortunately, because the IP metaphor is not even slightly valid, we will never have to worry about a human mind going amok in cyberspace; alas, we will also never achieve immortality through downloading. This is not only because of the absence of consciousness software in the brain; there is a deeper problem here - let's call it the uniqueness problem - which is both inspirational and depressing.Because neither ‘memory banks' nor ‘representations' of stimuli exist in the brain, and because all that is required for us to function in the world is for the brain to change in an orderly way as a result of our experiences, there is no reason to believe that any two of us are changed the same way by the same experience. If you and I attend the same concert, the changes that occur in my brain when I listen to Beethoven's 5th will almost certainly be completely different from the changes that occur in your brain. Those changes, whatever they are, are built on the unique neural structure that already exists, each structure having developed over a lifetime of unique experiences.This is why, as Sir Frederic Bartlett demonstrated in his book Remembering (1932), no two people will repeat a story they have heard the same way and why, over time, their recitations of the story will diverge more and more. No ‘copy' of the story is ever made; rather, each individual, upon hearing the story, changes to some extent - enough so that when asked about the story later (in some cases, days, months or even years after Bartlett first read them the story) - they can re-experience hearing the story to some extent, although not very well (see the first drawing of the dollar bill, above).This is inspirational, I suppose, because it means that each of us is truly unique, not just in our genetic makeup, but even in the way our brains change over time. It is also depressing, because it makes the task of the neuroscientist daunting almost beyond imagination. For any given experience, orderly change could involve a thousand neurons, a million neurons or even the entire brain, with the pattern of change different in every brain.Worse still, even if we had the ability to take a snapshot of all of the brain's 86 billion neurons and then to simulate the state of those neurons in a computer, that vast pattern would mean nothing outside the body of the brain that produced it. This is perhaps the most egregious way in which the IP metaphor has distorted our thinking about human functioning. Whereas computers do store exact copies of data - copies that can persist unchanged for long periods of time, even if the power has been turned off - the brain maintains our intellect only as long as it remains alive. There is no on-off switch. Either the brain keeps functioning, or we disappear. What's more, as the neurobiologist Steven Rose pointed out in The Future of the Brain (2005), a snapshot of the brain's current state might also be meaningless unless we knew the entire life history of that brain's owner - perhaps even about the social context in which he or she was raised.Think how difficult this problem is. To understand even the basics of how the brain maintains the human intellect, we might need to know not just the current state of all 86 billion neurons and their 100 trillion interconnections, not just the varying strengths with which they are connected, and not just the states of more than 1,000 proteins that exist at each connection point, but how the moment-to-moment activity of the brain contributes to the integrity of the system. Add to this the uniqueness of each brain, brought about in part because of the uniqueness of each person's life history, and Kandel's prediction starts to sound overly optimistic. (In a recent op-ed in The New York Times, the neuroscientist Kenneth Miller suggested it will take ‘centuries' just to figure out basic neuronal connectivity.)Meanwhile, vast sums of money are being raised for brain research, based in some cases on faulty ideas and promises that cannot be kept. The most blatant instance of neuroscience gone awry, documented recently in a report in Scientific American, concerns the $1.3 billion Human Brain Project launched by the European Union in 2013. Convinced by the charismatic Henry Markram that he could create a simulation of the entire human brain on a supercomputer by the year 2023, and that such a model would revolutionise the treatment of Alzheimer's disease and other disorders, EU officials funded his project with virtually no restrictions. Less than two years into it, the project turned into a ‘brain wreck', and Markram was asked to step down.We are organisms, not computers. Get over it. Let's get on with the business of trying to understand ourselves, but without being encumbered by unnecessary intellectual baggage. The IP metaphor has had a half-century run, producing few, if any, insights along the way. The time has come to hit the DELETE key."
        },
        {
            "title": "Understanding your users’ mental model",
            "text": " If you want to understand how someone thinks your product works, give them a pencil and ask them to draw you a diagram.A simple sketch can transport you inside someone else's head better than any other product research technique.Sketching is awesome at helping us construct new ideas and communicate them to others. It's no coincidence that many product designers' software of choice for constructing their ideas is called \"Sketch\". This post is not about that type of Sketch.This post is about a really overlooked aspect of sketching. Sketching is an amazing technique to deconstruct the way another person thinks about how something works, more commonly known as their mental model. As a product researcher, it's my job to understand how people think about things, and that's why I'm excited about the power of sketching as a means of deconstructing what's in someone's head.I delivered a talk on the power of sketch research at the Inside Intercom world tour earlier this year. The video and slides are embedded below. Scroll down to read more about how you can apply sketch research to your own product. It turns out that psychologists have been using sketching as a window into people's minds for years, from the House Tree Person test to evaluate intelligence and brain damage, to art therapy with young children who have experienced trauma. Sketches can be very simple and lo-fidelity but communicate a huge amount of important information about how someone feels and thinks about something. They can even communicate feelings and traumatic experiences that go beyond the language of the person drawing.If you want to design amazing products that feel intuitive to your users, you first have to understand how the users of your product think. So the fact that a sketch can take you right inside someone else's mind means it can be a really useful product research technique. When you understand how your users think and what their mental models are, then you're better placed to design something that feels really intuitive for them.Digital products that lend themselves particularly well to sketch research involve:Here are three case studies that illustrate in more detail how sketch research can help you understand your users better:Back in 2008, I was leading user research for Google mobile search. The iPhone hadn't been around for long (it launched in June 2007) and local search on mobile was a very nascent product. One of the common assumptions back then was that raw physical distance between the mobile search user and the local place they were searching for (e.g. dry cleaner) would be pivotal to how users selected which dry cleaner to go to from a list of local results.To understand how people thought about local search information, I first wanted to understand how people thought about their \"local\" area; the familiar places they went to most and the places they were most interested in seeking new information about. So I got people who owned iPhones to draw simple sketch maps of the places they went in a typical week and got them to talk me through their maps.Some interesting patterns started to emerge. One common trend was that many people in the study moved around their local environment in a kind of \"dog bone\" pattern. At one end of the dog bone there was home, at the other end was work, and the distance in between was their commute. The places they were interested in going to shop, eat, and run errands, were heavily focused within their dog bone zone.Unlike the assumptions of many of the team, the users spent very little time exploring other places. Like other mammals, they stuck to well trodden paths. They were not nearly as adventurous as was assumed. Rather than being interested in local information based on a circular zone around them, people were more interested in discovering new places, or retrieving information about known places, that were located within their local dog bone zone instead.Once you understand how people think about their local environment and relate to things in it, you can make your local products better for them. In the years that followed, for example, Google launched a feature that allows you to save Home and Work locations. This makes getting directions and commute information for your \"dog bone\" much faster. You can also search along the route that you've asked Google Mobile Maps directions for, so you can run errands more conveniently along your route.Paul Adams, our VP of Product, was also a user researcher at Google. Back in 2008 he wanted to understand people's mental model of their relationships with their friends, so he got them to sketch out a friend map. He said:\"I'd like you to draw a map of your friends. Draw yourself in the middle. Add friends one by one, with the closest friends nearest to you on the map. After that, you can add friends however you like.\"His research revealed that unlike the dominant Facebook model at the time, people didn't have one big, equal group of \"friends\". Instead they have many different circles of friends in real life and wanted their online social tools to support those different groups.This had huge implications for social products, sharing models, and privacy. Google designed G+ Circles based on this insight. Facebook redesigned their Groups product to support more categorization of friends. It's easy to look back at these old examples and think it must have been obvious, but these insights would have taken a lot longer to reach without the sketches.We strive for simplicity when we design every aspect of Intercom. But behind that simplicity is a lot of complexity. We used sketch research with our coworkers to understand how people at Intercom thought about how Intercom works as a system.We had noticed we weren't always using the same terminology to describe our product, and this was creating some confusion internally. We decided to conduct internal research to find out what our coworkers' mental models of Intercom were.We didn't have a common mental model of Intercom.So the Research team interviewed our coworkers and asked them that simple question: \"How do you describe how Intercom works?\". We got them to draw this on a sheet of paper and talk us through it. What we found was not only were we using different terminology, but we were thinking about the product in entirely different ways. We realized we didn't have a common mental model of Intercom, meaning we weren't explaining how it worked in the same way.The diversity of these drawings was a catalyst for us, prompting us to create a clear system model of how Intercom actually works. This will ensure that everyone at Intercom can get on the same page, and make sure when we onboard new employees they are thinking about Intercom as a system in the same way too.A really common question is \"How do I get someone to start sketching?\". Here's some advice about how to craft your questions:First, decide what you're trying to understand at a high level. Perhaps you want to understand:Next, you need to write a few clear, open-ended questions that will prompt your research participant to start sketching something relevant for you.Once someone has started sketching, you can encourage them to add more detail with follow-up questions. Here's a simple example:Goal: You want to understand how someone thinks about healthy and unhealthy foodIntro: I am interested in understanding how you think about different types of food. These days there are so many different messages in the media about which foods are healthy and unhealthy. I really want to understand what you think.Starter question: I'd like you to draw me a map of healthy and unhealthy food. Draw some examples of very healthy food on the far left and very unhealthy food on the far right.Follow-up questions:Clarifying questions:Remember to ask clarifying questions too, so you're really clear what someone's scribbles mean and can read any text they write when you look back on it later.It's important to talk to people who are relevant to product area you're researching. If you're researching how people think about buying a car, you should make sure you talk to people that have actually bought a car, and who did so recently enough that they can remember details of the process they went through.Make sure you interview people individually rather than in a group. You'll be able to give them more prompting and encouragement, and ask clarifying questions, which should lead to more valuable insights. Otherwise you might end up with a bunch of sketches that make no sense 🙂 .This is really easy to overlook. It's highly likely that the people you're interviewing will not be professional artists. They may be very self conscious about their awful drawing skills, so you'll have to spend time putting them at ease. Having a variety of materials for them to draw with helps; some people prefer pencils while other feel more confident with a big fat Sharpie. Have a few erasers handy for perfectionist participants. Make sure there's a big stack of paper available too so they don't feel pressure to get it right first time. If they want to start over, no worries! Let them.Finally, remember to encourage people! Be warm and friendly and reassure them that they're doing a great job. Reassure them that the goal is to help them show you how they think about X, not to create fine art.Sketching is a really powerful technique that can help you understand how your users think, enabling you to deconstruct their mental models. It's quick, cheap and fun. It's a particularly useful research technique if you want to understand how your users think about their relationships with other people, physical space, sequences of actions, or complex systems. Hopefully this post gives you the confidence to go try it out for yourself. Let us know how you get on!Thanks to Jillian Wells, one of our Senior Product Researchers, for contributing to this post."
        },
        {
            "title": "Unintuitive Lessons on Being a Designer",
            "date": "Tue Mar 15 2016 11:57:56 GMT-0400 (EDT)",
            "text": " I sometimes joke that everything I have ever learned about design, I learned from my first job. Nowadays, this first job has extended to nearly ten years, its soul consistent even as its shape unfurls in depths and colors I could never have imagined in the beginning.Though I've always been an obsessive journaler, this year, I am particularly reflective. What a decade. What a place to have learned the things I have learned. I have had the privilege of working with the best of the best. I have had them show me, teach me, change me.And change - there is nothing that feels so human as realizing that who we are today is not who we were yesterday, and will not be who we are tomorrow. It is this process of looking back that I savor like a sweet-toother with a prize-winning pastry. I can still crisply recall the ways I used to think, the views I used to hold, and see how they have morphed through the years, sometimes slowly, sometimes as swift and suddenly as a storm.This list is certain to be outdated - and perhaps contradicted - in another ten years. If you are on the same journey, I hope these lessons will help you.Of everything I believe, this goes deepest to my core: we can all be better. And so we should be.When we see a perfect end result, we usually never see what it takes to get there. So I used to assume that great work came in flashes of brilliance. I'd see a stunning end design and think to myself, wow, this designer is a genius. I'd imagine her sitting down at her desk, opening up Photoshop, and quietly translating the marvelous vision in her head onto the screen while sipping chamomile tea. I'd assume she was in possession of some mystical talent that I simply did not have.In the years since, I've gotten a peek inside the \"genius\" of many top designers, and I know this now: the path to great work is one of brute force.That's it. Simple. This was never made more apparent to me than when a designer with an immaculate handle of the craft showed me what it took to get to a stunning final design of a complex layout that I'd considered leagues above my own current skill level: about a hundred variations of every possible combination of composition, type, line height, color, and more.Brute force isn't magic. It might even feel uncreative or boring. It's like learning that what it takes to get a fit and toned body isn't some miracle diet but just a lot of hours of sweating at a gym. Sure, as your skills develop, your brute forcing gets faster. You start to hone your instincts for which paths are less likely to succeed. You begin to make decisions more automatically. But to get to that level, every great designer has walked the path of brute force. Trying to take too many shortcuts too quickly is the reason why most designers end up slowing in their growth.How good your work product is will always be limited by how good your eye is, and by that I mean your critical discernment of the strengths and weaknesses of a design. It is always better to learn how to become more critical in every dimension: product, interaction, craft, communication, etc. Even if for practical reasons you end up making tradeoffs on how much time and focus goes into each dimension, you cannot make those tradeoffs well without a clear understanding of what excellence looks like.How can you develop your eye? Three tips:In practice, the third bullet is hard to do - it's like watching a recording of yourself giving a speech- because it reveals in obvious and cringe-worthy ways all your gaps. It takes a certain amount of courage to take your work to a person you know will handily pick it apart.I've sometimes rationalized this need away by saying to myself, Getting this design to be slightly better executed isn't really a priority- people get the flow, and that's what really matters. This either-or trap is a dangerous one to fall into. It makes you believe you need to make a tradeoff between good interactions or a good product strategy or good visuals, and so long as you've made sure the most important parts are solid, you've done a good job.If I'm to be honest, my reluctance to seek more critical feedback came from a place of pride rather than an actual desire to improve myself. I was seeking validation rather than learning. In doing so, I was only hurting myself in the long run.(Note: please don't take this point to mean that you need to be that smart-ass who always has to point out every flaw in every design. There is a difference between trying to be helpful and trying to show off your knowledge, and we humans have a finely-tuned radar for these things.)Some of my greatest frustrations in design come from with my interactions with other people. Sometimes, I can't get an engineer or PM to agree with me that a particular feature is important. Sometimes, I have a completely different vision of how something should work than another designer. These disagreements can feel like battling a room of mosquitos- annoying, draining, sometimes pointless. How nice it would be, I find myself thinking sometimes, to go it alone. To be my own creative master and do the things I think are right.But then, reality sets in. What can I expect do on my own? Make a webpage. Make a simple app (although that would probably take me a super long time since my coding skills are rusty.) Make some cool conceptual demos. Start my own company. All of those options (except potentially the last one) would be fun, but they aren't going to be impactful, which is something I have always personally valued. And if I did decide to start a company and by some lucky stars it somehow began to take off, I'd certainly end up having to work with others. Of course, I'd be able to call more of the shots at my own company, but I also know enough about leadership to understand that it is not about getting your way. It is about getting a group of people to share in your vision so that the whole is greater than the sum of its parts.The graph of impact tends to correlate with how many people you need to work effectively with. Once I realized this, I started to see my interactions with other people differently. It was no longer about winning battles and proving that I was right, but about developing stronger collaborative relationships. It was about getting to the point where the hum of working together became something I looked forward to. It was about the work that we did together being better than anything any of us could have done on our own, and recognizing that the debates and disagreements we had were a necessary part of getting there.I used to think passing judgement on design was clear and objective. That, like a gymnastics competition, you could raise a scorecard, rank the contestants, and hand out some medals. This was the impression I got from hearing groups of designers debate the merits of Mac versus PC or try and rank which to-do list app was the best. This is how people make it sound when they discuss universal principles like make it simple or interactions should be delightful.When I used to look at a complex interface I didn't understand, like an app that allowed a Fortune 500 company to manage its inventory of thousands of ads, I'd automatically apply the \"universal\" principles I'd learned from designing consumer products. I'd wonder why the interface looked so complicated, and why there was so much density. I'd question whether we really needed all the bells-and-whistles features exposed directly versus being hidden behind an affordance to hide some of the complexity.Do you see what the problem was? I didn't know anything about what a Fortune 500 advertiser needs, so how can I try and critique this interface? Yes, there was a lot of powerful functionality exposed, but what I later learned was that that is what those companies need to be efficient. There are dozens of people at these companies who would spend all day running through highly optimized workflows using this interface, and for them speed and efficiency were paramount. Density was preferred so they don't spend more time scrolling. If you went with \"smart defaults\" and tried to hide complexity behind extra clicks, you'd be making those people spend an extra 30 seconds on each task, which at the end of the day adds up to a lot of wasted time.When we pass judgment on a design, we are usually inferring the problem we think it is trying to solve. A lot of times this is obvious. But many times it isn't. Not every app values reach. Not every service is trying to be profitable. It's fine for something to be bespoke and appeal to a tiny audience if that is what the creator intended. Just make sure you know the intention before levying your criticism.The idea that design is \"problem solving\" likely resonates with many designers. Certainly it is a much broader definition than \"designers make things look pretty\" which we can all appreciate is no longer the conventional wisdom. Until very recently, I thought of the role of a design team as taking well-defined people-centric problems and coming back with creative solutions. In my head, the main challenge to overcome was making sure everyone understood what a broad, people-centric problem was (i.e., the ask shouldn't be Design a dashboard that shows you top nearby restaurants but Help people easily find great places to eat.)The problem with that line of thinking is that it still relegates design to a service. This is fine if you are an agency and that is precisely the business you are in, but what I often hear from in-house designers (and researchers, content strategists, engineers, PMs, etc.) is I don't want my role to be treated as a service. I hear instead, I want to have a seat at the table or I want to be involved in the strategy.The thing is, you will always be treated as a service if you assume your role is to wait around for others to come to you with some specific problem to solve. The path to getting out of being a service is to have an opinion about which problems are worth solving and convincing other people of that. I remember a specific conversation with my boss where I was voicing a similar complaint to him around not being included in some strategy meeting and he replied, \"Okay, let's say you were there and you could have us do anything you wanted. What would you do?\" to which I looked at him and blinked, completely at a loss because I hadn't spent any time thinking about it.To be involved in strategy is to be involved in the why - the identification of real problems, the prioritization of which of those problems are most pressing to solve right now. It involves understanding what makes the business tick and what specific advantages the company or team has. It involves having a handle on what the technical and people constraints are.This is hard to do, and frankly not a core competency of the design discipline as it stands today. Even the most seasoned designers I know struggle with this. But this is what it takes to not be a service organization.I used to think good design was only ever about the design, and that if I could deliver a great idea and execution, I'd be able to give myself a hearty pat on the back for a job well done.Unfortunately, that is like rewarding a lemonade stand for successfully producing a lot of juice regardless of how much lemonade it actually sells. The true outcome of a designer's work is whether it had the intended effect in the real world.The best designers I know excel at communication. This is because they apply the same theories of designing products - imagining how the person on the other side will think and feel as they encounter the design work - to telling the story of the design. They think deeply about what hooks would best get and keep someone's undivided interest. They consider what is critical to convey up front, and what details can be saved for later. They use easy-to-understand language, visuals, storyboards or animations to convey what the outcome of the idea will be.Being a designer is like having a superpower that allows you to show other people the future. You can help make a bunch of abstract concepts tangible through your work. You can help other people visualize what a better version of the world might look and feel like. This is an incredible thing to be able to do. But wielding the power effectively means the work must be paired with a strong narrative. And the first step is recognizing that clear, succinct and compelling communication is a key skill to master as a designer.Too often I see designers discounting the importance of this, leading to explanations that are hard to follow, long-winded, or incorporating too much design-speak. If you think you have a brilliant idea but other people just don't seem to get it, you have two options. You can either chalk it up to the environment - it's not design-friendly, your colleagues aren't thinking as big or as creatively, they're not giving you the time of day, etc - or you can look inward. If you still think your idea is brilliant, then maybe you aren't effectively conveying what's in your head to others. What problem does your idea solve? Why is that an important problem to solve? Why is your idea the best way to solve that problem?We don't blame the user when they don't end up taking to the product we've designed. So why should it be any different when it comes to getting our teammates excited about our designs?If you feel like an imposter, you are not alone. I guarantee this. In fact, I am certain that everyone who works in a creative profession - no matter how outwardly successful they appear to be - feels this way.How do I know this? Well for one thing, there probably didn't exist a week when I didn't feel like an imposter in the first four to five years of my career. It was the dark shroud through which I saw everything. A criticism of my work was painful little jab at my capabilities. A misinterpretation of an e-mail I wrote would wound me for days. I constantly questioned whether I fit in, whether I'd be happier or better set up for success elsewhere. Even when I started this blog, I wondered if I knew enough to write anything worthwhile.But it turns out that it isn't just me. Everyone I've spoken to has felt this way, including industry titans, world-famous luminaries, and people who you'd think are ridiculous to feel this way because they have proven themselves time and time again. Everyone wonders if they can actually succeed, especially when they were just starting out. Everyone struggles. They don't always admit it publicly, but in confidence, I've found myself floored by confessions from people I have long admired. This, in turn, makes it easier for me to accept my own self-doubts.To question oneself is part of the human condition. And yet, we've managed to hide this fact behind curated posts and photos, behind reassuring smiles and articles purporting success. Ours is a culture that values effortless perfection. In fact, we even unconsciously prefer people who seem innately talented over those who work hard.In design especially, it is hard to separate what people say about your work with what they think of you as a designer. Over the years I've found it helps to talk about and acknowledge this. The revelation itself helps to cast off the burden of the pretense. The second thing that helps is recognizing that every designer is different, and that the only competition worth engaging in between yourself of yore and yourself today. We should be inspired by and learn from those whose skills are stronger than ours in a particular dimension, but this isn't a rat race (see #3 above). If I am better today than I was last week at X, even if I'm not as good as Y at X, then that is progress, and that is worth celebrating.A good design should be obviously good to the people it is intended for. I've already written about this one at length here, so I'll keep this brief.I used to think that evaluating design work should be left to designers. After all, we are the experts, and so when non-designers would interject with their opinion, I'd listen half-heartedly. They don't have all the context, I'd think. They don't know the history of this discussion.Unfortunately, what I failed to take into account was that the people whose evaluation matters the most are the people you are designing for.And those folks are likely not designers. They're probably not even all technically-savvy.Certainly, context and history help make for more productive product discussions. But at the end of the day, evaluating the success of a design isn't complicated. If you could wave a magic wand and make the perfect solution in your head a reality, I'd bet that there would be very little discussion needed. We'd read the user's mind, of course! We'd show them the exact results that they're looking for!We, the makers, are the ones who complicate the discussion because the constraints we face prevent us from getting to perfect. There is no mind-reading API currently available, alas. So in light of these realities, we are often in the weeds discussing and debating the tradeoffs and which path is the most good/least bad.Picking the best path is the messy part. But it is quite straightforward to pass judgement on whether a particular path feels objectively good or bad.At the end of the day, the people whom we are designing for don't have any of that context, history, or understanding of the constraints we face. And yet, they will still pass judgement.The only thing that matters is whether your design works for them in solving the problem you intended to solve.It is really quite simple. In the same vein, check out Unintuitive Things I've Learned about Management. 1. What looks like genius is actually the result of brute force.2. Developing your eye is the single most important skill to hone.3. To do things of great impact, you cannot be a lone wolf.4. You cannot evaluate a design without knowing its intention5. If you don't want design to be treated as a service, you need to have an opinion about what problems are worth solving and why.6. Investing in your communication skills gives you a 2x multiplier on your effectiveness.7. Everyone feels like an imposter sometimes.8. Good design is obvious. Don't assume your eye is \"good enough.\"Constantly be asking yourself at every stage What would make this design better? even if you don't end up implementing the suggestions.Always seek out the most critical person you know in a particular dimension (craft, product, etc) to get their feedback on your work."
        },
        {
            "title": "WTF is Experience Design?",
            "date": "Wed Aug 17 2016 11:38:25 GMT-0400 (EDT)",
            "text": " The first question out of everyone's mouth when we meet:Q: What do you do for work?A: I'm an Experience Designer.Q: WTF is an Experience Designer?!A: Ummm, let me try to explain.Our job as Experience Designers is to make technology easy to use.Technology is embedded in our lives. For many people, they're literally connected from the time they wake up til the time they go to bed.And it's easy to understand why. Technology enables people to do things they may never be able to do otherwise.Unfortunately using technology can be difficult and frustrating, especially if it's a new technology.Our ultimate goal is to make using technology not only usable but also fun and enjoyable.We do this by understanding how humans interact with technology so we can empathize with their pains and figure out how we can make the experience more useful, usable and compelling.To generate a better understanding we might keep it as simple as interviews, personas and user journeys or as advanced as full-blown prototypes and behavioral observations.Often our methods include a mix of research techniques because humans usually aren't the best at saying what they really mean, so observing their behavior is incredibly valuable.Experience Designers typically have a generalist skill set. We're probably versed in most creative fields but are best at one thing in particular. If you put a help ad out there to hire an Experience Designer expect that they might have any combo of these skills:Some of us design, as the name implies. But design means a lot of things, as you'll see later in the article.Some of us code, but we're probably not the ones you'll see building the entire experience.Some of us just do research and hand it off to be created.And then occasionally you'll find an Experience Designer that does a little bit of everything and floats wherever needed.That's a loaded question. We do a lot, so there are a lot of things we might produce in order to get our job done. But the core of what we do is in discovering how people use and interact with technology. Here is a very general outline of what an experience designer's process might look like:**It should be noted that this example process is related to how someone might design a digital interface experience, but experience designers make more than just digital interfaces, as you'll see later on in the Examples section.**User personas are the personification of our research.User personas allow us to get into the mind of the people using our products so that we can employ empathy while creating experiences.In client negotiations user personas help us keep analytics driven clients focused on the humans driving their revenue.Nothing sells better than something built with its users in mind.User journeys visually demonstrate the experience our users are having with our product.User journeys allow us to understand where our users are coming from, how they're using our product, where the pain points are, and where we can improve.In client negotiations user journeys help us remove ourselves from the experience and, instead, experience it from our user's perspective.When we understand where the experience breaks and how that makes people feel it's much easier to fix our product in a meaningful way.After doing research and creating a plan to solve our user's problems, we can then begin to design. The best Experience Designers start by sketching or whiteboarding ideas first.While doing something at such a low fidelity often sounds counter intuitive, sketching and whiteboarding often leads to the most creative solutions because it makes us focus on solving the problem instead of focusing on beautiful aesthetic.By keeping it low fidelity we also exponentially increase the speed of our iterations and keep ourselves from getting too attached to something pretty.Wireframes are the next step in bringing our designs to life. Wireframes are the product blueprint. They're not pretty but they're not supposed to be.Wireframes allow teams to get a better understanding of the experience at a high level. Done well they allow development teams to build the foundation of the product so that when it comes time to bring it to life, all they need to do is fill in content.For clients, wireframes are a tangible representation of what's in our creative minds. Sure, they're not pretty to look at, but by seeing the structure clients feel more comfortable that we're making strides toward our end goal.Unfortunately, wireframes often leave clients and most everyone else feeling underwhelmed because of their fidelity. Don't say we didn't warn you!High Fidelity mock-ups typically follow wireframes. They are everything you think of when you hear the term design.Depending on the size of the team, sometimes Experience Designers will do these but sometimes they're left for Visual Design to work on.High Fidelity mock-ups are the deliverables that get people excited. They're filled with color, beautiful stock photography and content. They're provocative. They get the people goin!Prototypes are almost-real versions of our product. They're not the full product and they never will be, but to anyone that uses them they look and feel as if they're real.Here's an example. If you're on desktop, go ahead.. try this one out right here on Medium. If you're on Mobile or in the app, it'll be a better experience if you check it out here.Prototypes allow us to test our products on users to see where we've succeeded and where we've failed. They also help us see what we might have forgotten in the design process. It's usually easier to catch errors when you are using the product than it is while you're designing from 10,000 feet.To clients, and most people, prototypes are magic. They're basically real but not quite. Most clients are ecstatic when they see a prototype because they have something to show off to their team, and that's exciting!User Testing is where we see if everything we've been working on holds up to its merit.User testing allows us to watch people interact with our product before it goes public, which gives us meaningful and actionable feedback to improve our product.For clients, this allows us to validate our research or fail and iterate quickly before the rest of the world sees it. This saves lots of time and money for everyone in the long run.After testing we take our learnings, throw away everything we don't need, and get back to work making improvements based on the feedback we received.There are all kinds of cool experiences out there. And, despite what the term is usually associated with or what's been demoed in this article, Experience Design is not limited to digital interfaces. Technology can mean many different things. Here are some of my favorite experiences.Biking is on the rise. But finding safe, direct routes isn't always easy - and navigating with your smartphone while riding isn't smart. It's dangerous, and you miss out on everything great about the ride.Hammerhead is a whole new way to get bikers where they're going, safely and simply. Inspired by the system pilots use to land airplanes, Hammerhead guides riders with a series of lights - indicating turns, and the distance until the next one.Hammerhead's routes take hills, traffic and weather into account, helping compile the world's most comprehensive bike route database - and keeping the road safer for everyone.Learn more about HammerheadTo help Equinox re-launch their indoor cycling offering, we designed two playful, motivational experiences that take data from studio bicycles and give riders visualizations of their riding performance while engaging them with immersive games.The experiences offer individual, team vs. team and collaborative elements, all of which build on the energy of the class, pushing individual riders towards their goals while making them feel like part of a cycling community.With each class, members are motivated to ride their best as they're presented with real-time, actionable, data visualizations of their ride, keeping them inspired and accountable for their performance.Learn More about The Pursuit by EquinoxMagicBands are secure all-in-one devices that allow you to effortlessly access the plans and vacation choices that you've made at Disney Parks.MagicBands are colorful, waterproof wristbands - resembling a watch or bracelet - that you can quickly and easily touch to a sensor called a touch point. They allow visitors to unlock the door of their Disney Resort hotel room, enter theme and water parks, check in at FastPass+ entrances, connect Disney PhotoPass images to their account, charge food and merchandise purchases to their account, and more.Travel lighter and worry free with Disney Magic Band.Find out more about Disney's Magic BandOpening and managing an investment account can be intimidating for a lot of people, but what if a simple smartphone app could take care of it all for you?Acorns is the world's premier Micro Investing service.Acorns' app was designed to help people, especially first-time investors, get started in investing with small automated investments into a portfolio of exchange-traded funds, or ETFs, that the company selects and balances. Users link their bank accounts to the app, which then automatically rounds up the cost of all transactions to the nearest dollar, withdraws that spare change and invests it.Learn more about AcornsWell that's it for now. Super anti-climactic, I know. But I hope you have a better idea of what Experience Design is now.If you have questions about what I wrote or want to know more, please feel free to reach out! I'd love to help as much as I can! If you liked this article, please ❤️ it so others stumble upon it as well! You might also like some of my other articles: I am currently an Experience Designer for R/GA at Google in San Francisco, CA and a guest blogger for InVision.If you want more content like this, follow me here on Medium, or you can connect with me on Twitter or LinkedIn too. DesignCodeResearchWhatever needs to be doneUser PersonasUser JourneysSketching/WhiteboardingWireframesHigh Fidelity Mock-upsPrototypesUser TestingHammerheadThe Pursuit by EquinoxDisney Magic BandsAcorns In one sentenceOkay, tell me moreSo what skills do you have?Alright let's get serious. What's your process like?Do you have Examples?WTF I Want More "
        },
        {
            "title": "Why I love ugly, messy interfaces — and you probably do too",
            "date": "Wed Apr 06 2016 09:39:11 GMT-0400 (EDT)",
            "text": " Beautiful. Fresh. Clean. Simple. Minimal. These words have been dominating design discourse for a while now. In case you've managed to miss them, check out this review of portfolio websites over on Creativebloq. The word beautiful is used 6 times, and simple 11 times. In one article.Designers use these words to describe their values, goals, and results. They plaster their portfolios and resumés with them. Non-designers use them too. They're everywhere.If you've hitched a ride on this wagon, you might have a website that looks something like this:Lovely designs like this have become so commonplace that beautiful and clean are almost baseline constraints for new projects. It's like every designer had the same Pinterest coffeeshop fever dream, and decided the whole world had to become lifestyle-chic.And that makes sense, really! Everyone likes easily digestible things that look bright and stylish. Nobody wants ugly, messy stuff.Or do they?So…wait. If beautiful, fresh, clean, and simple are so important, why hasn't someone upended all of these products with something nicer? It's not for a lack of trying. There are countless simpler, better-looking Craigslist and Photoshop competitors, for example.The answer is that these products do an incredible job of solving their users' problems, and their complex interfaces are a key reason for their success. Let's say your goal is to make a global peer-to-peer commerce network. That's a big, complicated project to tackle.You could attempt to reduce your solution down to a minimal version, cutting out features and reducing density in the name of beauty and simplicity. Here's a Craigslist redesign concept like that. (Designers sure hate Craigslist, don't they? Has any other site had more unsolicited redesigns?)Or, you might decide that you really can't cut features, because it's more important to nail every use case you care about. (Remember, you have to support a huge number of scenarios to reach table stakes for this project.) Now beauty and simplicity are instantly a much lower priority. Making something useful comes first.For another example, think of Photoshop. How many graphic designers who idolize Swiss Style also use Photoshop every day? Probably most of them. Yet Photoshop's UI is the antithesis of minimal - it has more nasty junk drawers than your parents' unkempt basement. It doesn't matter at all, because people don't come to Photoshop for inspirational UI. They use it to get the job done.In other words, sometimes this isn't so great:When this is what you really need: Now, obviously I'm not suggesting you should go clutter up your design work, or make it look crappy on purpose. I'm also not suggesting that the examples above couldn't be improved.My point is: there is no single right way to do things. There's no reason to assume that having a lot of links or text on a page, or a dense UI, or a sparse aesthetic is fundamentally bad - those might be fine choices for the problem at hand. Especially if it's a big, hairy problem.Products that solve big, hairy problems are life savers. I love using these products because they work so damn well. Sure they're kind of a sprawling mess. That's exactly why they work!We needn't all pray at the beautiful minimalist design altar. Design doesn't have to be precious. Toss out your assumptions and build what works best. We made Basecamp to be one of those life saving, big hairy problem solvers. Check it out now at basecamp.com.This post was adapted from a talk I gave at University of Illinois Webcon. Here's some ugly design that's unbeatable.Here's some cluttered design that's quite popular.Here's some complex design that 1.5 billion people use every month. "
        },
        {
            "title": "Why you don’t need design like Apple",
            "date": "Wed May 25 2016 08:57:36 GMT-0400 (EDT)",
            "text": " Apple proved that beauty not only works. It sells.By marrying design and technology, Apple evolved from a niche brand for hobbyists into one of most valuable companies ever.After their success, many companies followed suit and leveled up on design.If you can't beat ‘em…Many of the products we spend our time with - our phones, laptops, and the software that comes with them - were originally designed, or at least inspired by Apple. And with Apple creating and managing the App Store, a huge chunk of the software industry is now required to have ‘Apple-approved' design to survive.For design and beauty, our expectations as consumers are higher than they've ever been. And the future of where products will compete will hinge more and more on the emotions driven from thoughtful, pleasurable design.As a designer, I appreciate this attention to design.I look at my laptop screen and the icons look like candy.I zip fluidly through my apps, getting hits of pleasure from well-designed transitions along the way. The visual beauty of technology is so much different from how it was even just 10 years ago.A computer used to feel like you were navigating a maze in a cornfield. Uncertainty around every corner until you finally found the path to get something done.Yet, for all the good this focus on design has done for us, this same focus on visual polish has a cost.In our worship of the design and marketing of companies like Apple, we creators lose sight of an even more powerful way to present our ideas to the world.Because we've seen the results of visual beauty in product design, we expect putting this level of focus on visual beauty in our brand's message will have the same effect.I've seen companies spend tens to hundreds of thousands of dollars perfecting a website, email, or ad's visual design while spending the last few hours on writing the words that will make up that design.Our intense focus on visual design can blind us from focusing on the most important part of the message: The story.We've had a taste of this ourselves.A year ago, we sent out two versions of this email campaign.One email closely followed the principles of how a well-designed email is supposed to look:The other version took a different direction. We wrote it as if we were telling a story to a friend. It broke every rule:Here were the results:Even though our ‘less-beautiful' email broke many of the rules, the longer, story version had almost three times the click-through rate compared to the shorter version.Though this example is limited in that it was constrained to people in our community who might prefer a more story-oriented approach (since this is our usual style), it supported our hunch that beauty isn't always best.And that being more authentic (i.e. telling our story just like we'd tell it to a friend) has a bigger impact than we might expect.There are examples of this same preference for a well-told story in all creative fields.In 1995, Pixar released Toy Story, the first computer animated feature film. And while Toy Story went on to smash box office records, Pixar had a rocky start.Star Wars Director, George Lucas, sold his shares in Pixar before Toy Story was made, and Pixar almost went bankrupt (if, ironically, it weren't for Apple founder Steve Jobs stepping in to invest).The film industry thought a mainstream audience wouldn't care enough to see an animated feature film.What they neglected to see was the power of story.Even though animation was at its core, the Pixar team knew their success would ultimately fall on one simple thing: Their ability to tell a good story.Ed Catmull, one of the co-founders of Pixar, wrote in his bestselling book Creativity, Inc. about his company's creative process:Pixar has won the Academy Award for Best Animated Picture for 8 out of their 16 films. And every single Pixar film has landed on the respective year's top ten list of most profitable films.No other studio comes close to this hit rate.Telling a good story, whether that's through email, film, or any medium, creates a connection. And it's this connection that leads to attention, which leads to trust, which leads to sales.As Pixar realized early on, you can get away with lesser visual effects if your story is good. But the reverse is not always true.Case in point, if we look at the ten most expensive movies ever made, the average production cost was $274 million per film.And the average ranking across these films according to Rotten Tomatoes? 59%(The highest rated film was Tangled at 90% which was produced by Disney/Pixar).Meanwhile, the average Pixar film cost an average of $145 million and averages an 89% review from critics and audiences alike.What's even more telling is that if we take a sampling of the critic consensus from the poorly rated movies in the top ten, you'll notice that critics rarely say the quality of the animation or special effects as the reason why they gave a bad rating.They cite issues with the story:While the other producers may have had the budgets to make something as visually stunning as Pixar, where they didn't level up was in their story.We can make something look pretty. But if pretty doesn't tell a good story it won't matter.Just like you can't rely on beauty alone in the design of your product, you can't only focus on beauty to tell your story.A well-designed message is one that tells a good story first.As we saw in our email campaign example, a story is powerful enough to overcome an email design that breaks all the rules.You might not have Apple's marketing budget ($1.2 billion this year) or design chops. But that's okay. Sometimes Apple-level beauty isn't the best way to present your story. And sometimes it might even make things worse.In a recent article published by BBC, researchers from the University of North Carolina at Charlotte reviewed findings on if there was a drawback to being ‘too beautiful'.The researchers uncovered several studies, including one in 1975 that found people tend to move away from a beautiful woman on a pathway. A similar behavior was found from a review of the profile photos from the dating website OKCupid. Men with ‘average' looking profile photos got more messages than men with the ‘most attractive' profile photos.The researchers suggested this behavior could be because attractiveness conveys power. As a result, people feel they need to respect an attractive person more and keep their distance.These examples illustrate that beauty can backfire. If something is too beautiful it can be seen as less approachable, further distancing you from the people you are trying to reach.Similarly, clothing brands like American Eagle recently saw an increase in sales after they stopped photoshopping models.Too much beauty can be seen as a sales tactic. Though we may be attracted to something that looks good, we also have a strong unconscious aversion to being sold to.And this aversion is getting stronger.First, because of the internet and the power of online networks like Facebook, we have more access to information, which means we see more instances of bad things.For instance, of the top movie documentaries all-time listed on Rotten Tomatoes, 4 of the top 10 are stories of injustice or corruption and have been made since 2005.Every phone has become a media device. Stories spread fast. And while there's a lot of good happening in the world, stories of corruption and distrust tend to surface to the top because they grab our attention.Trust is at an all-time low. As this 2013 USA Today poll suggests, two thirds of Americans polled said they were suspicious of others. This is double the rate of distrust since the survey was first done in 1972.We've become hypersensitive to bullshit. We have an increasing lack of trust for everything, including beauty.Beauty can be perceived as a layer of bullshit, making people feel like they are being sold to.As one of the lead researchers from the study said: \"If you are obsessing about attractiveness, it may alter your experience and interactions.\"This is exactly it.If we focus too much on the visual attraction of our message, the experience people have with our stories will likely suffer.Adding to our natural aversion to being sold to, we've become overloaded with things vying for our attention.In the last decade, as the world moved mostly online, messages started to attack us everywhere. And these messages are smart. With billboards we could just look away. With TV/radio we could shut it off. But today's messages are connected to all the tools we use to communicate. And brought to us by people we trust.Facebook. Twitter. Email. Phones. Laptops. Tablets. Notifications come flying at us from all angles. Because today's messages come in bits and pings, they are cheap, effective, and easy to spread.With so much access to information, we only have two options:Either we try to consume everything (which isn't possible) or we filter (i.e. we stop paying attention to a lot of things).Since we can't consume everything, we've become experts at filtering. Filtering out crap. Filtering anything that looks remotely untrustworthy or has the tiniest hint of salesmanship.To quote multi-platinum musician Rihanna:Our brains have actually changed to adapt to the current information overload.A recent study by Microsoft on Canadians found that our attention spans have dropped by a quarter, from 12 seconds to 8 seconds, since 2000; which is less than the attention span of a goldfish.There's a general fatigue that's happening. We've been forced into becoming B.S. detection experts.While ads and marketing may have gotten prettier and better with more data, we've gotten better at filtering. Resisting.It's an arms race. And it might seem like we're doomed to lose as creators. That no will ever care what we have to say.But we're not. There's an easy solution.When you see an email from a friend saying, \"hey lets catchup for coffee monday. you in?\" it cuts through everything.Even though it breaks every standard of writing: no capitalization, missing punctuation. It grabs your attention. You answer it first. Why?First, this message comes from a person you trust so that plays a huge factor. But, adding to the trust you have in the messenger, is a message you know came from a human. Not a machine.There's no fancy headlines, graphics, or words so you feel safe. You're not being gamed. You can let your guard down for a second.There's plenty of results to back up that you don't need visual beauty to connect with people.Multi-platinum musician Beyonce's most watched music video on her YouTube channel is her song, 7/11. Even though many of Beyonce's music videos have a high production quality, 7/11 is shot with low-quality video. Yet, it outperformed every other Beyonce video.Kelly Starrett is a physiotherapist and trainer who has some of the most consistently viewed fitness videos on YouTube. He recorded most videos with a phone in his garage with no professional gear.Some of Kelly's videos even show his daughter accidentally walking in and ‘mistakes' in editing.Kelly could have edited these things out but because they were kept in, I feel an even deeper connection with him. These ‘mistakes' make me feel like Kelly is a human and he's not trying to sell me. Like he's one of my friends in his garage figuring something out and he's sending over a video for me to check it out.He's a person who has kids, a dog, a somewhat messy garage. And he shoots low-resolution, unedited videos just like me. I can relate to that. His videos aren't the highest quality or the nicest shot. But what they do have is some of the best fitness coaching I've ever seen. They have substance. So I trust Kelly. When I'm looking for fitness tips, I search Kelly first. When Kelly wrote a book, I bought it.Maybe if Beyonce and Kelly used professional equipment for these videos, viewership would have increased, but the way they shot these videos in raw form is partly what makes them attractive. These videos make Beyonce and Kelly seem approachable and relatable.Comedian Louis C.K. does a similar thing with the emails he writes.Louis sends email newsletters that feel like he's just writing to you. Some have spelling mistakes or improper punctuation but that's part of them. I don't care about those grammar mistakes. In fact, I like them. It makes me feel like Louis is simply talking to me like he would talk to a friend.Here's an example:Time and again we see the substance of the story is more important than the look of it.We don't need beauty to connect with people. When we sense someone is being ‘real' with us, our brain's natural urge to resist influence is calmed.What your message needs is authenticity. Your unique way of sharing your message with all its blemishes and imperfect sentences. Authenticity doesn't mean beauty.Authenticity means substance. It means cutting the bullshit.While visual beauty counts for something, it isn't the only thing that connects people with your message.If you want anyone to trust you. To pay attention to you. To maybe one day buy from you. Your best option is to remove all the barriers in your message. To sound more like how you sound when you talk to a friend. To sound like just another human. Because ‘just another human' is much more relatable than a corporation.Authenticity is powerful. It's easy. And we all already know how to do it.We just need a reminder sometimes that it's ok to be authentic. Even when it comes to business. Actually, especially when it comes to business.When you think of our company, picture it as a person. A brand should sound like a person, rather than a company. Whether it's a website, an email, a tweet, or an ad, everything should feel like it's coming from a person. Because it is.You might think you need to use industry words because you think you need to sound like an ‘industry leader', or you feel like you need to watch what you say so you don't offend a partner, investor, or customer.Or in certain cases, there might be legal or company policy reasons outside your control that require you to hold back from saying what you really want to say. But the closer you can get to what you really want to say, the better your message will connect.That said, I know how hard it is to wipe the business off a message when we've been trained to think we need to sound a certain way when we operate professionally. One thing I do is start rough drafts for any of our company announcements as Facebook posts.There's something about the context of writing the message directly in Facebook that shifts my brain and makes me write like I'm writing to a friend.Sometimes we can overdo a message because the tool we use to write these messages that makes us feel like the stakes are higher. Writing in professional tools subtly tells your brain, \"Hey, this is going to be important cause you're writing it in your WordPress backend so be careful.\" This kills your personality.Try lowering the stakes. Write your important business messages using a tool where you communicate with friends and family. I bet your personality will come spilling out.The way you explain your company to a friend is how you should explain it to the world. If you're being overly formal just because it worked for someone else, you will sound like everyone else, and you will be tuned out.We're all humans. Even under a suit. Making something pretty is fine, just make sure this beauty is paired with substance because beauty alone won't be enough.And if you have to choose between making something prettier or making the message more authentic, choose the message.Without a story you have nothing. Without a story, people will glaze over you even if you spent hundreds of thousands or millions of dollars making your story look pretty.Showing your imperfection is better than faking perfection.More so than ever before, direct communication is expected. Instagram, Twitter, and newer communication platforms like Snapchat are even more focused on raw, direct connection.For all the bad the connected world shows us, this same connection is a unique opportunity to share your beliefs and connect with people on a massive scale. Never has it been easier to reach so many of the right people with your story.You might think you need beauty to create impact but you don't. Authenticity is more powerful. Authenticity is approachable. It creates connection.Being authentic is the most beautiful thing you can do. Check out my company Crew, where you can work with the best designers and developers. Over 10 million people have used products made on Crew. And over 3 million people have read our blog. Join them here. Choosing substance over styleA lesson from Pixar: It's not about animation, it's about storyWhy beauty doesn't always work (especially today)Increase in information; Decrease in attentionThe solution is easy and you already know how to do it Not too many wordsA big, attractive imageA clear call-to-action The email was longThere were 11 links before you got to the main call-to-actionThe call-to-action was buried at the end"
        },
        {
            "title": "Your Best Work Will Be Invisible",
            "date": "Mon Nov 14 2016 16:52:11 GMT-0500 (EST)",
            "text": " As a designer, your best work is going to always be invisible. It'll be invisible because the best part of what you do will be everything that takes place behind the scenes, where nobody will ever see it.Knowing this is important, as it can help to unlock your full potential and help you focus on what matters most when it comes to product design.When first moving into a product design role, the novice tends to conflate the work of product design with that of a more traditional design role. They want to be recognized for what's on the face of what they build, so they focus on making it attractive or flashy. Or they want to make something beautiful without dedicating much time to building empathy, or deeply understanding the problems, or developing or identifying a clear design system.Of course beautiful designs, and well-crafted experiences, matter quite a lot in product design. But the actual pixels behind a design are only as good as the reasoning behind them.Consider the fact that almost anyone today can download tools to design and create products. All it takes is a laptop and an internet connection. And once you have the tools, you can use online tutorials to recreate what you find inspirational out in the wild.Having access to complex tools is no longer a separator between the amateurs and the pros. A formal education is no longer a requirement to do quality design work. What matters now isn't your ability to even use design tools well, or to know the lingo of the trade, or even to have a flashy portfolio. The most important thing is everything that takes place behind the scenes.Your approach to research and having access to resources for conducting it. Iteration, testing, and gaining perspective. The exploration of edge cases, and the decision making around each of them. The ability to deeply understand what problems are being solved and the trade-offs that must be made to build a usable, and beautifully designed, end result.In other words: designing with intentionality.Nobody will ever see the research or the deliberate decisions made around trade-offs. Nobody will see the entire system you design, laid out bare on your computer or in your notebook. Nobody will ever see your ideas for personas, or the results from the research you do, or the hours you've invested in iterating on a single attribute of your design. Nobody will go through past conversations you've had with peers, co-workers, and potential users about your design. But these things will absolutely be reflected in whatever it is you create.If we look at some of the most famous paintings in history we can see a very real interpretation of what I'm describing here. Using X-ray techniques we can see layer upon layer of old paint hidden beneath masterpieces like Picasso's The Blue Room, Van Gogh's Patch of Grass, and even (highly debated) da Vinci's the Mona Lisa.Beneath each work of art lies another, often rougher or incomplete work of art, the product the artist slaved away on before smothering it in even more paint, to get the details right. Often we can see not just one, but several paintings buried beneath the final work.We can see this intentionality in modern design guidelines too. Like Apple's Human Interface Guidelines or Google's Material Design. Each design system contains a vast library of design principles and recommendations, some of which are so nuanced it will make any non-designer's head spin. Just look at Material Design's color page for an example of the thinking that has gone into color alone; the page is massive and rich with detail.To put this another way: in anything we do, the gift we give others is investing our own limited time into the work.Trying to find shortcuts to get to a final design, or focusing on only one attribute of the work, or tabling research or iteration just to get something out the door - these things never help the end result of the work you'll do. They'll merely hinder it.What can often make a product experience so impactful is the work those who created put into it. To build something in such a thoughtful way that makes anyone oblivious to the fact.To quote the famous entertainer Teller, of Penn and Teller: "
        }
    ]
}